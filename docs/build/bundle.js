
(function(l, r) { if (!l || l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (self.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(self.document);
var app = (function () {
  'use strict';

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }

  function _typeof(obj) {
    "@babel/helpers - typeof";

    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function _typeof(obj) {
        return typeof obj;
      };
    } else {
      _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    } else if (call !== void 0) {
      throw new TypeError("Derived constructors may only return object or undefined");
    }

    return _assertThisInitialized(self);
  }

  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  function _iterableToArrayLimit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;

    var _s, _e;

    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  function _arrayLikeToArray$2(arr, len) {
    if (len == null || len > arr.length) len = arr.length;

    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }

  function _unsupportedIterableToArray$2(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray$2(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen);
  }

  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray$2(arr, i) || _nonIterableRest();
  }

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  var fails$D = function (exec) {
    try {
      return !!exec();
    } catch (error) {
      return true;
    }
  };

  var fails$C = fails$D;

  // Detect IE8's incomplete defineProperty implementation
  var descriptors = !fails$C(function () {
    // eslint-disable-next-line es/no-object-defineproperty -- required for testing
    return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
  });

  var FunctionPrototype$3 = Function.prototype;
  var bind$b = FunctionPrototype$3.bind;
  var call$n = FunctionPrototype$3.call;
  var callBind = bind$b && bind$b.bind(call$n);

  var functionUncurryThis = bind$b ? function (fn) {
    return fn && callBind(call$n, fn);
  } : function (fn) {
    return fn && function () {
      return call$n.apply(fn, arguments);
    };
  };

  var check = function (it) {
    return it && it.Math == Math && it;
  };

  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
  var global$17 =
    // eslint-disable-next-line es/no-global-this -- safe
    check(typeof globalThis == 'object' && globalThis) ||
    check(typeof window == 'object' && window) ||
    // eslint-disable-next-line no-restricted-globals -- safe
    check(typeof self == 'object' && self) ||
    check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
    // eslint-disable-next-line no-new-func -- fallback
    (function () { return this; })() || Function('return this')();

  var global$16 = global$17;

  var TypeError$l = global$16.TypeError;

  // `RequireObjectCoercible` abstract operation
  // https://tc39.es/ecma262/#sec-requireobjectcoercible
  var requireObjectCoercible$c = function (it) {
    if (it == undefined) throw TypeError$l("Can't call method on " + it);
    return it;
  };

  var global$15 = global$17;
  var requireObjectCoercible$b = requireObjectCoercible$c;

  var Object$5 = global$15.Object;

  // `ToObject` abstract operation
  // https://tc39.es/ecma262/#sec-toobject
  var toObject$h = function (argument) {
    return Object$5(requireObjectCoercible$b(argument));
  };

  var uncurryThis$F = functionUncurryThis;
  var toObject$g = toObject$h;

  var hasOwnProperty = uncurryThis$F({}.hasOwnProperty);

  // `HasOwnProperty` abstract operation
  // https://tc39.es/ecma262/#sec-hasownproperty
  var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
    return hasOwnProperty(toObject$g(it), key);
  };

  var DESCRIPTORS$g = descriptors;
  var hasOwn$h = hasOwnProperty_1;

  var FunctionPrototype$2 = Function.prototype;
  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
  var getDescriptor = DESCRIPTORS$g && Object.getOwnPropertyDescriptor;

  var EXISTS$1 = hasOwn$h(FunctionPrototype$2, 'name');
  // additional protection from minified / mangled / dropped function names
  var PROPER = EXISTS$1 && (function something() { /* empty */ }).name === 'something';
  var CONFIGURABLE = EXISTS$1 && (!DESCRIPTORS$g || (DESCRIPTORS$g && getDescriptor(FunctionPrototype$2, 'name').configurable));

  var functionName = {
    EXISTS: EXISTS$1,
    PROPER: PROPER,
    CONFIGURABLE: CONFIGURABLE
  };

  var objectDefineProperty = {};

  // `IsCallable` abstract operation
  // https://tc39.es/ecma262/#sec-iscallable
  var isCallable$p = function (argument) {
    return typeof argument == 'function';
  };

  var isCallable$o = isCallable$p;

  var isObject$l = function (it) {
    return typeof it == 'object' ? it !== null : isCallable$o(it);
  };

  var global$14 = global$17;
  var isObject$k = isObject$l;

  var document$3 = global$14.document;
  // typeof document.createElement is 'object' in old IE
  var EXISTS = isObject$k(document$3) && isObject$k(document$3.createElement);

  var documentCreateElement$2 = function (it) {
    return EXISTS ? document$3.createElement(it) : {};
  };

  var DESCRIPTORS$f = descriptors;
  var fails$B = fails$D;
  var createElement$1 = documentCreateElement$2;

  // Thank's IE8 for his funny defineProperty
  var ie8DomDefine = !DESCRIPTORS$f && !fails$B(function () {
    // eslint-disable-next-line es/no-object-defineproperty -- requied for testing
    return Object.defineProperty(createElement$1('div'), 'a', {
      get: function () { return 7; }
    }).a != 7;
  });

  var global$13 = global$17;
  var isObject$j = isObject$l;

  var String$5 = global$13.String;
  var TypeError$k = global$13.TypeError;

  // `Assert: Type(argument) is Object`
  var anObject$k = function (argument) {
    if (isObject$j(argument)) return argument;
    throw TypeError$k(String$5(argument) + ' is not an object');
  };

  var call$m = Function.prototype.call;

  var functionCall = call$m.bind ? call$m.bind(call$m) : function () {
    return call$m.apply(call$m, arguments);
  };

  var global$12 = global$17;
  var isCallable$n = isCallable$p;

  var aFunction = function (argument) {
    return isCallable$n(argument) ? argument : undefined;
  };

  var getBuiltIn$9 = function (namespace, method) {
    return arguments.length < 2 ? aFunction(global$12[namespace]) : global$12[namespace] && global$12[namespace][method];
  };

  var uncurryThis$E = functionUncurryThis;

  var objectIsPrototypeOf = uncurryThis$E({}.isPrototypeOf);

  var getBuiltIn$8 = getBuiltIn$9;

  var engineUserAgent = getBuiltIn$8('navigator', 'userAgent') || '';

  var global$11 = global$17;
  var userAgent$5 = engineUserAgent;

  var process$3 = global$11.process;
  var Deno = global$11.Deno;
  var versions = process$3 && process$3.versions || Deno && Deno.version;
  var v8 = versions && versions.v8;
  var match, version$1;

  if (v8) {
    match = v8.split('.');
    // in old Chrome, versions of V8 isn't V8 = Chrome / 10
    // but their correct versions are not interesting for us
    version$1 = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
  }

  // BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
  // so check `userAgent` even if `.v8` exists, but 0
  if (!version$1 && userAgent$5) {
    match = userAgent$5.match(/Edge\/(\d+)/);
    if (!match || match[1] >= 74) {
      match = userAgent$5.match(/Chrome\/(\d+)/);
      if (match) version$1 = +match[1];
    }
  }

  var engineV8Version = version$1;

  /* eslint-disable es/no-symbol -- required for testing */

  var V8_VERSION$3 = engineV8Version;
  var fails$A = fails$D;

  // eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
  var nativeSymbol = !!Object.getOwnPropertySymbols && !fails$A(function () {
    var symbol = Symbol();
    // Chrome 38 Symbol has incorrect toString conversion
    // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
    return !String(symbol) || !(Object(symbol) instanceof Symbol) ||
      // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
      !Symbol.sham && V8_VERSION$3 && V8_VERSION$3 < 41;
  });

  /* eslint-disable es/no-symbol -- required for testing */

  var NATIVE_SYMBOL$3 = nativeSymbol;

  var useSymbolAsUid = NATIVE_SYMBOL$3
    && !Symbol.sham
    && typeof Symbol.iterator == 'symbol';

  var global$10 = global$17;
  var getBuiltIn$7 = getBuiltIn$9;
  var isCallable$m = isCallable$p;
  var isPrototypeOf$8 = objectIsPrototypeOf;
  var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;

  var Object$4 = global$10.Object;

  var isSymbol$4 = USE_SYMBOL_AS_UID$1 ? function (it) {
    return typeof it == 'symbol';
  } : function (it) {
    var $Symbol = getBuiltIn$7('Symbol');
    return isCallable$m($Symbol) && isPrototypeOf$8($Symbol.prototype, Object$4(it));
  };

  var global$$ = global$17;

  var String$4 = global$$.String;

  var tryToString$5 = function (argument) {
    try {
      return String$4(argument);
    } catch (error) {
      return 'Object';
    }
  };

  var global$_ = global$17;
  var isCallable$l = isCallable$p;
  var tryToString$4 = tryToString$5;

  var TypeError$j = global$_.TypeError;

  // `Assert: IsCallable(argument) is true`
  var aCallable$9 = function (argument) {
    if (isCallable$l(argument)) return argument;
    throw TypeError$j(tryToString$4(argument) + ' is not a function');
  };

  var aCallable$8 = aCallable$9;

  // `GetMethod` abstract operation
  // https://tc39.es/ecma262/#sec-getmethod
  var getMethod$8 = function (V, P) {
    var func = V[P];
    return func == null ? undefined : aCallable$8(func);
  };

  var global$Z = global$17;
  var call$l = functionCall;
  var isCallable$k = isCallable$p;
  var isObject$i = isObject$l;

  var TypeError$i = global$Z.TypeError;

  // `OrdinaryToPrimitive` abstract operation
  // https://tc39.es/ecma262/#sec-ordinarytoprimitive
  var ordinaryToPrimitive$1 = function (input, pref) {
    var fn, val;
    if (pref === 'string' && isCallable$k(fn = input.toString) && !isObject$i(val = call$l(fn, input))) return val;
    if (isCallable$k(fn = input.valueOf) && !isObject$i(val = call$l(fn, input))) return val;
    if (pref !== 'string' && isCallable$k(fn = input.toString) && !isObject$i(val = call$l(fn, input))) return val;
    throw TypeError$i("Can't convert object to primitive value");
  };

  var shared$5 = {exports: {}};

  var global$Y = global$17;

  // eslint-disable-next-line es/no-object-defineproperty -- safe
  var defineProperty$a = Object.defineProperty;

  var setGlobal$3 = function (key, value) {
    try {
      defineProperty$a(global$Y, key, { value: value, configurable: true, writable: true });
    } catch (error) {
      global$Y[key] = value;
    } return value;
  };

  var global$X = global$17;
  var setGlobal$2 = setGlobal$3;

  var SHARED = '__core-js_shared__';
  var store$3 = global$X[SHARED] || setGlobal$2(SHARED, {});

  var sharedStore = store$3;

  var store$2 = sharedStore;

  (shared$5.exports = function (key, value) {
    return store$2[key] || (store$2[key] = value !== undefined ? value : {});
  })('versions', []).push({
    version: '3.19.1',
    mode: 'global',
    copyright: '© 2021 Denis Pushkarev (zloirock.ru)'
  });

  var uncurryThis$D = functionUncurryThis;

  var id$1 = 0;
  var postfix = Math.random();
  var toString$i = uncurryThis$D(1.0.toString);

  var uid$5 = function (key) {
    return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$i(++id$1 + postfix, 36);
  };

  var global$W = global$17;
  var shared$4 = shared$5.exports;
  var hasOwn$g = hasOwnProperty_1;
  var uid$4 = uid$5;
  var NATIVE_SYMBOL$2 = nativeSymbol;
  var USE_SYMBOL_AS_UID = useSymbolAsUid;

  var WellKnownSymbolsStore$1 = shared$4('wks');
  var Symbol$1 = global$W.Symbol;
  var symbolFor = Symbol$1 && Symbol$1['for'];
  var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid$4;

  var wellKnownSymbol$s = function (name) {
    if (!hasOwn$g(WellKnownSymbolsStore$1, name) || !(NATIVE_SYMBOL$2 || typeof WellKnownSymbolsStore$1[name] == 'string')) {
      var description = 'Symbol.' + name;
      if (NATIVE_SYMBOL$2 && hasOwn$g(Symbol$1, name)) {
        WellKnownSymbolsStore$1[name] = Symbol$1[name];
      } else if (USE_SYMBOL_AS_UID && symbolFor) {
        WellKnownSymbolsStore$1[name] = symbolFor(description);
      } else {
        WellKnownSymbolsStore$1[name] = createWellKnownSymbol(description);
      }
    } return WellKnownSymbolsStore$1[name];
  };

  var global$V = global$17;
  var call$k = functionCall;
  var isObject$h = isObject$l;
  var isSymbol$3 = isSymbol$4;
  var getMethod$7 = getMethod$8;
  var ordinaryToPrimitive = ordinaryToPrimitive$1;
  var wellKnownSymbol$r = wellKnownSymbol$s;

  var TypeError$h = global$V.TypeError;
  var TO_PRIMITIVE$1 = wellKnownSymbol$r('toPrimitive');

  // `ToPrimitive` abstract operation
  // https://tc39.es/ecma262/#sec-toprimitive
  var toPrimitive$1 = function (input, pref) {
    if (!isObject$h(input) || isSymbol$3(input)) return input;
    var exoticToPrim = getMethod$7(input, TO_PRIMITIVE$1);
    var result;
    if (exoticToPrim) {
      if (pref === undefined) pref = 'default';
      result = call$k(exoticToPrim, input, pref);
      if (!isObject$h(result) || isSymbol$3(result)) return result;
      throw TypeError$h("Can't convert object to primitive value");
    }
    if (pref === undefined) pref = 'number';
    return ordinaryToPrimitive(input, pref);
  };

  var toPrimitive = toPrimitive$1;
  var isSymbol$2 = isSymbol$4;

  // `ToPropertyKey` abstract operation
  // https://tc39.es/ecma262/#sec-topropertykey
  var toPropertyKey$5 = function (argument) {
    var key = toPrimitive(argument, 'string');
    return isSymbol$2(key) ? key : key + '';
  };

  var global$U = global$17;
  var DESCRIPTORS$e = descriptors;
  var IE8_DOM_DEFINE$1 = ie8DomDefine;
  var anObject$j = anObject$k;
  var toPropertyKey$4 = toPropertyKey$5;

  var TypeError$g = global$U.TypeError;
  // eslint-disable-next-line es/no-object-defineproperty -- safe
  var $defineProperty$1 = Object.defineProperty;

  // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty
  objectDefineProperty.f = DESCRIPTORS$e ? $defineProperty$1 : function defineProperty(O, P, Attributes) {
    anObject$j(O);
    P = toPropertyKey$4(P);
    anObject$j(Attributes);
    if (IE8_DOM_DEFINE$1) try {
      return $defineProperty$1(O, P, Attributes);
    } catch (error) { /* empty */ }
    if ('get' in Attributes || 'set' in Attributes) throw TypeError$g('Accessors not supported');
    if ('value' in Attributes) O[P] = Attributes.value;
    return O;
  };

  var DESCRIPTORS$d = descriptors;
  var FUNCTION_NAME_EXISTS = functionName.EXISTS;
  var uncurryThis$C = functionUncurryThis;
  var defineProperty$9 = objectDefineProperty.f;

  var FunctionPrototype$1 = Function.prototype;
  var functionToString$1 = uncurryThis$C(FunctionPrototype$1.toString);
  var nameRE = /^\s*function ([^ (]*)/;
  var regExpExec$3 = uncurryThis$C(nameRE.exec);
  var NAME$1 = 'name';

  // Function instances `.name` property
  // https://tc39.es/ecma262/#sec-function-instances-name
  if (DESCRIPTORS$d && !FUNCTION_NAME_EXISTS) {
    defineProperty$9(FunctionPrototype$1, NAME$1, {
      configurable: true,
      get: function () {
        try {
          return regExpExec$3(nameRE, functionToString$1(this))[1];
        } catch (error) {
          return '';
        }
      }
    });
  }

  var objectGetOwnPropertyDescriptor = {};

  var objectPropertyIsEnumerable = {};

  var $propertyIsEnumerable$1 = {}.propertyIsEnumerable;
  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
  var getOwnPropertyDescriptor$3 = Object.getOwnPropertyDescriptor;

  // Nashorn ~ JDK8 bug
  var NASHORN_BUG = getOwnPropertyDescriptor$3 && !$propertyIsEnumerable$1.call({ 1: 2 }, 1);

  // `Object.prototype.propertyIsEnumerable` method implementation
  // https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
  objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
    var descriptor = getOwnPropertyDescriptor$3(this, V);
    return !!descriptor && descriptor.enumerable;
  } : $propertyIsEnumerable$1;

  var createPropertyDescriptor$6 = function (bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  };

  var uncurryThis$B = functionUncurryThis;

  var toString$h = uncurryThis$B({}.toString);
  var stringSlice$9 = uncurryThis$B(''.slice);

  var classofRaw$1 = function (it) {
    return stringSlice$9(toString$h(it), 8, -1);
  };

  var global$T = global$17;
  var uncurryThis$A = functionUncurryThis;
  var fails$z = fails$D;
  var classof$d = classofRaw$1;

  var Object$3 = global$T.Object;
  var split = uncurryThis$A(''.split);

  // fallback for non-array-like ES3 and non-enumerable old V8 strings
  var indexedObject = fails$z(function () {
    // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
    // eslint-disable-next-line no-prototype-builtins -- safe
    return !Object$3('z').propertyIsEnumerable(0);
  }) ? function (it) {
    return classof$d(it) == 'String' ? split(it, '') : Object$3(it);
  } : Object$3;

  // toObject with fallback for non-array-like ES3 strings
  var IndexedObject$4 = indexedObject;
  var requireObjectCoercible$a = requireObjectCoercible$c;

  var toIndexedObject$b = function (it) {
    return IndexedObject$4(requireObjectCoercible$a(it));
  };

  var DESCRIPTORS$c = descriptors;
  var call$j = functionCall;
  var propertyIsEnumerableModule$2 = objectPropertyIsEnumerable;
  var createPropertyDescriptor$5 = createPropertyDescriptor$6;
  var toIndexedObject$a = toIndexedObject$b;
  var toPropertyKey$3 = toPropertyKey$5;
  var hasOwn$f = hasOwnProperty_1;
  var IE8_DOM_DEFINE = ie8DomDefine;

  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
  var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;

  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
  objectGetOwnPropertyDescriptor.f = DESCRIPTORS$c ? $getOwnPropertyDescriptor$1 : function getOwnPropertyDescriptor(O, P) {
    O = toIndexedObject$a(O);
    P = toPropertyKey$3(P);
    if (IE8_DOM_DEFINE) try {
      return $getOwnPropertyDescriptor$1(O, P);
    } catch (error) { /* empty */ }
    if (hasOwn$f(O, P)) return createPropertyDescriptor$5(!call$j(propertyIsEnumerableModule$2.f, O, P), O[P]);
  };

  var DESCRIPTORS$b = descriptors;
  var definePropertyModule$7 = objectDefineProperty;
  var createPropertyDescriptor$4 = createPropertyDescriptor$6;

  var createNonEnumerableProperty$b = DESCRIPTORS$b ? function (object, key, value) {
    return definePropertyModule$7.f(object, key, createPropertyDescriptor$4(1, value));
  } : function (object, key, value) {
    object[key] = value;
    return object;
  };

  var redefine$c = {exports: {}};

  var uncurryThis$z = functionUncurryThis;
  var isCallable$j = isCallable$p;
  var store$1 = sharedStore;

  var functionToString = uncurryThis$z(Function.toString);

  // this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
  if (!isCallable$j(store$1.inspectSource)) {
    store$1.inspectSource = function (it) {
      return functionToString(it);
    };
  }

  var inspectSource$4 = store$1.inspectSource;

  var global$S = global$17;
  var isCallable$i = isCallable$p;
  var inspectSource$3 = inspectSource$4;

  var WeakMap$1 = global$S.WeakMap;

  var nativeWeakMap = isCallable$i(WeakMap$1) && /native code/.test(inspectSource$3(WeakMap$1));

  var shared$3 = shared$5.exports;
  var uid$3 = uid$5;

  var keys$2 = shared$3('keys');

  var sharedKey$4 = function (key) {
    return keys$2[key] || (keys$2[key] = uid$3(key));
  };

  var hiddenKeys$6 = {};

  var NATIVE_WEAK_MAP = nativeWeakMap;
  var global$R = global$17;
  var uncurryThis$y = functionUncurryThis;
  var isObject$g = isObject$l;
  var createNonEnumerableProperty$a = createNonEnumerableProperty$b;
  var hasOwn$e = hasOwnProperty_1;
  var shared$2 = sharedStore;
  var sharedKey$3 = sharedKey$4;
  var hiddenKeys$5 = hiddenKeys$6;

  var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
  var TypeError$f = global$R.TypeError;
  var WeakMap = global$R.WeakMap;
  var set$2, get$1, has;

  var enforce = function (it) {
    return has(it) ? get$1(it) : set$2(it, {});
  };

  var getterFor = function (TYPE) {
    return function (it) {
      var state;
      if (!isObject$g(it) || (state = get$1(it)).type !== TYPE) {
        throw TypeError$f('Incompatible receiver, ' + TYPE + ' required');
      } return state;
    };
  };

  if (NATIVE_WEAK_MAP || shared$2.state) {
    var store = shared$2.state || (shared$2.state = new WeakMap());
    var wmget = uncurryThis$y(store.get);
    var wmhas = uncurryThis$y(store.has);
    var wmset = uncurryThis$y(store.set);
    set$2 = function (it, metadata) {
      if (wmhas(store, it)) throw new TypeError$f(OBJECT_ALREADY_INITIALIZED);
      metadata.facade = it;
      wmset(store, it, metadata);
      return metadata;
    };
    get$1 = function (it) {
      return wmget(store, it) || {};
    };
    has = function (it) {
      return wmhas(store, it);
    };
  } else {
    var STATE = sharedKey$3('state');
    hiddenKeys$5[STATE] = true;
    set$2 = function (it, metadata) {
      if (hasOwn$e(it, STATE)) throw new TypeError$f(OBJECT_ALREADY_INITIALIZED);
      metadata.facade = it;
      createNonEnumerableProperty$a(it, STATE, metadata);
      return metadata;
    };
    get$1 = function (it) {
      return hasOwn$e(it, STATE) ? it[STATE] : {};
    };
    has = function (it) {
      return hasOwn$e(it, STATE);
    };
  }

  var internalState = {
    set: set$2,
    get: get$1,
    has: has,
    enforce: enforce,
    getterFor: getterFor
  };

  var global$Q = global$17;
  var isCallable$h = isCallable$p;
  var hasOwn$d = hasOwnProperty_1;
  var createNonEnumerableProperty$9 = createNonEnumerableProperty$b;
  var setGlobal$1 = setGlobal$3;
  var inspectSource$2 = inspectSource$4;
  var InternalStateModule$7 = internalState;
  var CONFIGURABLE_FUNCTION_NAME$2 = functionName.CONFIGURABLE;

  var getInternalState$7 = InternalStateModule$7.get;
  var enforceInternalState$1 = InternalStateModule$7.enforce;
  var TEMPLATE = String(String).split('String');

  (redefine$c.exports = function (O, key, value, options) {
    var unsafe = options ? !!options.unsafe : false;
    var simple = options ? !!options.enumerable : false;
    var noTargetGet = options ? !!options.noTargetGet : false;
    var name = options && options.name !== undefined ? options.name : key;
    var state;
    if (isCallable$h(value)) {
      if (String(name).slice(0, 7) === 'Symbol(') {
        name = '[' + String(name).replace(/^Symbol\(([^)]*)\)/, '$1') + ']';
      }
      if (!hasOwn$d(value, 'name') || (CONFIGURABLE_FUNCTION_NAME$2 && value.name !== name)) {
        createNonEnumerableProperty$9(value, 'name', name);
      }
      state = enforceInternalState$1(value);
      if (!state.source) {
        state.source = TEMPLATE.join(typeof name == 'string' ? name : '');
      }
    }
    if (O === global$Q) {
      if (simple) O[key] = value;
      else setGlobal$1(key, value);
      return;
    } else if (!unsafe) {
      delete O[key];
    } else if (!noTargetGet && O[key]) {
      simple = true;
    }
    if (simple) O[key] = value;
    else createNonEnumerableProperty$9(O, key, value);
  // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
  })(Function.prototype, 'toString', function toString() {
    return isCallable$h(this) && getInternalState$7(this).source || inspectSource$2(this);
  });

  var objectGetOwnPropertyNames = {};

  var ceil = Math.ceil;
  var floor$5 = Math.floor;

  // `ToIntegerOrInfinity` abstract operation
  // https://tc39.es/ecma262/#sec-tointegerorinfinity
  var toIntegerOrInfinity$9 = function (argument) {
    var number = +argument;
    // eslint-disable-next-line no-self-compare -- safe
    return number !== number || number === 0 ? 0 : (number > 0 ? floor$5 : ceil)(number);
  };

  var toIntegerOrInfinity$8 = toIntegerOrInfinity$9;

  var max$4 = Math.max;
  var min$7 = Math.min;

  // Helper for a popular repeating case of the spec:
  // Let integer be ? ToInteger(index).
  // If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
  var toAbsoluteIndex$6 = function (index, length) {
    var integer = toIntegerOrInfinity$8(index);
    return integer < 0 ? max$4(integer + length, 0) : min$7(integer, length);
  };

  var toIntegerOrInfinity$7 = toIntegerOrInfinity$9;

  var min$6 = Math.min;

  // `ToLength` abstract operation
  // https://tc39.es/ecma262/#sec-tolength
  var toLength$9 = function (argument) {
    return argument > 0 ? min$6(toIntegerOrInfinity$7(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
  };

  var toLength$8 = toLength$9;

  // `LengthOfArrayLike` abstract operation
  // https://tc39.es/ecma262/#sec-lengthofarraylike
  var lengthOfArrayLike$e = function (obj) {
    return toLength$8(obj.length);
  };

  var toIndexedObject$9 = toIndexedObject$b;
  var toAbsoluteIndex$5 = toAbsoluteIndex$6;
  var lengthOfArrayLike$d = lengthOfArrayLike$e;

  // `Array.prototype.{ indexOf, includes }` methods implementation
  var createMethod$4 = function (IS_INCLUDES) {
    return function ($this, el, fromIndex) {
      var O = toIndexedObject$9($this);
      var length = lengthOfArrayLike$d(O);
      var index = toAbsoluteIndex$5(fromIndex, length);
      var value;
      // Array#includes uses SameValueZero equality algorithm
      // eslint-disable-next-line no-self-compare -- NaN check
      if (IS_INCLUDES && el != el) while (length > index) {
        value = O[index++];
        // eslint-disable-next-line no-self-compare -- NaN check
        if (value != value) return true;
      // Array#indexOf ignores holes, Array#includes - not
      } else for (;length > index; index++) {
        if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
      } return !IS_INCLUDES && -1;
    };
  };

  var arrayIncludes = {
    // `Array.prototype.includes` method
    // https://tc39.es/ecma262/#sec-array.prototype.includes
    includes: createMethod$4(true),
    // `Array.prototype.indexOf` method
    // https://tc39.es/ecma262/#sec-array.prototype.indexof
    indexOf: createMethod$4(false)
  };

  var uncurryThis$x = functionUncurryThis;
  var hasOwn$c = hasOwnProperty_1;
  var toIndexedObject$8 = toIndexedObject$b;
  var indexOf$2 = arrayIncludes.indexOf;
  var hiddenKeys$4 = hiddenKeys$6;

  var push$6 = uncurryThis$x([].push);

  var objectKeysInternal = function (object, names) {
    var O = toIndexedObject$8(object);
    var i = 0;
    var result = [];
    var key;
    for (key in O) !hasOwn$c(hiddenKeys$4, key) && hasOwn$c(O, key) && push$6(result, key);
    // Don't enum bug & hidden keys
    while (names.length > i) if (hasOwn$c(O, key = names[i++])) {
      ~indexOf$2(result, key) || push$6(result, key);
    }
    return result;
  };

  // IE8- don't enum bug keys
  var enumBugKeys$3 = [
    'constructor',
    'hasOwnProperty',
    'isPrototypeOf',
    'propertyIsEnumerable',
    'toLocaleString',
    'toString',
    'valueOf'
  ];

  var internalObjectKeys$1 = objectKeysInternal;
  var enumBugKeys$2 = enumBugKeys$3;

  var hiddenKeys$3 = enumBugKeys$2.concat('length', 'prototype');

  // `Object.getOwnPropertyNames` method
  // https://tc39.es/ecma262/#sec-object.getownpropertynames
  // eslint-disable-next-line es/no-object-getownpropertynames -- safe
  objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
    return internalObjectKeys$1(O, hiddenKeys$3);
  };

  var objectGetOwnPropertySymbols = {};

  // eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
  objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;

  var getBuiltIn$6 = getBuiltIn$9;
  var uncurryThis$w = functionUncurryThis;
  var getOwnPropertyNamesModule$2 = objectGetOwnPropertyNames;
  var getOwnPropertySymbolsModule$2 = objectGetOwnPropertySymbols;
  var anObject$i = anObject$k;

  var concat$3 = uncurryThis$w([].concat);

  // all object keys, includes non-enumerable and symbols
  var ownKeys$2 = getBuiltIn$6('Reflect', 'ownKeys') || function ownKeys(it) {
    var keys = getOwnPropertyNamesModule$2.f(anObject$i(it));
    var getOwnPropertySymbols = getOwnPropertySymbolsModule$2.f;
    return getOwnPropertySymbols ? concat$3(keys, getOwnPropertySymbols(it)) : keys;
  };

  var hasOwn$b = hasOwnProperty_1;
  var ownKeys$1 = ownKeys$2;
  var getOwnPropertyDescriptorModule$3 = objectGetOwnPropertyDescriptor;
  var definePropertyModule$6 = objectDefineProperty;

  var copyConstructorProperties$2 = function (target, source) {
    var keys = ownKeys$1(source);
    var defineProperty = definePropertyModule$6.f;
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule$3.f;
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (!hasOwn$b(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  };

  var fails$y = fails$D;
  var isCallable$g = isCallable$p;

  var replacement = /#|\.prototype\./;

  var isForced$4 = function (feature, detection) {
    var value = data[normalize(feature)];
    return value == POLYFILL ? true
      : value == NATIVE ? false
      : isCallable$g(detection) ? fails$y(detection)
      : !!detection;
  };

  var normalize = isForced$4.normalize = function (string) {
    return String(string).replace(replacement, '.').toLowerCase();
  };

  var data = isForced$4.data = {};
  var NATIVE = isForced$4.NATIVE = 'N';
  var POLYFILL = isForced$4.POLYFILL = 'P';

  var isForced_1 = isForced$4;

  var global$P = global$17;
  var getOwnPropertyDescriptor$2 = objectGetOwnPropertyDescriptor.f;
  var createNonEnumerableProperty$8 = createNonEnumerableProperty$b;
  var redefine$b = redefine$c.exports;
  var setGlobal = setGlobal$3;
  var copyConstructorProperties$1 = copyConstructorProperties$2;
  var isForced$3 = isForced_1;

  /*
    options.target      - name of the target object
    options.global      - target is the global object
    options.stat        - export as static methods of target
    options.proto       - export as prototype methods of target
    options.real        - real prototype method for the `pure` version
    options.forced      - export even if the native feature is available
    options.bind        - bind methods to the target, required for the `pure` version
    options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
    options.unsafe      - use the simple assignment of property instead of delete + defineProperty
    options.sham        - add a flag to not completely full polyfills
    options.enumerable  - export as enumerable property
    options.noTargetGet - prevent calling a getter on target
    options.name        - the .name of the function if it does not match the key
  */
  var _export = function (options, source) {
    var TARGET = options.target;
    var GLOBAL = options.global;
    var STATIC = options.stat;
    var FORCED, target, key, targetProperty, sourceProperty, descriptor;
    if (GLOBAL) {
      target = global$P;
    } else if (STATIC) {
      target = global$P[TARGET] || setGlobal(TARGET, {});
    } else {
      target = (global$P[TARGET] || {}).prototype;
    }
    if (target) for (key in source) {
      sourceProperty = source[key];
      if (options.noTargetGet) {
        descriptor = getOwnPropertyDescriptor$2(target, key);
        targetProperty = descriptor && descriptor.value;
      } else targetProperty = target[key];
      FORCED = isForced$3(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
      // contained in target
      if (!FORCED && targetProperty !== undefined) {
        if (typeof sourceProperty == typeof targetProperty) continue;
        copyConstructorProperties$1(sourceProperty, targetProperty);
      }
      // add a flag to not completely full polyfills
      if (options.sham || (targetProperty && targetProperty.sham)) {
        createNonEnumerableProperty$8(sourceProperty, 'sham', true);
      }
      // extend global
      redefine$b(target, key, sourceProperty, options);
    }
  };

  var classof$c = classofRaw$1;

  // `IsArray` abstract operation
  // https://tc39.es/ecma262/#sec-isarray
  // eslint-disable-next-line es/no-array-isarray -- safe
  var isArray$4 = Array.isArray || function isArray(argument) {
    return classof$c(argument) == 'Array';
  };

  var wellKnownSymbol$q = wellKnownSymbol$s;

  var TO_STRING_TAG$4 = wellKnownSymbol$q('toStringTag');
  var test$1 = {};

  test$1[TO_STRING_TAG$4] = 'z';

  var toStringTagSupport = String(test$1) === '[object z]';

  var global$O = global$17;
  var TO_STRING_TAG_SUPPORT$2 = toStringTagSupport;
  var isCallable$f = isCallable$p;
  var classofRaw = classofRaw$1;
  var wellKnownSymbol$p = wellKnownSymbol$s;

  var TO_STRING_TAG$3 = wellKnownSymbol$p('toStringTag');
  var Object$2 = global$O.Object;

  // ES3 wrong here
  var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

  // fallback for IE11 Script Access Denied error
  var tryGet = function (it, key) {
    try {
      return it[key];
    } catch (error) { /* empty */ }
  };

  // getting tag from ES6+ `Object.prototype.toString`
  var classof$b = TO_STRING_TAG_SUPPORT$2 ? classofRaw : function (it) {
    var O, tag, result;
    return it === undefined ? 'Undefined' : it === null ? 'Null'
      // @@toStringTag case
      : typeof (tag = tryGet(O = Object$2(it), TO_STRING_TAG$3)) == 'string' ? tag
      // builtinTag case
      : CORRECT_ARGUMENTS ? classofRaw(O)
      // ES3 arguments fallback
      : (result = classofRaw(O)) == 'Object' && isCallable$f(O.callee) ? 'Arguments' : result;
  };

  var uncurryThis$v = functionUncurryThis;
  var fails$x = fails$D;
  var isCallable$e = isCallable$p;
  var classof$a = classof$b;
  var getBuiltIn$5 = getBuiltIn$9;
  var inspectSource$1 = inspectSource$4;

  var noop$1 = function () { /* empty */ };
  var empty$1 = [];
  var construct$1 = getBuiltIn$5('Reflect', 'construct');
  var constructorRegExp = /^\s*(?:class|function)\b/;
  var exec$3 = uncurryThis$v(constructorRegExp.exec);
  var INCORRECT_TO_STRING = !constructorRegExp.exec(noop$1);

  var isConstructorModern = function (argument) {
    if (!isCallable$e(argument)) return false;
    try {
      construct$1(noop$1, empty$1, argument);
      return true;
    } catch (error) {
      return false;
    }
  };

  var isConstructorLegacy = function (argument) {
    if (!isCallable$e(argument)) return false;
    switch (classof$a(argument)) {
      case 'AsyncFunction':
      case 'GeneratorFunction':
      case 'AsyncGeneratorFunction': return false;
      // we can't check .prototype since constructors produced by .bind haven't it
    } return INCORRECT_TO_STRING || !!exec$3(constructorRegExp, inspectSource$1(argument));
  };

  // `IsConstructor` abstract operation
  // https://tc39.es/ecma262/#sec-isconstructor
  var isConstructor$4 = !construct$1 || fails$x(function () {
    var called;
    return isConstructorModern(isConstructorModern.call)
      || !isConstructorModern(Object)
      || !isConstructorModern(function () { called = true; })
      || called;
  }) ? isConstructorLegacy : isConstructorModern;

  var toPropertyKey$2 = toPropertyKey$5;
  var definePropertyModule$5 = objectDefineProperty;
  var createPropertyDescriptor$3 = createPropertyDescriptor$6;

  var createProperty$5 = function (object, key, value) {
    var propertyKey = toPropertyKey$2(key);
    if (propertyKey in object) definePropertyModule$5.f(object, propertyKey, createPropertyDescriptor$3(0, value));
    else object[propertyKey] = value;
  };

  var fails$w = fails$D;
  var wellKnownSymbol$o = wellKnownSymbol$s;
  var V8_VERSION$2 = engineV8Version;

  var SPECIES$6 = wellKnownSymbol$o('species');

  var arrayMethodHasSpeciesSupport$5 = function (METHOD_NAME) {
    // We can't use this feature detection in V8 since it causes
    // deoptimization and serious performance degradation
    // https://github.com/zloirock/core-js/issues/677
    return V8_VERSION$2 >= 51 || !fails$w(function () {
      var array = [];
      var constructor = array.constructor = {};
      constructor[SPECIES$6] = function () {
        return { foo: 1 };
      };
      return array[METHOD_NAME](Boolean).foo !== 1;
    });
  };

  var uncurryThis$u = functionUncurryThis;

  var arraySlice$9 = uncurryThis$u([].slice);

  var $$v = _export;
  var global$N = global$17;
  var isArray$3 = isArray$4;
  var isConstructor$3 = isConstructor$4;
  var isObject$f = isObject$l;
  var toAbsoluteIndex$4 = toAbsoluteIndex$6;
  var lengthOfArrayLike$c = lengthOfArrayLike$e;
  var toIndexedObject$7 = toIndexedObject$b;
  var createProperty$4 = createProperty$5;
  var wellKnownSymbol$n = wellKnownSymbol$s;
  var arrayMethodHasSpeciesSupport$4 = arrayMethodHasSpeciesSupport$5;
  var un$Slice = arraySlice$9;

  var HAS_SPECIES_SUPPORT$3 = arrayMethodHasSpeciesSupport$4('slice');

  var SPECIES$5 = wellKnownSymbol$n('species');
  var Array$6 = global$N.Array;
  var max$3 = Math.max;

  // `Array.prototype.slice` method
  // https://tc39.es/ecma262/#sec-array.prototype.slice
  // fallback for not array-like ES3 strings and DOM objects
  $$v({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT$3 }, {
    slice: function slice(start, end) {
      var O = toIndexedObject$7(this);
      var length = lengthOfArrayLike$c(O);
      var k = toAbsoluteIndex$4(start, length);
      var fin = toAbsoluteIndex$4(end === undefined ? length : end, length);
      // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
      var Constructor, result, n;
      if (isArray$3(O)) {
        Constructor = O.constructor;
        // cross-realm fallback
        if (isConstructor$3(Constructor) && (Constructor === Array$6 || isArray$3(Constructor.prototype))) {
          Constructor = undefined;
        } else if (isObject$f(Constructor)) {
          Constructor = Constructor[SPECIES$5];
          if (Constructor === null) Constructor = undefined;
        }
        if (Constructor === Array$6 || Constructor === undefined) {
          return un$Slice(O, k, fin);
        }
      }
      result = new (Constructor === undefined ? Array$6 : Constructor)(max$3(fin - k, 0));
      for (n = 0; k < fin; k++, n++) if (k in O) createProperty$4(result, n, O[k]);
      result.length = n;
      return result;
    }
  });

  var TO_STRING_TAG_SUPPORT$1 = toStringTagSupport;
  var classof$9 = classof$b;

  // `Object.prototype.toString` method implementation
  // https://tc39.es/ecma262/#sec-object.prototype.tostring
  var objectToString = TO_STRING_TAG_SUPPORT$1 ? {}.toString : function toString() {
    return '[object ' + classof$9(this) + ']';
  };

  var TO_STRING_TAG_SUPPORT = toStringTagSupport;
  var redefine$a = redefine$c.exports;
  var toString$g = objectToString;

  // `Object.prototype.toString` method
  // https://tc39.es/ecma262/#sec-object.prototype.tostring
  if (!TO_STRING_TAG_SUPPORT) {
    redefine$a(Object.prototype, 'toString', toString$g, { unsafe: true });
  }

  // iterable DOM collections
  // flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
  var domIterables = {
    CSSRuleList: 0,
    CSSStyleDeclaration: 0,
    CSSValueList: 0,
    ClientRectList: 0,
    DOMRectList: 0,
    DOMStringList: 0,
    DOMTokenList: 1,
    DataTransferItemList: 0,
    FileList: 0,
    HTMLAllCollection: 0,
    HTMLCollection: 0,
    HTMLFormElement: 0,
    HTMLSelectElement: 0,
    MediaList: 0,
    MimeTypeArray: 0,
    NamedNodeMap: 0,
    NodeList: 1,
    PaintRequestList: 0,
    Plugin: 0,
    PluginArray: 0,
    SVGLengthList: 0,
    SVGNumberList: 0,
    SVGPathSegList: 0,
    SVGPointList: 0,
    SVGStringList: 0,
    SVGTransformList: 0,
    SourceBufferList: 0,
    StyleSheetList: 0,
    TextTrackCueList: 0,
    TextTrackList: 0,
    TouchList: 0
  };

  // in old WebKit versions, `element.classList` is not an instance of global `DOMTokenList`
  var documentCreateElement$1 = documentCreateElement$2;

  var classList = documentCreateElement$1('span').classList;
  var DOMTokenListPrototype$2 = classList && classList.constructor && classList.constructor.prototype;

  var domTokenListPrototype = DOMTokenListPrototype$2 === Object.prototype ? undefined : DOMTokenListPrototype$2;

  var uncurryThis$t = functionUncurryThis;
  var aCallable$7 = aCallable$9;

  var bind$a = uncurryThis$t(uncurryThis$t.bind);

  // optional / simple context binding
  var functionBindContext = function (fn, that) {
    aCallable$7(fn);
    return that === undefined ? fn : bind$a ? bind$a(fn, that) : function (/* ...args */) {
      return fn.apply(that, arguments);
    };
  };

  var global$M = global$17;
  var isArray$2 = isArray$4;
  var isConstructor$2 = isConstructor$4;
  var isObject$e = isObject$l;
  var wellKnownSymbol$m = wellKnownSymbol$s;

  var SPECIES$4 = wellKnownSymbol$m('species');
  var Array$5 = global$M.Array;

  // a part of `ArraySpeciesCreate` abstract operation
  // https://tc39.es/ecma262/#sec-arrayspeciescreate
  var arraySpeciesConstructor$1 = function (originalArray) {
    var C;
    if (isArray$2(originalArray)) {
      C = originalArray.constructor;
      // cross-realm fallback
      if (isConstructor$2(C) && (C === Array$5 || isArray$2(C.prototype))) C = undefined;
      else if (isObject$e(C)) {
        C = C[SPECIES$4];
        if (C === null) C = undefined;
      }
    } return C === undefined ? Array$5 : C;
  };

  var arraySpeciesConstructor = arraySpeciesConstructor$1;

  // `ArraySpeciesCreate` abstract operation
  // https://tc39.es/ecma262/#sec-arrayspeciescreate
  var arraySpeciesCreate$3 = function (originalArray, length) {
    return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
  };

  var bind$9 = functionBindContext;
  var uncurryThis$s = functionUncurryThis;
  var IndexedObject$3 = indexedObject;
  var toObject$f = toObject$h;
  var lengthOfArrayLike$b = lengthOfArrayLike$e;
  var arraySpeciesCreate$2 = arraySpeciesCreate$3;

  var push$5 = uncurryThis$s([].push);

  // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
  var createMethod$3 = function (TYPE) {
    var IS_MAP = TYPE == 1;
    var IS_FILTER = TYPE == 2;
    var IS_SOME = TYPE == 3;
    var IS_EVERY = TYPE == 4;
    var IS_FIND_INDEX = TYPE == 6;
    var IS_FILTER_REJECT = TYPE == 7;
    var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
    return function ($this, callbackfn, that, specificCreate) {
      var O = toObject$f($this);
      var self = IndexedObject$3(O);
      var boundFunction = bind$9(callbackfn, that);
      var length = lengthOfArrayLike$b(self);
      var index = 0;
      var create = specificCreate || arraySpeciesCreate$2;
      var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
      var value, result;
      for (;length > index; index++) if (NO_HOLES || index in self) {
        value = self[index];
        result = boundFunction(value, index, O);
        if (TYPE) {
          if (IS_MAP) target[index] = result; // map
          else if (result) switch (TYPE) {
            case 3: return true;              // some
            case 5: return value;             // find
            case 6: return index;             // findIndex
            case 2: push$5(target, value);      // filter
          } else switch (TYPE) {
            case 4: return false;             // every
            case 7: push$5(target, value);      // filterReject
          }
        }
      }
      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
    };
  };

  var arrayIteration = {
    // `Array.prototype.forEach` method
    // https://tc39.es/ecma262/#sec-array.prototype.foreach
    forEach: createMethod$3(0),
    // `Array.prototype.map` method
    // https://tc39.es/ecma262/#sec-array.prototype.map
    map: createMethod$3(1),
    // `Array.prototype.filter` method
    // https://tc39.es/ecma262/#sec-array.prototype.filter
    filter: createMethod$3(2),
    // `Array.prototype.some` method
    // https://tc39.es/ecma262/#sec-array.prototype.some
    some: createMethod$3(3),
    // `Array.prototype.every` method
    // https://tc39.es/ecma262/#sec-array.prototype.every
    every: createMethod$3(4),
    // `Array.prototype.find` method
    // https://tc39.es/ecma262/#sec-array.prototype.find
    find: createMethod$3(5),
    // `Array.prototype.findIndex` method
    // https://tc39.es/ecma262/#sec-array.prototype.findIndex
    findIndex: createMethod$3(6),
    // `Array.prototype.filterReject` method
    // https://github.com/tc39/proposal-array-filtering
    filterReject: createMethod$3(7)
  };

  var fails$v = fails$D;

  var arrayMethodIsStrict$4 = function (METHOD_NAME, argument) {
    var method = [][METHOD_NAME];
    return !!method && fails$v(function () {
      // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing
      method.call(null, argument || function () { throw 1; }, 1);
    });
  };

  var $forEach$2 = arrayIteration.forEach;
  var arrayMethodIsStrict$3 = arrayMethodIsStrict$4;

  var STRICT_METHOD$3 = arrayMethodIsStrict$3('forEach');

  // `Array.prototype.forEach` method implementation
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  var arrayForEach = !STRICT_METHOD$3 ? function forEach(callbackfn /* , thisArg */) {
    return $forEach$2(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  // eslint-disable-next-line es/no-array-prototype-foreach -- safe
  } : [].forEach;

  var global$L = global$17;
  var DOMIterables$1 = domIterables;
  var DOMTokenListPrototype$1 = domTokenListPrototype;
  var forEach$1 = arrayForEach;
  var createNonEnumerableProperty$7 = createNonEnumerableProperty$b;

  var handlePrototype$1 = function (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype && CollectionPrototype.forEach !== forEach$1) try {
      createNonEnumerableProperty$7(CollectionPrototype, 'forEach', forEach$1);
    } catch (error) {
      CollectionPrototype.forEach = forEach$1;
    }
  };

  for (var COLLECTION_NAME$1 in DOMIterables$1) {
    if (DOMIterables$1[COLLECTION_NAME$1]) {
      handlePrototype$1(global$L[COLLECTION_NAME$1] && global$L[COLLECTION_NAME$1].prototype);
    }
  }

  handlePrototype$1(DOMTokenListPrototype$1);

  var internalObjectKeys = objectKeysInternal;
  var enumBugKeys$1 = enumBugKeys$3;

  // `Object.keys` method
  // https://tc39.es/ecma262/#sec-object.keys
  // eslint-disable-next-line es/no-object-keys -- safe
  var objectKeys$3 = Object.keys || function keys(O) {
    return internalObjectKeys(O, enumBugKeys$1);
  };

  var $$u = _export;
  var toObject$e = toObject$h;
  var nativeKeys = objectKeys$3;
  var fails$u = fails$D;

  var FAILS_ON_PRIMITIVES$2 = fails$u(function () { nativeKeys(1); });

  // `Object.keys` method
  // https://tc39.es/ecma262/#sec-object.keys
  $$u({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES$2 }, {
    keys: function keys(it) {
      return nativeKeys(toObject$e(it));
    }
  });

  var FunctionPrototype = Function.prototype;
  var apply$8 = FunctionPrototype.apply;
  var bind$8 = FunctionPrototype.bind;
  var call$i = FunctionPrototype.call;

  // eslint-disable-next-line es/no-reflect -- safe
  var functionApply = typeof Reflect == 'object' && Reflect.apply || (bind$8 ? call$i.bind(apply$8) : function () {
    return call$i.apply(apply$8, arguments);
  });

  var global$K = global$17;
  var uncurryThis$r = functionUncurryThis;
  var aCallable$6 = aCallable$9;
  var isObject$d = isObject$l;
  var hasOwn$a = hasOwnProperty_1;
  var arraySlice$8 = arraySlice$9;

  var Function$2 = global$K.Function;
  var concat$2 = uncurryThis$r([].concat);
  var join$1 = uncurryThis$r([].join);
  var factories = {};

  var construct = function (C, argsLength, args) {
    if (!hasOwn$a(factories, argsLength)) {
      for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';
      factories[argsLength] = Function$2('C,a', 'return new C(' + join$1(list, ',') + ')');
    } return factories[argsLength](C, args);
  };

  // `Function.prototype.bind` method implementation
  // https://tc39.es/ecma262/#sec-function.prototype.bind
  var functionBind = Function$2.bind || function bind(that /* , ...args */) {
    var F = aCallable$6(this);
    var Prototype = F.prototype;
    var partArgs = arraySlice$8(arguments, 1);
    var boundFunction = function bound(/* args... */) {
      var args = concat$2(partArgs, arraySlice$8(arguments));
      return this instanceof boundFunction ? construct(F, args.length, args) : F.apply(that, args);
    };
    if (isObject$d(Prototype)) boundFunction.prototype = Prototype;
    return boundFunction;
  };

  var global$J = global$17;
  var isConstructor$1 = isConstructor$4;
  var tryToString$3 = tryToString$5;

  var TypeError$e = global$J.TypeError;

  // `Assert: IsConstructor(argument) is true`
  var aConstructor$3 = function (argument) {
    if (isConstructor$1(argument)) return argument;
    throw TypeError$e(tryToString$3(argument) + ' is not a constructor');
  };

  var DESCRIPTORS$a = descriptors;
  var definePropertyModule$4 = objectDefineProperty;
  var anObject$h = anObject$k;
  var toIndexedObject$6 = toIndexedObject$b;
  var objectKeys$2 = objectKeys$3;

  // `Object.defineProperties` method
  // https://tc39.es/ecma262/#sec-object.defineproperties
  // eslint-disable-next-line es/no-object-defineproperties -- safe
  var objectDefineProperties = DESCRIPTORS$a ? Object.defineProperties : function defineProperties(O, Properties) {
    anObject$h(O);
    var props = toIndexedObject$6(Properties);
    var keys = objectKeys$2(Properties);
    var length = keys.length;
    var index = 0;
    var key;
    while (length > index) definePropertyModule$4.f(O, key = keys[index++], props[key]);
    return O;
  };

  var getBuiltIn$4 = getBuiltIn$9;

  var html$2 = getBuiltIn$4('document', 'documentElement');

  /* global ActiveXObject -- old IE, WSH */

  var anObject$g = anObject$k;
  var defineProperties = objectDefineProperties;
  var enumBugKeys = enumBugKeys$3;
  var hiddenKeys$2 = hiddenKeys$6;
  var html$1 = html$2;
  var documentCreateElement = documentCreateElement$2;
  var sharedKey$2 = sharedKey$4;

  var GT = '>';
  var LT = '<';
  var PROTOTYPE$2 = 'prototype';
  var SCRIPT = 'script';
  var IE_PROTO$1 = sharedKey$2('IE_PROTO');

  var EmptyConstructor = function () { /* empty */ };

  var scriptTag = function (content) {
    return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
  };

  // Create object with fake `null` prototype: use ActiveX Object with cleared prototype
  var NullProtoObjectViaActiveX = function (activeXDocument) {
    activeXDocument.write(scriptTag(''));
    activeXDocument.close();
    var temp = activeXDocument.parentWindow.Object;
    activeXDocument = null; // avoid memory leak
    return temp;
  };

  // Create object with fake `null` prototype: use iframe Object with cleared prototype
  var NullProtoObjectViaIFrame = function () {
    // Thrash, waste and sodomy: IE GC bug
    var iframe = documentCreateElement('iframe');
    var JS = 'java' + SCRIPT + ':';
    var iframeDocument;
    iframe.style.display = 'none';
    html$1.appendChild(iframe);
    // https://github.com/zloirock/core-js/issues/475
    iframe.src = String(JS);
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(scriptTag('document.F=Object'));
    iframeDocument.close();
    return iframeDocument.F;
  };

  // Check for document.domain and active x support
  // No need to use active x approach when document.domain is not set
  // see https://github.com/es-shims/es5-shim/issues/150
  // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
  // avoid IE GC bug
  var activeXDocument;
  var NullProtoObject = function () {
    try {
      activeXDocument = new ActiveXObject('htmlfile');
    } catch (error) { /* ignore */ }
    NullProtoObject = typeof document != 'undefined'
      ? document.domain && activeXDocument
        ? NullProtoObjectViaActiveX(activeXDocument) // old IE
        : NullProtoObjectViaIFrame()
      : NullProtoObjectViaActiveX(activeXDocument); // WSH
    var length = enumBugKeys.length;
    while (length--) delete NullProtoObject[PROTOTYPE$2][enumBugKeys[length]];
    return NullProtoObject();
  };

  hiddenKeys$2[IE_PROTO$1] = true;

  // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create
  var objectCreate = Object.create || function create(O, Properties) {
    var result;
    if (O !== null) {
      EmptyConstructor[PROTOTYPE$2] = anObject$g(O);
      result = new EmptyConstructor();
      EmptyConstructor[PROTOTYPE$2] = null;
      // add "__proto__" for Object.getPrototypeOf polyfill
      result[IE_PROTO$1] = O;
    } else result = NullProtoObject();
    return Properties === undefined ? result : defineProperties(result, Properties);
  };

  var $$t = _export;
  var getBuiltIn$3 = getBuiltIn$9;
  var apply$7 = functionApply;
  var bind$7 = functionBind;
  var aConstructor$2 = aConstructor$3;
  var anObject$f = anObject$k;
  var isObject$c = isObject$l;
  var create$5 = objectCreate;
  var fails$t = fails$D;

  var nativeConstruct = getBuiltIn$3('Reflect', 'construct');
  var ObjectPrototype$4 = Object.prototype;
  var push$4 = [].push;

  // `Reflect.construct` method
  // https://tc39.es/ecma262/#sec-reflect.construct
  // MS Edge supports only 2 arguments and argumentsList argument is optional
  // FF Nightly sets third argument as `new.target`, but does not create `this` from it
  var NEW_TARGET_BUG = fails$t(function () {
    function F() { /* empty */ }
    return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);
  });

  var ARGS_BUG = !fails$t(function () {
    nativeConstruct(function () { /* empty */ });
  });

  var FORCED$9 = NEW_TARGET_BUG || ARGS_BUG;

  $$t({ target: 'Reflect', stat: true, forced: FORCED$9, sham: FORCED$9 }, {
    construct: function construct(Target, args /* , newTarget */) {
      aConstructor$2(Target);
      anObject$f(args);
      var newTarget = arguments.length < 3 ? Target : aConstructor$2(arguments[2]);
      if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);
      if (Target == newTarget) {
        // w/o altered newTarget, optimization for 0-4 arguments
        switch (args.length) {
          case 0: return new Target();
          case 1: return new Target(args[0]);
          case 2: return new Target(args[0], args[1]);
          case 3: return new Target(args[0], args[1], args[2]);
          case 4: return new Target(args[0], args[1], args[2], args[3]);
        }
        // w/o altered newTarget, lot of arguments case
        var $args = [null];
        apply$7(push$4, $args, args);
        return new (apply$7(bind$7, Target, $args))();
      }
      // with altered newTarget, not support built-in constructors
      var proto = newTarget.prototype;
      var instance = create$5(isObject$c(proto) ? proto : ObjectPrototype$4);
      var result = apply$7(Target, instance, args);
      return isObject$c(result) ? result : instance;
    }
  });

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray$2(arr);
  }

  function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
  }

  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray$2(arr) || _nonIterableSpread();
  }

  function _superPropBase(object, property) {
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = _getPrototypeOf(object);
      if (object === null) break;
    }

    return object;
  }

  function _get() {
    if (typeof Reflect !== "undefined" && Reflect.get) {
      _get = Reflect.get;
    } else {
      _get = function _get(target, property, receiver) {
        var base = _superPropBase(target, property);
        if (!base) return;
        var desc = Object.getOwnPropertyDescriptor(base, property);

        if (desc.get) {
          return desc.get.call(arguments.length < 3 ? target : receiver);
        }

        return desc.value;
      };
    }

    return _get.apply(this, arguments);
  }

  var wellKnownSymbol$l = wellKnownSymbol$s;
  var create$4 = objectCreate;
  var definePropertyModule$3 = objectDefineProperty;

  var UNSCOPABLES = wellKnownSymbol$l('unscopables');
  var ArrayPrototype$1 = Array.prototype;

  // Array.prototype[@@unscopables]
  // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
  if (ArrayPrototype$1[UNSCOPABLES] == undefined) {
    definePropertyModule$3.f(ArrayPrototype$1, UNSCOPABLES, {
      configurable: true,
      value: create$4(null)
    });
  }

  // add a key to Array.prototype[@@unscopables]
  var addToUnscopables$3 = function (key) {
    ArrayPrototype$1[UNSCOPABLES][key] = true;
  };

  var iterators = {};

  var fails$s = fails$D;

  var correctPrototypeGetter = !fails$s(function () {
    function F() { /* empty */ }
    F.prototype.constructor = null;
    // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
    return Object.getPrototypeOf(new F()) !== F.prototype;
  });

  var global$I = global$17;
  var hasOwn$9 = hasOwnProperty_1;
  var isCallable$d = isCallable$p;
  var toObject$d = toObject$h;
  var sharedKey$1 = sharedKey$4;
  var CORRECT_PROTOTYPE_GETTER$1 = correctPrototypeGetter;

  var IE_PROTO = sharedKey$1('IE_PROTO');
  var Object$1 = global$I.Object;
  var ObjectPrototype$3 = Object$1.prototype;

  // `Object.getPrototypeOf` method
  // https://tc39.es/ecma262/#sec-object.getprototypeof
  var objectGetPrototypeOf = CORRECT_PROTOTYPE_GETTER$1 ? Object$1.getPrototypeOf : function (O) {
    var object = toObject$d(O);
    if (hasOwn$9(object, IE_PROTO)) return object[IE_PROTO];
    var constructor = object.constructor;
    if (isCallable$d(constructor) && object instanceof constructor) {
      return constructor.prototype;
    } return object instanceof Object$1 ? ObjectPrototype$3 : null;
  };

  var fails$r = fails$D;
  var isCallable$c = isCallable$p;
  var getPrototypeOf$3 = objectGetPrototypeOf;
  var redefine$9 = redefine$c.exports;
  var wellKnownSymbol$k = wellKnownSymbol$s;

  var ITERATOR$6 = wellKnownSymbol$k('iterator');
  var BUGGY_SAFARI_ITERATORS$1 = false;

  // `%IteratorPrototype%` object
  // https://tc39.es/ecma262/#sec-%iteratorprototype%-object
  var IteratorPrototype$2, PrototypeOfArrayIteratorPrototype, arrayIterator;

  /* eslint-disable es/no-array-prototype-keys -- safe */
  if ([].keys) {
    arrayIterator = [].keys();
    // Safari 8 has buggy iterators w/o `next`
    if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS$1 = true;
    else {
      PrototypeOfArrayIteratorPrototype = getPrototypeOf$3(getPrototypeOf$3(arrayIterator));
      if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype$2 = PrototypeOfArrayIteratorPrototype;
    }
  }

  var NEW_ITERATOR_PROTOTYPE = IteratorPrototype$2 == undefined || fails$r(function () {
    var test = {};
    // FF44- legacy iterators case
    return IteratorPrototype$2[ITERATOR$6].call(test) !== test;
  });

  if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype$2 = {};

  // `%IteratorPrototype%[@@iterator]()` method
  // https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
  if (!isCallable$c(IteratorPrototype$2[ITERATOR$6])) {
    redefine$9(IteratorPrototype$2, ITERATOR$6, function () {
      return this;
    });
  }

  var iteratorsCore = {
    IteratorPrototype: IteratorPrototype$2,
    BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1
  };

  var defineProperty$8 = objectDefineProperty.f;
  var hasOwn$8 = hasOwnProperty_1;
  var wellKnownSymbol$j = wellKnownSymbol$s;

  var TO_STRING_TAG$2 = wellKnownSymbol$j('toStringTag');

  var setToStringTag$8 = function (it, TAG, STATIC) {
    if (it && !hasOwn$8(it = STATIC ? it : it.prototype, TO_STRING_TAG$2)) {
      defineProperty$8(it, TO_STRING_TAG$2, { configurable: true, value: TAG });
    }
  };

  var IteratorPrototype$1 = iteratorsCore.IteratorPrototype;
  var create$3 = objectCreate;
  var createPropertyDescriptor$2 = createPropertyDescriptor$6;
  var setToStringTag$7 = setToStringTag$8;
  var Iterators$4 = iterators;

  var returnThis$1 = function () { return this; };

  var createIteratorConstructor$1 = function (IteratorConstructor, NAME, next) {
    var TO_STRING_TAG = NAME + ' Iterator';
    IteratorConstructor.prototype = create$3(IteratorPrototype$1, { next: createPropertyDescriptor$2(1, next) });
    setToStringTag$7(IteratorConstructor, TO_STRING_TAG, false);
    Iterators$4[TO_STRING_TAG] = returnThis$1;
    return IteratorConstructor;
  };

  var global$H = global$17;
  var isCallable$b = isCallable$p;

  var String$3 = global$H.String;
  var TypeError$d = global$H.TypeError;

  var aPossiblePrototype$1 = function (argument) {
    if (typeof argument == 'object' || isCallable$b(argument)) return argument;
    throw TypeError$d("Can't set " + String$3(argument) + ' as a prototype');
  };

  /* eslint-disable no-proto -- safe */

  var uncurryThis$q = functionUncurryThis;
  var anObject$e = anObject$k;
  var aPossiblePrototype = aPossiblePrototype$1;

  // `Object.setPrototypeOf` method
  // https://tc39.es/ecma262/#sec-object.setprototypeof
  // Works with __proto__ only. Old v8 can't work with null proto objects.
  // eslint-disable-next-line es/no-object-setprototypeof -- safe
  var objectSetPrototypeOf = Object.setPrototypeOf || ('__proto__' in {} ? function () {
    var CORRECT_SETTER = false;
    var test = {};
    var setter;
    try {
      // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
      setter = uncurryThis$q(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);
      setter(test, []);
      CORRECT_SETTER = test instanceof Array;
    } catch (error) { /* empty */ }
    return function setPrototypeOf(O, proto) {
      anObject$e(O);
      aPossiblePrototype(proto);
      if (CORRECT_SETTER) setter(O, proto);
      else O.__proto__ = proto;
      return O;
    };
  }() : undefined);

  var $$s = _export;
  var call$h = functionCall;
  var FunctionName$1 = functionName;
  var isCallable$a = isCallable$p;
  var createIteratorConstructor = createIteratorConstructor$1;
  var getPrototypeOf$2 = objectGetPrototypeOf;
  var setPrototypeOf$5 = objectSetPrototypeOf;
  var setToStringTag$6 = setToStringTag$8;
  var createNonEnumerableProperty$6 = createNonEnumerableProperty$b;
  var redefine$8 = redefine$c.exports;
  var wellKnownSymbol$i = wellKnownSymbol$s;
  var Iterators$3 = iterators;
  var IteratorsCore = iteratorsCore;

  var PROPER_FUNCTION_NAME$4 = FunctionName$1.PROPER;
  var CONFIGURABLE_FUNCTION_NAME$1 = FunctionName$1.CONFIGURABLE;
  var IteratorPrototype = IteratorsCore.IteratorPrototype;
  var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
  var ITERATOR$5 = wellKnownSymbol$i('iterator');
  var KEYS = 'keys';
  var VALUES = 'values';
  var ENTRIES = 'entries';

  var returnThis = function () { return this; };

  var defineIterator$3 = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
    createIteratorConstructor(IteratorConstructor, NAME, next);

    var getIterationMethod = function (KIND) {
      if (KIND === DEFAULT && defaultIterator) return defaultIterator;
      if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
      switch (KIND) {
        case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
        case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
        case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
      } return function () { return new IteratorConstructor(this); };
    };

    var TO_STRING_TAG = NAME + ' Iterator';
    var INCORRECT_VALUES_NAME = false;
    var IterablePrototype = Iterable.prototype;
    var nativeIterator = IterablePrototype[ITERATOR$5]
      || IterablePrototype['@@iterator']
      || DEFAULT && IterablePrototype[DEFAULT];
    var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
    var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
    var CurrentIteratorPrototype, methods, KEY;

    // fix native
    if (anyNativeIterator) {
      CurrentIteratorPrototype = getPrototypeOf$2(anyNativeIterator.call(new Iterable()));
      if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
        if (getPrototypeOf$2(CurrentIteratorPrototype) !== IteratorPrototype) {
          if (setPrototypeOf$5) {
            setPrototypeOf$5(CurrentIteratorPrototype, IteratorPrototype);
          } else if (!isCallable$a(CurrentIteratorPrototype[ITERATOR$5])) {
            redefine$8(CurrentIteratorPrototype, ITERATOR$5, returnThis);
          }
        }
        // Set @@toStringTag to native iterators
        setToStringTag$6(CurrentIteratorPrototype, TO_STRING_TAG, true);
      }
    }

    // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
    if (PROPER_FUNCTION_NAME$4 && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
      if (CONFIGURABLE_FUNCTION_NAME$1) {
        createNonEnumerableProperty$6(IterablePrototype, 'name', VALUES);
      } else {
        INCORRECT_VALUES_NAME = true;
        defaultIterator = function values() { return call$h(nativeIterator, this); };
      }
    }

    // export additional methods
    if (DEFAULT) {
      methods = {
        values: getIterationMethod(VALUES),
        keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
        entries: getIterationMethod(ENTRIES)
      };
      if (FORCED) for (KEY in methods) {
        if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
          redefine$8(IterablePrototype, KEY, methods[KEY]);
        }
      } else $$s({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
    }

    // define iterator
    if (IterablePrototype[ITERATOR$5] !== defaultIterator) {
      redefine$8(IterablePrototype, ITERATOR$5, defaultIterator, { name: DEFAULT });
    }
    Iterators$3[NAME] = defaultIterator;

    return methods;
  };

  var toIndexedObject$5 = toIndexedObject$b;
  var addToUnscopables$2 = addToUnscopables$3;
  var Iterators$2 = iterators;
  var InternalStateModule$6 = internalState;
  var defineIterator$2 = defineIterator$3;

  var ARRAY_ITERATOR = 'Array Iterator';
  var setInternalState$6 = InternalStateModule$6.set;
  var getInternalState$6 = InternalStateModule$6.getterFor(ARRAY_ITERATOR);

  // `Array.prototype.entries` method
  // https://tc39.es/ecma262/#sec-array.prototype.entries
  // `Array.prototype.keys` method
  // https://tc39.es/ecma262/#sec-array.prototype.keys
  // `Array.prototype.values` method
  // https://tc39.es/ecma262/#sec-array.prototype.values
  // `Array.prototype[@@iterator]` method
  // https://tc39.es/ecma262/#sec-array.prototype-@@iterator
  // `CreateArrayIterator` internal method
  // https://tc39.es/ecma262/#sec-createarrayiterator
  var es_array_iterator = defineIterator$2(Array, 'Array', function (iterated, kind) {
    setInternalState$6(this, {
      type: ARRAY_ITERATOR,
      target: toIndexedObject$5(iterated), // target
      index: 0,                          // next index
      kind: kind                         // kind
    });
  // `%ArrayIteratorPrototype%.next` method
  // https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
  }, function () {
    var state = getInternalState$6(this);
    var target = state.target;
    var kind = state.kind;
    var index = state.index++;
    if (!target || index >= target.length) {
      state.target = undefined;
      return { value: undefined, done: true };
    }
    if (kind == 'keys') return { value: index, done: false };
    if (kind == 'values') return { value: target[index], done: false };
    return { value: [index, target[index]], done: false };
  }, 'values');

  // argumentsList[@@iterator] is %ArrayProto_values%
  // https://tc39.es/ecma262/#sec-createunmappedargumentsobject
  // https://tc39.es/ecma262/#sec-createmappedargumentsobject
  Iterators$2.Arguments = Iterators$2.Array;

  // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
  addToUnscopables$2('keys');
  addToUnscopables$2('values');
  addToUnscopables$2('entries');

  var internalMetadata = {exports: {}};

  var objectGetOwnPropertyNamesExternal = {};

  /* eslint-disable es/no-object-getownpropertynames -- safe */

  var classof$8 = classofRaw$1;
  var toIndexedObject$4 = toIndexedObject$b;
  var $getOwnPropertyNames$1 = objectGetOwnPropertyNames.f;
  var arraySlice$7 = arraySlice$9;

  var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
    ? Object.getOwnPropertyNames(window) : [];

  var getWindowNames = function (it) {
    try {
      return $getOwnPropertyNames$1(it);
    } catch (error) {
      return arraySlice$7(windowNames);
    }
  };

  // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
  objectGetOwnPropertyNamesExternal.f = function getOwnPropertyNames(it) {
    return windowNames && classof$8(it) == 'Window'
      ? getWindowNames(it)
      : $getOwnPropertyNames$1(toIndexedObject$4(it));
  };

  // FF26- bug: ArrayBuffers are non-extensible, but Object.isExtensible does not report it
  var fails$q = fails$D;

  var arrayBufferNonExtensible = fails$q(function () {
    if (typeof ArrayBuffer == 'function') {
      var buffer = new ArrayBuffer(8);
      // eslint-disable-next-line es/no-object-isextensible, es/no-object-defineproperty -- safe
      if (Object.isExtensible(buffer)) Object.defineProperty(buffer, 'a', { value: 8 });
    }
  });

  var fails$p = fails$D;
  var isObject$b = isObject$l;
  var classof$7 = classofRaw$1;
  var ARRAY_BUFFER_NON_EXTENSIBLE = arrayBufferNonExtensible;

  // eslint-disable-next-line es/no-object-isextensible -- safe
  var $isExtensible = Object.isExtensible;
  var FAILS_ON_PRIMITIVES$1 = fails$p(function () { $isExtensible(1); });

  // `Object.isExtensible` method
  // https://tc39.es/ecma262/#sec-object.isextensible
  var objectIsExtensible = (FAILS_ON_PRIMITIVES$1 || ARRAY_BUFFER_NON_EXTENSIBLE) ? function isExtensible(it) {
    if (!isObject$b(it)) return false;
    if (ARRAY_BUFFER_NON_EXTENSIBLE && classof$7(it) == 'ArrayBuffer') return false;
    return $isExtensible ? $isExtensible(it) : true;
  } : $isExtensible;

  var fails$o = fails$D;

  var freezing = !fails$o(function () {
    // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing
    return Object.isExtensible(Object.preventExtensions({}));
  });

  var $$r = _export;
  var uncurryThis$p = functionUncurryThis;
  var hiddenKeys$1 = hiddenKeys$6;
  var isObject$a = isObject$l;
  var hasOwn$7 = hasOwnProperty_1;
  var defineProperty$7 = objectDefineProperty.f;
  var getOwnPropertyNamesModule$1 = objectGetOwnPropertyNames;
  var getOwnPropertyNamesExternalModule = objectGetOwnPropertyNamesExternal;
  var isExtensible = objectIsExtensible;
  var uid$2 = uid$5;
  var FREEZING = freezing;

  var REQUIRED = false;
  var METADATA = uid$2('meta');
  var id = 0;

  var setMetadata = function (it) {
    defineProperty$7(it, METADATA, { value: {
      objectID: 'O' + id++, // object ID
      weakData: {}          // weak collections IDs
    } });
  };

  var fastKey$1 = function (it, create) {
    // return a primitive with prefix
    if (!isObject$a(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
    if (!hasOwn$7(it, METADATA)) {
      // can't set metadata to uncaught frozen object
      if (!isExtensible(it)) return 'F';
      // not necessary to add metadata
      if (!create) return 'E';
      // add missing metadata
      setMetadata(it);
    // return object ID
    } return it[METADATA].objectID;
  };

  var getWeakData = function (it, create) {
    if (!hasOwn$7(it, METADATA)) {
      // can't set metadata to uncaught frozen object
      if (!isExtensible(it)) return true;
      // not necessary to add metadata
      if (!create) return false;
      // add missing metadata
      setMetadata(it);
    // return the store of weak collections IDs
    } return it[METADATA].weakData;
  };

  // add metadata on freeze-family methods calling
  var onFreeze = function (it) {
    if (FREEZING && REQUIRED && isExtensible(it) && !hasOwn$7(it, METADATA)) setMetadata(it);
    return it;
  };

  var enable = function () {
    meta.enable = function () { /* empty */ };
    REQUIRED = true;
    var getOwnPropertyNames = getOwnPropertyNamesModule$1.f;
    var splice = uncurryThis$p([].splice);
    var test = {};
    test[METADATA] = 1;

    // prevent exposing of metadata key
    if (getOwnPropertyNames(test).length) {
      getOwnPropertyNamesModule$1.f = function (it) {
        var result = getOwnPropertyNames(it);
        for (var i = 0, length = result.length; i < length; i++) {
          if (result[i] === METADATA) {
            splice(result, i, 1);
            break;
          }
        } return result;
      };

      $$r({ target: 'Object', stat: true, forced: true }, {
        getOwnPropertyNames: getOwnPropertyNamesExternalModule.f
      });
    }
  };

  var meta = internalMetadata.exports = {
    enable: enable,
    fastKey: fastKey$1,
    getWeakData: getWeakData,
    onFreeze: onFreeze
  };

  hiddenKeys$1[METADATA] = true;

  var wellKnownSymbol$h = wellKnownSymbol$s;
  var Iterators$1 = iterators;

  var ITERATOR$4 = wellKnownSymbol$h('iterator');
  var ArrayPrototype = Array.prototype;

  // check on default Array iterator
  var isArrayIteratorMethod$3 = function (it) {
    return it !== undefined && (Iterators$1.Array === it || ArrayPrototype[ITERATOR$4] === it);
  };

  var classof$6 = classof$b;
  var getMethod$6 = getMethod$8;
  var Iterators = iterators;
  var wellKnownSymbol$g = wellKnownSymbol$s;

  var ITERATOR$3 = wellKnownSymbol$g('iterator');

  var getIteratorMethod$4 = function (it) {
    if (it != undefined) return getMethod$6(it, ITERATOR$3)
      || getMethod$6(it, '@@iterator')
      || Iterators[classof$6(it)];
  };

  var global$G = global$17;
  var call$g = functionCall;
  var aCallable$5 = aCallable$9;
  var anObject$d = anObject$k;
  var tryToString$2 = tryToString$5;
  var getIteratorMethod$3 = getIteratorMethod$4;

  var TypeError$c = global$G.TypeError;

  var getIterator$3 = function (argument, usingIterator) {
    var iteratorMethod = arguments.length < 2 ? getIteratorMethod$3(argument) : usingIterator;
    if (aCallable$5(iteratorMethod)) return anObject$d(call$g(iteratorMethod, argument));
    throw TypeError$c(tryToString$2(argument) + ' is not iterable');
  };

  var call$f = functionCall;
  var anObject$c = anObject$k;
  var getMethod$5 = getMethod$8;

  var iteratorClose$2 = function (iterator, kind, value) {
    var innerResult, innerError;
    anObject$c(iterator);
    try {
      innerResult = getMethod$5(iterator, 'return');
      if (!innerResult) {
        if (kind === 'throw') throw value;
        return value;
      }
      innerResult = call$f(innerResult, iterator);
    } catch (error) {
      innerError = true;
      innerResult = error;
    }
    if (kind === 'throw') throw value;
    if (innerError) throw innerResult;
    anObject$c(innerResult);
    return value;
  };

  var global$F = global$17;
  var bind$6 = functionBindContext;
  var call$e = functionCall;
  var anObject$b = anObject$k;
  var tryToString$1 = tryToString$5;
  var isArrayIteratorMethod$2 = isArrayIteratorMethod$3;
  var lengthOfArrayLike$a = lengthOfArrayLike$e;
  var isPrototypeOf$7 = objectIsPrototypeOf;
  var getIterator$2 = getIterator$3;
  var getIteratorMethod$2 = getIteratorMethod$4;
  var iteratorClose$1 = iteratorClose$2;

  var TypeError$b = global$F.TypeError;

  var Result = function (stopped, result) {
    this.stopped = stopped;
    this.result = result;
  };

  var ResultPrototype = Result.prototype;

  var iterate$3 = function (iterable, unboundFunction, options) {
    var that = options && options.that;
    var AS_ENTRIES = !!(options && options.AS_ENTRIES);
    var IS_ITERATOR = !!(options && options.IS_ITERATOR);
    var INTERRUPTED = !!(options && options.INTERRUPTED);
    var fn = bind$6(unboundFunction, that);
    var iterator, iterFn, index, length, result, next, step;

    var stop = function (condition) {
      if (iterator) iteratorClose$1(iterator, 'normal', condition);
      return new Result(true, condition);
    };

    var callFn = function (value) {
      if (AS_ENTRIES) {
        anObject$b(value);
        return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
      } return INTERRUPTED ? fn(value, stop) : fn(value);
    };

    if (IS_ITERATOR) {
      iterator = iterable;
    } else {
      iterFn = getIteratorMethod$2(iterable);
      if (!iterFn) throw TypeError$b(tryToString$1(iterable) + ' is not iterable');
      // optimisation for array iterators
      if (isArrayIteratorMethod$2(iterFn)) {
        for (index = 0, length = lengthOfArrayLike$a(iterable); length > index; index++) {
          result = callFn(iterable[index]);
          if (result && isPrototypeOf$7(ResultPrototype, result)) return result;
        } return new Result(false);
      }
      iterator = getIterator$2(iterable, iterFn);
    }

    next = iterator.next;
    while (!(step = call$e(next, iterator)).done) {
      try {
        result = callFn(step.value);
      } catch (error) {
        iteratorClose$1(iterator, 'throw', error);
      }
      if (typeof result == 'object' && result && isPrototypeOf$7(ResultPrototype, result)) return result;
    } return new Result(false);
  };

  var global$E = global$17;
  var isPrototypeOf$6 = objectIsPrototypeOf;

  var TypeError$a = global$E.TypeError;

  var anInstance$5 = function (it, Prototype) {
    if (isPrototypeOf$6(Prototype, it)) return it;
    throw TypeError$a('Incorrect invocation');
  };

  var wellKnownSymbol$f = wellKnownSymbol$s;

  var ITERATOR$2 = wellKnownSymbol$f('iterator');
  var SAFE_CLOSING = false;

  try {
    var called = 0;
    var iteratorWithReturn = {
      next: function () {
        return { done: !!called++ };
      },
      'return': function () {
        SAFE_CLOSING = true;
      }
    };
    iteratorWithReturn[ITERATOR$2] = function () {
      return this;
    };
    // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
    Array.from(iteratorWithReturn, function () { throw 2; });
  } catch (error) { /* empty */ }

  var checkCorrectnessOfIteration$4 = function (exec, SKIP_CLOSING) {
    if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
    var ITERATION_SUPPORT = false;
    try {
      var object = {};
      object[ITERATOR$2] = function () {
        return {
          next: function () {
            return { done: ITERATION_SUPPORT = true };
          }
        };
      };
      exec(object);
    } catch (error) { /* empty */ }
    return ITERATION_SUPPORT;
  };

  var isCallable$9 = isCallable$p;
  var isObject$9 = isObject$l;
  var setPrototypeOf$4 = objectSetPrototypeOf;

  // makes subclassing work correct for wrapped built-ins
  var inheritIfRequired$3 = function ($this, dummy, Wrapper) {
    var NewTarget, NewTargetPrototype;
    if (
      // it can work only with native `setPrototypeOf`
      setPrototypeOf$4 &&
      // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
      isCallable$9(NewTarget = dummy.constructor) &&
      NewTarget !== Wrapper &&
      isObject$9(NewTargetPrototype = NewTarget.prototype) &&
      NewTargetPrototype !== Wrapper.prototype
    ) setPrototypeOf$4($this, NewTargetPrototype);
    return $this;
  };

  var $$q = _export;
  var global$D = global$17;
  var uncurryThis$o = functionUncurryThis;
  var isForced$2 = isForced_1;
  var redefine$7 = redefine$c.exports;
  var InternalMetadataModule = internalMetadata.exports;
  var iterate$2 = iterate$3;
  var anInstance$4 = anInstance$5;
  var isCallable$8 = isCallable$p;
  var isObject$8 = isObject$l;
  var fails$n = fails$D;
  var checkCorrectnessOfIteration$3 = checkCorrectnessOfIteration$4;
  var setToStringTag$5 = setToStringTag$8;
  var inheritIfRequired$2 = inheritIfRequired$3;

  var collection$2 = function (CONSTRUCTOR_NAME, wrapper, common) {
    var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
    var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
    var ADDER = IS_MAP ? 'set' : 'add';
    var NativeConstructor = global$D[CONSTRUCTOR_NAME];
    var NativePrototype = NativeConstructor && NativeConstructor.prototype;
    var Constructor = NativeConstructor;
    var exported = {};

    var fixMethod = function (KEY) {
      var uncurriedNativeMethod = uncurryThis$o(NativePrototype[KEY]);
      redefine$7(NativePrototype, KEY,
        KEY == 'add' ? function add(value) {
          uncurriedNativeMethod(this, value === 0 ? 0 : value);
          return this;
        } : KEY == 'delete' ? function (key) {
          return IS_WEAK && !isObject$8(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
        } : KEY == 'get' ? function get(key) {
          return IS_WEAK && !isObject$8(key) ? undefined : uncurriedNativeMethod(this, key === 0 ? 0 : key);
        } : KEY == 'has' ? function has(key) {
          return IS_WEAK && !isObject$8(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
        } : function set(key, value) {
          uncurriedNativeMethod(this, key === 0 ? 0 : key, value);
          return this;
        }
      );
    };

    var REPLACE = isForced$2(
      CONSTRUCTOR_NAME,
      !isCallable$8(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails$n(function () {
        new NativeConstructor().entries().next();
      }))
    );

    if (REPLACE) {
      // create collection constructor
      Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
      InternalMetadataModule.enable();
    } else if (isForced$2(CONSTRUCTOR_NAME, true)) {
      var instance = new Constructor();
      // early implementations not supports chaining
      var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
      // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
      var THROWS_ON_PRIMITIVES = fails$n(function () { instance.has(1); });
      // most early implementations doesn't supports iterables, most modern - not close it correctly
      // eslint-disable-next-line no-new -- required for testing
      var ACCEPT_ITERABLES = checkCorrectnessOfIteration$3(function (iterable) { new NativeConstructor(iterable); });
      // for early implementations -0 and +0 not the same
      var BUGGY_ZERO = !IS_WEAK && fails$n(function () {
        // V8 ~ Chromium 42- fails only with 5+ elements
        var $instance = new NativeConstructor();
        var index = 5;
        while (index--) $instance[ADDER](index, index);
        return !$instance.has(-0);
      });

      if (!ACCEPT_ITERABLES) {
        Constructor = wrapper(function (dummy, iterable) {
          anInstance$4(dummy, NativePrototype);
          var that = inheritIfRequired$2(new NativeConstructor(), dummy, Constructor);
          if (iterable != undefined) iterate$2(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
          return that;
        });
        Constructor.prototype = NativePrototype;
        NativePrototype.constructor = Constructor;
      }

      if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
        fixMethod('delete');
        fixMethod('has');
        IS_MAP && fixMethod('get');
      }

      if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

      // weak collections should not contains .clear method
      if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
    }

    exported[CONSTRUCTOR_NAME] = Constructor;
    $$q({ global: true, forced: Constructor != NativeConstructor }, exported);

    setToStringTag$5(Constructor, CONSTRUCTOR_NAME);

    if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

    return Constructor;
  };

  var redefine$6 = redefine$c.exports;

  var redefineAll$3 = function (target, src, options) {
    for (var key in src) redefine$6(target, key, src[key], options);
    return target;
  };

  var getBuiltIn$2 = getBuiltIn$9;
  var definePropertyModule$2 = objectDefineProperty;
  var wellKnownSymbol$e = wellKnownSymbol$s;
  var DESCRIPTORS$9 = descriptors;

  var SPECIES$3 = wellKnownSymbol$e('species');

  var setSpecies$4 = function (CONSTRUCTOR_NAME) {
    var Constructor = getBuiltIn$2(CONSTRUCTOR_NAME);
    var defineProperty = definePropertyModule$2.f;

    if (DESCRIPTORS$9 && Constructor && !Constructor[SPECIES$3]) {
      defineProperty(Constructor, SPECIES$3, {
        configurable: true,
        get: function () { return this; }
      });
    }
  };

  var defineProperty$6 = objectDefineProperty.f;
  var create$2 = objectCreate;
  var redefineAll$2 = redefineAll$3;
  var bind$5 = functionBindContext;
  var anInstance$3 = anInstance$5;
  var iterate$1 = iterate$3;
  var defineIterator$1 = defineIterator$3;
  var setSpecies$3 = setSpecies$4;
  var DESCRIPTORS$8 = descriptors;
  var fastKey = internalMetadata.exports.fastKey;
  var InternalStateModule$5 = internalState;

  var setInternalState$5 = InternalStateModule$5.set;
  var internalStateGetterFor = InternalStateModule$5.getterFor;

  var collectionStrong$2 = {
    getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
      var Constructor = wrapper(function (that, iterable) {
        anInstance$3(that, Prototype);
        setInternalState$5(that, {
          type: CONSTRUCTOR_NAME,
          index: create$2(null),
          first: undefined,
          last: undefined,
          size: 0
        });
        if (!DESCRIPTORS$8) that.size = 0;
        if (iterable != undefined) iterate$1(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
      });

      var Prototype = Constructor.prototype;

      var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

      var define = function (that, key, value) {
        var state = getInternalState(that);
        var entry = getEntry(that, key);
        var previous, index;
        // change existing entry
        if (entry) {
          entry.value = value;
        // create new entry
        } else {
          state.last = entry = {
            index: index = fastKey(key, true),
            key: key,
            value: value,
            previous: previous = state.last,
            next: undefined,
            removed: false
          };
          if (!state.first) state.first = entry;
          if (previous) previous.next = entry;
          if (DESCRIPTORS$8) state.size++;
          else that.size++;
          // add to index
          if (index !== 'F') state.index[index] = entry;
        } return that;
      };

      var getEntry = function (that, key) {
        var state = getInternalState(that);
        // fast case
        var index = fastKey(key);
        var entry;
        if (index !== 'F') return state.index[index];
        // frozen object case
        for (entry = state.first; entry; entry = entry.next) {
          if (entry.key == key) return entry;
        }
      };

      redefineAll$2(Prototype, {
        // `{ Map, Set }.prototype.clear()` methods
        // https://tc39.es/ecma262/#sec-map.prototype.clear
        // https://tc39.es/ecma262/#sec-set.prototype.clear
        clear: function clear() {
          var that = this;
          var state = getInternalState(that);
          var data = state.index;
          var entry = state.first;
          while (entry) {
            entry.removed = true;
            if (entry.previous) entry.previous = entry.previous.next = undefined;
            delete data[entry.index];
            entry = entry.next;
          }
          state.first = state.last = undefined;
          if (DESCRIPTORS$8) state.size = 0;
          else that.size = 0;
        },
        // `{ Map, Set }.prototype.delete(key)` methods
        // https://tc39.es/ecma262/#sec-map.prototype.delete
        // https://tc39.es/ecma262/#sec-set.prototype.delete
        'delete': function (key) {
          var that = this;
          var state = getInternalState(that);
          var entry = getEntry(that, key);
          if (entry) {
            var next = entry.next;
            var prev = entry.previous;
            delete state.index[entry.index];
            entry.removed = true;
            if (prev) prev.next = next;
            if (next) next.previous = prev;
            if (state.first == entry) state.first = next;
            if (state.last == entry) state.last = prev;
            if (DESCRIPTORS$8) state.size--;
            else that.size--;
          } return !!entry;
        },
        // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
        // https://tc39.es/ecma262/#sec-map.prototype.foreach
        // https://tc39.es/ecma262/#sec-set.prototype.foreach
        forEach: function forEach(callbackfn /* , that = undefined */) {
          var state = getInternalState(this);
          var boundFunction = bind$5(callbackfn, arguments.length > 1 ? arguments[1] : undefined);
          var entry;
          while (entry = entry ? entry.next : state.first) {
            boundFunction(entry.value, entry.key, this);
            // revert to the last existing entry
            while (entry && entry.removed) entry = entry.previous;
          }
        },
        // `{ Map, Set}.prototype.has(key)` methods
        // https://tc39.es/ecma262/#sec-map.prototype.has
        // https://tc39.es/ecma262/#sec-set.prototype.has
        has: function has(key) {
          return !!getEntry(this, key);
        }
      });

      redefineAll$2(Prototype, IS_MAP ? {
        // `Map.prototype.get(key)` method
        // https://tc39.es/ecma262/#sec-map.prototype.get
        get: function get(key) {
          var entry = getEntry(this, key);
          return entry && entry.value;
        },
        // `Map.prototype.set(key, value)` method
        // https://tc39.es/ecma262/#sec-map.prototype.set
        set: function set(key, value) {
          return define(this, key === 0 ? 0 : key, value);
        }
      } : {
        // `Set.prototype.add(value)` method
        // https://tc39.es/ecma262/#sec-set.prototype.add
        add: function add(value) {
          return define(this, value = value === 0 ? 0 : value, value);
        }
      });
      if (DESCRIPTORS$8) defineProperty$6(Prototype, 'size', {
        get: function () {
          return getInternalState(this).size;
        }
      });
      return Constructor;
    },
    setStrong: function (Constructor, CONSTRUCTOR_NAME, IS_MAP) {
      var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';
      var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
      var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);
      // `{ Map, Set }.prototype.{ keys, values, entries, @@iterator }()` methods
      // https://tc39.es/ecma262/#sec-map.prototype.entries
      // https://tc39.es/ecma262/#sec-map.prototype.keys
      // https://tc39.es/ecma262/#sec-map.prototype.values
      // https://tc39.es/ecma262/#sec-map.prototype-@@iterator
      // https://tc39.es/ecma262/#sec-set.prototype.entries
      // https://tc39.es/ecma262/#sec-set.prototype.keys
      // https://tc39.es/ecma262/#sec-set.prototype.values
      // https://tc39.es/ecma262/#sec-set.prototype-@@iterator
      defineIterator$1(Constructor, CONSTRUCTOR_NAME, function (iterated, kind) {
        setInternalState$5(this, {
          type: ITERATOR_NAME,
          target: iterated,
          state: getInternalCollectionState(iterated),
          kind: kind,
          last: undefined
        });
      }, function () {
        var state = getInternalIteratorState(this);
        var kind = state.kind;
        var entry = state.last;
        // revert to the last existing entry
        while (entry && entry.removed) entry = entry.previous;
        // get next entry
        if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
          // or finish the iteration
          state.target = undefined;
          return { value: undefined, done: true };
        }
        // return step by kind
        if (kind == 'keys') return { value: entry.key, done: false };
        if (kind == 'values') return { value: entry.value, done: false };
        return { value: [entry.key, entry.value], done: false };
      }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

      // `{ Map, Set }.prototype[@@species]` accessors
      // https://tc39.es/ecma262/#sec-get-map-@@species
      // https://tc39.es/ecma262/#sec-get-set-@@species
      setSpecies$3(CONSTRUCTOR_NAME);
    }
  };

  var collection$1 = collection$2;
  var collectionStrong$1 = collectionStrong$2;

  // `Set` constructor
  // https://tc39.es/ecma262/#sec-set-objects
  collection$1('Set', function (init) {
    return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };
  }, collectionStrong$1);

  var global$C = global$17;
  var classof$5 = classof$b;

  var String$2 = global$C.String;

  var toString$f = function (argument) {
    if (classof$5(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
    return String$2(argument);
  };

  var uncurryThis$n = functionUncurryThis;
  var toIntegerOrInfinity$6 = toIntegerOrInfinity$9;
  var toString$e = toString$f;
  var requireObjectCoercible$9 = requireObjectCoercible$c;

  var charAt$5 = uncurryThis$n(''.charAt);
  var charCodeAt = uncurryThis$n(''.charCodeAt);
  var stringSlice$8 = uncurryThis$n(''.slice);

  var createMethod$2 = function (CONVERT_TO_STRING) {
    return function ($this, pos) {
      var S = toString$e(requireObjectCoercible$9($this));
      var position = toIntegerOrInfinity$6(pos);
      var size = S.length;
      var first, second;
      if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
      first = charCodeAt(S, position);
      return first < 0xD800 || first > 0xDBFF || position + 1 === size
        || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF
          ? CONVERT_TO_STRING
            ? charAt$5(S, position)
            : first
          : CONVERT_TO_STRING
            ? stringSlice$8(S, position, position + 2)
            : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
    };
  };

  var stringMultibyte = {
    // `String.prototype.codePointAt` method
    // https://tc39.es/ecma262/#sec-string.prototype.codepointat
    codeAt: createMethod$2(false),
    // `String.prototype.at` method
    // https://github.com/mathiasbynens/String.prototype.at
    charAt: createMethod$2(true)
  };

  var charAt$4 = stringMultibyte.charAt;
  var toString$d = toString$f;
  var InternalStateModule$4 = internalState;
  var defineIterator = defineIterator$3;

  var STRING_ITERATOR = 'String Iterator';
  var setInternalState$4 = InternalStateModule$4.set;
  var getInternalState$5 = InternalStateModule$4.getterFor(STRING_ITERATOR);

  // `String.prototype[@@iterator]` method
  // https://tc39.es/ecma262/#sec-string.prototype-@@iterator
  defineIterator(String, 'String', function (iterated) {
    setInternalState$4(this, {
      type: STRING_ITERATOR,
      string: toString$d(iterated),
      index: 0
    });
  // `%StringIteratorPrototype%.next` method
  // https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
  }, function next() {
    var state = getInternalState$5(this);
    var string = state.string;
    var index = state.index;
    var point;
    if (index >= string.length) return { value: undefined, done: true };
    point = charAt$4(string, index);
    state.index += point.length;
    return { value: point, done: false };
  });

  var global$B = global$17;
  var DOMIterables = domIterables;
  var DOMTokenListPrototype = domTokenListPrototype;
  var ArrayIteratorMethods = es_array_iterator;
  var createNonEnumerableProperty$5 = createNonEnumerableProperty$b;
  var wellKnownSymbol$d = wellKnownSymbol$s;

  var ITERATOR$1 = wellKnownSymbol$d('iterator');
  var TO_STRING_TAG$1 = wellKnownSymbol$d('toStringTag');
  var ArrayValues = ArrayIteratorMethods.values;

  var handlePrototype = function (CollectionPrototype, COLLECTION_NAME) {
    if (CollectionPrototype) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[ITERATOR$1] !== ArrayValues) try {
        createNonEnumerableProperty$5(CollectionPrototype, ITERATOR$1, ArrayValues);
      } catch (error) {
        CollectionPrototype[ITERATOR$1] = ArrayValues;
      }
      if (!CollectionPrototype[TO_STRING_TAG$1]) {
        createNonEnumerableProperty$5(CollectionPrototype, TO_STRING_TAG$1, COLLECTION_NAME);
      }
      if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
        // some Chrome versions have non-configurable methods on DOMTokenList
        if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
          createNonEnumerableProperty$5(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
        } catch (error) {
          CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
        }
      }
    }
  };

  for (var COLLECTION_NAME in DOMIterables) {
    handlePrototype(global$B[COLLECTION_NAME] && global$B[COLLECTION_NAME].prototype, COLLECTION_NAME);
  }

  handlePrototype(DOMTokenListPrototype, 'DOMTokenList');

  var $$p = _export;
  var global$A = global$17;
  var fails$m = fails$D;
  var isArray$1 = isArray$4;
  var isObject$7 = isObject$l;
  var toObject$c = toObject$h;
  var lengthOfArrayLike$9 = lengthOfArrayLike$e;
  var createProperty$3 = createProperty$5;
  var arraySpeciesCreate$1 = arraySpeciesCreate$3;
  var arrayMethodHasSpeciesSupport$3 = arrayMethodHasSpeciesSupport$5;
  var wellKnownSymbol$c = wellKnownSymbol$s;
  var V8_VERSION$1 = engineV8Version;

  var IS_CONCAT_SPREADABLE = wellKnownSymbol$c('isConcatSpreadable');
  var MAX_SAFE_INTEGER$1 = 0x1FFFFFFFFFFFFF;
  var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';
  var TypeError$9 = global$A.TypeError;

  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/679
  var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION$1 >= 51 || !fails$m(function () {
    var array = [];
    array[IS_CONCAT_SPREADABLE] = false;
    return array.concat()[0] !== array;
  });

  var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport$3('concat');

  var isConcatSpreadable = function (O) {
    if (!isObject$7(O)) return false;
    var spreadable = O[IS_CONCAT_SPREADABLE];
    return spreadable !== undefined ? !!spreadable : isArray$1(O);
  };

  var FORCED$8 = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

  // `Array.prototype.concat` method
  // https://tc39.es/ecma262/#sec-array.prototype.concat
  // with adding support of @@isConcatSpreadable and @@species
  $$p({ target: 'Array', proto: true, forced: FORCED$8 }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    concat: function concat(arg) {
      var O = toObject$c(this);
      var A = arraySpeciesCreate$1(O, 0);
      var n = 0;
      var i, k, length, len, E;
      for (i = -1, length = arguments.length; i < length; i++) {
        E = i === -1 ? O : arguments[i];
        if (isConcatSpreadable(E)) {
          len = lengthOfArrayLike$9(E);
          if (n + len > MAX_SAFE_INTEGER$1) throw TypeError$9(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
          for (k = 0; k < len; k++, n++) if (k in E) createProperty$3(A, n, E[k]);
        } else {
          if (n >= MAX_SAFE_INTEGER$1) throw TypeError$9(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
          createProperty$3(A, n++, E);
        }
      }
      A.length = n;
      return A;
    }
  });

  var global$z = global$17;

  var nativePromiseConstructor = global$z.Promise;

  var anObject$a = anObject$k;
  var aConstructor$1 = aConstructor$3;
  var wellKnownSymbol$b = wellKnownSymbol$s;

  var SPECIES$2 = wellKnownSymbol$b('species');

  // `SpeciesConstructor` abstract operation
  // https://tc39.es/ecma262/#sec-speciesconstructor
  var speciesConstructor$3 = function (O, defaultConstructor) {
    var C = anObject$a(O).constructor;
    var S;
    return C === undefined || (S = anObject$a(C)[SPECIES$2]) == undefined ? defaultConstructor : aConstructor$1(S);
  };

  var userAgent$4 = engineUserAgent;

  var engineIsIos = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent$4);

  var classof$4 = classofRaw$1;
  var global$y = global$17;

  var engineIsNode = classof$4(global$y.process) == 'process';

  var global$x = global$17;
  var apply$6 = functionApply;
  var bind$4 = functionBindContext;
  var isCallable$7 = isCallable$p;
  var hasOwn$6 = hasOwnProperty_1;
  var fails$l = fails$D;
  var html = html$2;
  var arraySlice$6 = arraySlice$9;
  var createElement = documentCreateElement$2;
  var IS_IOS$1 = engineIsIos;
  var IS_NODE$2 = engineIsNode;

  var set$1 = global$x.setImmediate;
  var clear = global$x.clearImmediate;
  var process$2 = global$x.process;
  var Dispatch = global$x.Dispatch;
  var Function$1 = global$x.Function;
  var MessageChannel = global$x.MessageChannel;
  var String$1 = global$x.String;
  var counter = 0;
  var queue = {};
  var ONREADYSTATECHANGE = 'onreadystatechange';
  var location$1, defer, channel, port;

  try {
    // Deno throws a ReferenceError on `location` access without `--location` flag
    location$1 = global$x.location;
  } catch (error) { /* empty */ }

  var run$1 = function (id) {
    if (hasOwn$6(queue, id)) {
      var fn = queue[id];
      delete queue[id];
      fn();
    }
  };

  var runner = function (id) {
    return function () {
      run$1(id);
    };
  };

  var listener = function (event) {
    run$1(event.data);
  };

  var post = function (id) {
    // old engines have not location.origin
    global$x.postMessage(String$1(id), location$1.protocol + '//' + location$1.host);
  };

  // Node.js 0.9+ & IE10+ has setImmediate, otherwise:
  if (!set$1 || !clear) {
    set$1 = function setImmediate(fn) {
      var args = arraySlice$6(arguments, 1);
      queue[++counter] = function () {
        apply$6(isCallable$7(fn) ? fn : Function$1(fn), undefined, args);
      };
      defer(counter);
      return counter;
    };
    clear = function clearImmediate(id) {
      delete queue[id];
    };
    // Node.js 0.8-
    if (IS_NODE$2) {
      defer = function (id) {
        process$2.nextTick(runner(id));
      };
    // Sphere (JS game engine) Dispatch API
    } else if (Dispatch && Dispatch.now) {
      defer = function (id) {
        Dispatch.now(runner(id));
      };
    // Browsers with MessageChannel, includes WebWorkers
    // except iOS - https://github.com/zloirock/core-js/issues/624
    } else if (MessageChannel && !IS_IOS$1) {
      channel = new MessageChannel();
      port = channel.port2;
      channel.port1.onmessage = listener;
      defer = bind$4(port.postMessage, port);
    // Browsers with postMessage, skip WebWorkers
    // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
    } else if (
      global$x.addEventListener &&
      isCallable$7(global$x.postMessage) &&
      !global$x.importScripts &&
      location$1 && location$1.protocol !== 'file:' &&
      !fails$l(post)
    ) {
      defer = post;
      global$x.addEventListener('message', listener, false);
    // IE8-
    } else if (ONREADYSTATECHANGE in createElement('script')) {
      defer = function (id) {
        html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
          html.removeChild(this);
          run$1(id);
        };
      };
    // Rest old browsers
    } else {
      defer = function (id) {
        setTimeout(runner(id), 0);
      };
    }
  }

  var task$1 = {
    set: set$1,
    clear: clear
  };

  var userAgent$3 = engineUserAgent;
  var global$w = global$17;

  var engineIsIosPebble = /ipad|iphone|ipod/i.test(userAgent$3) && global$w.Pebble !== undefined;

  var userAgent$2 = engineUserAgent;

  var engineIsWebosWebkit = /web0s(?!.*chrome)/i.test(userAgent$2);

  var global$v = global$17;
  var bind$3 = functionBindContext;
  var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;
  var macrotask = task$1.set;
  var IS_IOS = engineIsIos;
  var IS_IOS_PEBBLE = engineIsIosPebble;
  var IS_WEBOS_WEBKIT = engineIsWebosWebkit;
  var IS_NODE$1 = engineIsNode;

  var MutationObserver = global$v.MutationObserver || global$v.WebKitMutationObserver;
  var document$2 = global$v.document;
  var process$1 = global$v.process;
  var Promise$1 = global$v.Promise;
  // Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
  var queueMicrotaskDescriptor = getOwnPropertyDescriptor$1(global$v, 'queueMicrotask');
  var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

  var flush$1, head, last, notify$1, toggle, node, promise$1, then;

  // modern engines have queueMicrotask method
  if (!queueMicrotask) {
    flush$1 = function () {
      var parent, fn;
      if (IS_NODE$1 && (parent = process$1.domain)) parent.exit();
      while (head) {
        fn = head.fn;
        head = head.next;
        try {
          fn();
        } catch (error) {
          if (head) notify$1();
          else last = undefined;
          throw error;
        }
      } last = undefined;
      if (parent) parent.enter();
    };

    // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
    // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
    if (!IS_IOS && !IS_NODE$1 && !IS_WEBOS_WEBKIT && MutationObserver && document$2) {
      toggle = true;
      node = document$2.createTextNode('');
      new MutationObserver(flush$1).observe(node, { characterData: true });
      notify$1 = function () {
        node.data = toggle = !toggle;
      };
    // environments with maybe non-completely correct, but existent Promise
    } else if (!IS_IOS_PEBBLE && Promise$1 && Promise$1.resolve) {
      // Promise.resolve without an argument throws an error in LG WebOS 2
      promise$1 = Promise$1.resolve(undefined);
      // workaround of WebKit ~ iOS Safari 10.1 bug
      promise$1.constructor = Promise$1;
      then = bind$3(promise$1.then, promise$1);
      notify$1 = function () {
        then(flush$1);
      };
    // Node.js without promises
    } else if (IS_NODE$1) {
      notify$1 = function () {
        process$1.nextTick(flush$1);
      };
    // for other environments - macrotask based on:
    // - setImmediate
    // - MessageChannel
    // - window.postMessag
    // - onreadystatechange
    // - setTimeout
    } else {
      // strange IE + webpack dev server bug - use .bind(global)
      macrotask = bind$3(macrotask, global$v);
      notify$1 = function () {
        macrotask(flush$1);
      };
    }
  }

  var microtask$1 = queueMicrotask || function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify$1();
    } last = task;
  };

  var newPromiseCapability$2 = {};

  var aCallable$4 = aCallable$9;

  var PromiseCapability = function (C) {
    var resolve, reject;
    this.promise = new C(function ($$resolve, $$reject) {
      if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
      resolve = $$resolve;
      reject = $$reject;
    });
    this.resolve = aCallable$4(resolve);
    this.reject = aCallable$4(reject);
  };

  // `NewPromiseCapability` abstract operation
  // https://tc39.es/ecma262/#sec-newpromisecapability
  newPromiseCapability$2.f = function (C) {
    return new PromiseCapability(C);
  };

  var anObject$9 = anObject$k;
  var isObject$6 = isObject$l;
  var newPromiseCapability$1 = newPromiseCapability$2;

  var promiseResolve$1 = function (C, x) {
    anObject$9(C);
    if (isObject$6(x) && x.constructor === C) return x;
    var promiseCapability = newPromiseCapability$1.f(C);
    var resolve = promiseCapability.resolve;
    resolve(x);
    return promiseCapability.promise;
  };

  var global$u = global$17;

  var hostReportErrors$1 = function (a, b) {
    var console = global$u.console;
    if (console && console.error) {
      arguments.length == 1 ? console.error(a) : console.error(a, b);
    }
  };

  var perform$1 = function (exec) {
    try {
      return { error: false, value: exec() };
    } catch (error) {
      return { error: true, value: error };
    }
  };

  var engineIsBrowser = typeof window == 'object';

  var $$o = _export;
  var global$t = global$17;
  var getBuiltIn$1 = getBuiltIn$9;
  var call$d = functionCall;
  var NativePromise = nativePromiseConstructor;
  var redefine$5 = redefine$c.exports;
  var redefineAll$1 = redefineAll$3;
  var setPrototypeOf$3 = objectSetPrototypeOf;
  var setToStringTag$4 = setToStringTag$8;
  var setSpecies$2 = setSpecies$4;
  var aCallable$3 = aCallable$9;
  var isCallable$6 = isCallable$p;
  var isObject$5 = isObject$l;
  var anInstance$2 = anInstance$5;
  var inspectSource = inspectSource$4;
  var iterate = iterate$3;
  var checkCorrectnessOfIteration$2 = checkCorrectnessOfIteration$4;
  var speciesConstructor$2 = speciesConstructor$3;
  var task = task$1.set;
  var microtask = microtask$1;
  var promiseResolve = promiseResolve$1;
  var hostReportErrors = hostReportErrors$1;
  var newPromiseCapabilityModule = newPromiseCapability$2;
  var perform = perform$1;
  var InternalStateModule$3 = internalState;
  var isForced$1 = isForced_1;
  var wellKnownSymbol$a = wellKnownSymbol$s;
  var IS_BROWSER = engineIsBrowser;
  var IS_NODE = engineIsNode;
  var V8_VERSION = engineV8Version;

  var SPECIES$1 = wellKnownSymbol$a('species');
  var PROMISE = 'Promise';

  var getInternalState$4 = InternalStateModule$3.get;
  var setInternalState$3 = InternalStateModule$3.set;
  var getInternalPromiseState = InternalStateModule$3.getterFor(PROMISE);
  var NativePromisePrototype = NativePromise && NativePromise.prototype;
  var PromiseConstructor = NativePromise;
  var PromisePrototype = NativePromisePrototype;
  var TypeError$8 = global$t.TypeError;
  var document$1 = global$t.document;
  var process = global$t.process;
  var newPromiseCapability = newPromiseCapabilityModule.f;
  var newGenericPromiseCapability = newPromiseCapability;

  var DISPATCH_EVENT = !!(document$1 && document$1.createEvent && global$t.dispatchEvent);
  var NATIVE_REJECTION_EVENT = isCallable$6(global$t.PromiseRejectionEvent);
  var UNHANDLED_REJECTION = 'unhandledrejection';
  var REJECTION_HANDLED = 'rejectionhandled';
  var PENDING = 0;
  var FULFILLED = 1;
  var REJECTED = 2;
  var HANDLED = 1;
  var UNHANDLED = 2;
  var SUBCLASSING = false;

  var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

  var FORCED$7 = isForced$1(PROMISE, function () {
    var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(PromiseConstructor);
    var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(PromiseConstructor);
    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
    // We can't detect it synchronously, so just check versions
    if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;
    // We can't use @@species feature detection in V8 since it causes
    // deoptimization and performance degradation
    // https://github.com/zloirock/core-js/issues/679
    if (V8_VERSION >= 51 && /native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) return false;
    // Detect correctness of subclassing with @@species support
    var promise = new PromiseConstructor(function (resolve) { resolve(1); });
    var FakePromise = function (exec) {
      exec(function () { /* empty */ }, function () { /* empty */ });
    };
    var constructor = promise.constructor = {};
    constructor[SPECIES$1] = FakePromise;
    SUBCLASSING = promise.then(function () { /* empty */ }) instanceof FakePromise;
    if (!SUBCLASSING) return true;
    // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return !GLOBAL_CORE_JS_PROMISE && IS_BROWSER && !NATIVE_REJECTION_EVENT;
  });

  var INCORRECT_ITERATION$1 = FORCED$7 || !checkCorrectnessOfIteration$2(function (iterable) {
    PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });
  });

  // helpers
  var isThenable = function (it) {
    var then;
    return isObject$5(it) && isCallable$6(then = it.then) ? then : false;
  };

  var notify = function (state, isReject) {
    if (state.notified) return;
    state.notified = true;
    var chain = state.reactions;
    microtask(function () {
      var value = state.value;
      var ok = state.state == FULFILLED;
      var index = 0;
      // variable length - can't use forEach
      while (chain.length > index) {
        var reaction = chain[index++];
        var handler = ok ? reaction.ok : reaction.fail;
        var resolve = reaction.resolve;
        var reject = reaction.reject;
        var domain = reaction.domain;
        var result, then, exited;
        try {
          if (handler) {
            if (!ok) {
              if (state.rejection === UNHANDLED) onHandleUnhandled(state);
              state.rejection = HANDLED;
            }
            if (handler === true) result = value;
            else {
              if (domain) domain.enter();
              result = handler(value); // can throw
              if (domain) {
                domain.exit();
                exited = true;
              }
            }
            if (result === reaction.promise) {
              reject(TypeError$8('Promise-chain cycle'));
            } else if (then = isThenable(result)) {
              call$d(then, result, resolve, reject);
            } else resolve(result);
          } else reject(value);
        } catch (error) {
          if (domain && !exited) domain.exit();
          reject(error);
        }
      }
      state.reactions = [];
      state.notified = false;
      if (isReject && !state.rejection) onUnhandled(state);
    });
  };

  var dispatchEvent = function (name, promise, reason) {
    var event, handler;
    if (DISPATCH_EVENT) {
      event = document$1.createEvent('Event');
      event.promise = promise;
      event.reason = reason;
      event.initEvent(name, false, true);
      global$t.dispatchEvent(event);
    } else event = { promise: promise, reason: reason };
    if (!NATIVE_REJECTION_EVENT && (handler = global$t['on' + name])) handler(event);
    else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
  };

  var onUnhandled = function (state) {
    call$d(task, global$t, function () {
      var promise = state.facade;
      var value = state.value;
      var IS_UNHANDLED = isUnhandled(state);
      var result;
      if (IS_UNHANDLED) {
        result = perform(function () {
          if (IS_NODE) {
            process.emit('unhandledRejection', value, promise);
          } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
        });
        // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
        state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
        if (result.error) throw result.value;
      }
    });
  };

  var isUnhandled = function (state) {
    return state.rejection !== HANDLED && !state.parent;
  };

  var onHandleUnhandled = function (state) {
    call$d(task, global$t, function () {
      var promise = state.facade;
      if (IS_NODE) {
        process.emit('rejectionHandled', promise);
      } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
    });
  };

  var bind$2 = function (fn, state, unwrap) {
    return function (value) {
      fn(state, value, unwrap);
    };
  };

  var internalReject = function (state, value, unwrap) {
    if (state.done) return;
    state.done = true;
    if (unwrap) state = unwrap;
    state.value = value;
    state.state = REJECTED;
    notify(state, true);
  };

  var internalResolve = function (state, value, unwrap) {
    if (state.done) return;
    state.done = true;
    if (unwrap) state = unwrap;
    try {
      if (state.facade === value) throw TypeError$8("Promise can't be resolved itself");
      var then = isThenable(value);
      if (then) {
        microtask(function () {
          var wrapper = { done: false };
          try {
            call$d(then, value,
              bind$2(internalResolve, wrapper, state),
              bind$2(internalReject, wrapper, state)
            );
          } catch (error) {
            internalReject(wrapper, error, state);
          }
        });
      } else {
        state.value = value;
        state.state = FULFILLED;
        notify(state, false);
      }
    } catch (error) {
      internalReject({ done: false }, error, state);
    }
  };

  // constructor polyfill
  if (FORCED$7) {
    // 25.4.3.1 Promise(executor)
    PromiseConstructor = function Promise(executor) {
      anInstance$2(this, PromisePrototype);
      aCallable$3(executor);
      call$d(Internal, this);
      var state = getInternalState$4(this);
      try {
        executor(bind$2(internalResolve, state), bind$2(internalReject, state));
      } catch (error) {
        internalReject(state, error);
      }
    };
    PromisePrototype = PromiseConstructor.prototype;
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    Internal = function Promise(executor) {
      setInternalState$3(this, {
        type: PROMISE,
        done: false,
        notified: false,
        parent: false,
        reactions: [],
        rejection: false,
        state: PENDING,
        value: undefined
      });
    };
    Internal.prototype = redefineAll$1(PromisePrototype, {
      // `Promise.prototype.then` method
      // https://tc39.es/ecma262/#sec-promise.prototype.then
      then: function then(onFulfilled, onRejected) {
        var state = getInternalPromiseState(this);
        var reactions = state.reactions;
        var reaction = newPromiseCapability(speciesConstructor$2(this, PromiseConstructor));
        reaction.ok = isCallable$6(onFulfilled) ? onFulfilled : true;
        reaction.fail = isCallable$6(onRejected) && onRejected;
        reaction.domain = IS_NODE ? process.domain : undefined;
        state.parent = true;
        reactions[reactions.length] = reaction;
        if (state.state != PENDING) notify(state, false);
        return reaction.promise;
      },
      // `Promise.prototype.catch` method
      // https://tc39.es/ecma262/#sec-promise.prototype.catch
      'catch': function (onRejected) {
        return this.then(undefined, onRejected);
      }
    });
    OwnPromiseCapability = function () {
      var promise = new Internal();
      var state = getInternalState$4(promise);
      this.promise = promise;
      this.resolve = bind$2(internalResolve, state);
      this.reject = bind$2(internalReject, state);
    };
    newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
      return C === PromiseConstructor || C === PromiseWrapper
        ? new OwnPromiseCapability(C)
        : newGenericPromiseCapability(C);
    };

    if (isCallable$6(NativePromise) && NativePromisePrototype !== Object.prototype) {
      nativeThen = NativePromisePrototype.then;

      if (!SUBCLASSING) {
        // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
        redefine$5(NativePromisePrototype, 'then', function then(onFulfilled, onRejected) {
          var that = this;
          return new PromiseConstructor(function (resolve, reject) {
            call$d(nativeThen, that, resolve, reject);
          }).then(onFulfilled, onRejected);
        // https://github.com/zloirock/core-js/issues/640
        }, { unsafe: true });

        // makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`
        redefine$5(NativePromisePrototype, 'catch', PromisePrototype['catch'], { unsafe: true });
      }

      // make `.constructor === Promise` work for native promise-based APIs
      try {
        delete NativePromisePrototype.constructor;
      } catch (error) { /* empty */ }

      // make `instanceof Promise` work for native promise-based APIs
      if (setPrototypeOf$3) {
        setPrototypeOf$3(NativePromisePrototype, PromisePrototype);
      }
    }
  }

  $$o({ global: true, wrap: true, forced: FORCED$7 }, {
    Promise: PromiseConstructor
  });

  setToStringTag$4(PromiseConstructor, PROMISE, false);
  setSpecies$2(PROMISE);

  PromiseWrapper = getBuiltIn$1(PROMISE);

  // statics
  $$o({ target: PROMISE, stat: true, forced: FORCED$7 }, {
    // `Promise.reject` method
    // https://tc39.es/ecma262/#sec-promise.reject
    reject: function reject(r) {
      var capability = newPromiseCapability(this);
      call$d(capability.reject, undefined, r);
      return capability.promise;
    }
  });

  $$o({ target: PROMISE, stat: true, forced: FORCED$7 }, {
    // `Promise.resolve` method
    // https://tc39.es/ecma262/#sec-promise.resolve
    resolve: function resolve(x) {
      return promiseResolve(this, x);
    }
  });

  $$o({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION$1 }, {
    // `Promise.all` method
    // https://tc39.es/ecma262/#sec-promise.all
    all: function all(iterable) {
      var C = this;
      var capability = newPromiseCapability(C);
      var resolve = capability.resolve;
      var reject = capability.reject;
      var result = perform(function () {
        var $promiseResolve = aCallable$3(C.resolve);
        var values = [];
        var counter = 0;
        var remaining = 1;
        iterate(iterable, function (promise) {
          var index = counter++;
          var alreadyCalled = false;
          remaining++;
          call$d($promiseResolve, C, promise).then(function (value) {
            if (alreadyCalled) return;
            alreadyCalled = true;
            values[index] = value;
            --remaining || resolve(values);
          }, reject);
        });
        --remaining || resolve(values);
      });
      if (result.error) reject(result.value);
      return capability.promise;
    },
    // `Promise.race` method
    // https://tc39.es/ecma262/#sec-promise.race
    race: function race(iterable) {
      var C = this;
      var capability = newPromiseCapability(C);
      var reject = capability.reject;
      var result = perform(function () {
        var $promiseResolve = aCallable$3(C.resolve);
        iterate(iterable, function (promise) {
          call$d($promiseResolve, C, promise).then(capability.resolve, reject);
        });
      });
      if (result.error) reject(result.value);
      return capability.promise;
    }
  });

  var typedArrayConstructor = {exports: {}};

  // eslint-disable-next-line es/no-typed-arrays -- safe
  var arrayBufferNative = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';

  var NATIVE_ARRAY_BUFFER$1 = arrayBufferNative;
  var DESCRIPTORS$7 = descriptors;
  var global$s = global$17;
  var isCallable$5 = isCallable$p;
  var isObject$4 = isObject$l;
  var hasOwn$5 = hasOwnProperty_1;
  var classof$3 = classof$b;
  var tryToString = tryToString$5;
  var createNonEnumerableProperty$4 = createNonEnumerableProperty$b;
  var redefine$4 = redefine$c.exports;
  var defineProperty$5 = objectDefineProperty.f;
  var isPrototypeOf$5 = objectIsPrototypeOf;
  var getPrototypeOf$1 = objectGetPrototypeOf;
  var setPrototypeOf$2 = objectSetPrototypeOf;
  var wellKnownSymbol$9 = wellKnownSymbol$s;
  var uid$1 = uid$5;

  var Int8Array$3 = global$s.Int8Array;
  var Int8ArrayPrototype = Int8Array$3 && Int8Array$3.prototype;
  var Uint8ClampedArray = global$s.Uint8ClampedArray;
  var Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;
  var TypedArray$1 = Int8Array$3 && getPrototypeOf$1(Int8Array$3);
  var TypedArrayPrototype$1 = Int8ArrayPrototype && getPrototypeOf$1(Int8ArrayPrototype);
  var ObjectPrototype$2 = Object.prototype;
  var TypeError$7 = global$s.TypeError;

  var TO_STRING_TAG = wellKnownSymbol$9('toStringTag');
  var TYPED_ARRAY_TAG$1 = uid$1('TYPED_ARRAY_TAG');
  var TYPED_ARRAY_CONSTRUCTOR$2 = uid$1('TYPED_ARRAY_CONSTRUCTOR');
  // Fixing native typed arrays in Opera Presto crashes the browser, see #595
  var NATIVE_ARRAY_BUFFER_VIEWS$2 = NATIVE_ARRAY_BUFFER$1 && !!setPrototypeOf$2 && classof$3(global$s.opera) !== 'Opera';
  var TYPED_ARRAY_TAG_REQIRED = false;
  var NAME, Constructor, Prototype;

  var TypedArrayConstructorsList = {
    Int8Array: 1,
    Uint8Array: 1,
    Uint8ClampedArray: 1,
    Int16Array: 2,
    Uint16Array: 2,
    Int32Array: 4,
    Uint32Array: 4,
    Float32Array: 4,
    Float64Array: 8
  };

  var BigIntArrayConstructorsList = {
    BigInt64Array: 8,
    BigUint64Array: 8
  };

  var isView = function isView(it) {
    if (!isObject$4(it)) return false;
    var klass = classof$3(it);
    return klass === 'DataView'
      || hasOwn$5(TypedArrayConstructorsList, klass)
      || hasOwn$5(BigIntArrayConstructorsList, klass);
  };

  var isTypedArray$1 = function (it) {
    if (!isObject$4(it)) return false;
    var klass = classof$3(it);
    return hasOwn$5(TypedArrayConstructorsList, klass)
      || hasOwn$5(BigIntArrayConstructorsList, klass);
  };

  var aTypedArray$m = function (it) {
    if (isTypedArray$1(it)) return it;
    throw TypeError$7('Target is not a typed array');
  };

  var aTypedArrayConstructor$3 = function (C) {
    if (isCallable$5(C) && (!setPrototypeOf$2 || isPrototypeOf$5(TypedArray$1, C))) return C;
    throw TypeError$7(tryToString(C) + ' is not a typed array constructor');
  };

  var exportTypedArrayMethod$n = function (KEY, property, forced) {
    if (!DESCRIPTORS$7) return;
    if (forced) for (var ARRAY in TypedArrayConstructorsList) {
      var TypedArrayConstructor = global$s[ARRAY];
      if (TypedArrayConstructor && hasOwn$5(TypedArrayConstructor.prototype, KEY)) try {
        delete TypedArrayConstructor.prototype[KEY];
      } catch (error) { /* empty */ }
    }
    if (!TypedArrayPrototype$1[KEY] || forced) {
      redefine$4(TypedArrayPrototype$1, KEY, forced ? property
        : NATIVE_ARRAY_BUFFER_VIEWS$2 && Int8ArrayPrototype[KEY] || property);
    }
  };

  var exportTypedArrayStaticMethod = function (KEY, property, forced) {
    var ARRAY, TypedArrayConstructor;
    if (!DESCRIPTORS$7) return;
    if (setPrototypeOf$2) {
      if (forced) for (ARRAY in TypedArrayConstructorsList) {
        TypedArrayConstructor = global$s[ARRAY];
        if (TypedArrayConstructor && hasOwn$5(TypedArrayConstructor, KEY)) try {
          delete TypedArrayConstructor[KEY];
        } catch (error) { /* empty */ }
      }
      if (!TypedArray$1[KEY] || forced) {
        // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable
        try {
          return redefine$4(TypedArray$1, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS$2 && TypedArray$1[KEY] || property);
        } catch (error) { /* empty */ }
      } else return;
    }
    for (ARRAY in TypedArrayConstructorsList) {
      TypedArrayConstructor = global$s[ARRAY];
      if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {
        redefine$4(TypedArrayConstructor, KEY, property);
      }
    }
  };

  for (NAME in TypedArrayConstructorsList) {
    Constructor = global$s[NAME];
    Prototype = Constructor && Constructor.prototype;
    if (Prototype) createNonEnumerableProperty$4(Prototype, TYPED_ARRAY_CONSTRUCTOR$2, Constructor);
    else NATIVE_ARRAY_BUFFER_VIEWS$2 = false;
  }

  for (NAME in BigIntArrayConstructorsList) {
    Constructor = global$s[NAME];
    Prototype = Constructor && Constructor.prototype;
    if (Prototype) createNonEnumerableProperty$4(Prototype, TYPED_ARRAY_CONSTRUCTOR$2, Constructor);
  }

  // WebKit bug - typed arrays constructors prototype is Object.prototype
  if (!NATIVE_ARRAY_BUFFER_VIEWS$2 || !isCallable$5(TypedArray$1) || TypedArray$1 === Function.prototype) {
    // eslint-disable-next-line no-shadow -- safe
    TypedArray$1 = function TypedArray() {
      throw TypeError$7('Incorrect invocation');
    };
    if (NATIVE_ARRAY_BUFFER_VIEWS$2) for (NAME in TypedArrayConstructorsList) {
      if (global$s[NAME]) setPrototypeOf$2(global$s[NAME], TypedArray$1);
    }
  }

  if (!NATIVE_ARRAY_BUFFER_VIEWS$2 || !TypedArrayPrototype$1 || TypedArrayPrototype$1 === ObjectPrototype$2) {
    TypedArrayPrototype$1 = TypedArray$1.prototype;
    if (NATIVE_ARRAY_BUFFER_VIEWS$2) for (NAME in TypedArrayConstructorsList) {
      if (global$s[NAME]) setPrototypeOf$2(global$s[NAME].prototype, TypedArrayPrototype$1);
    }
  }

  // WebKit bug - one more object in Uint8ClampedArray prototype chain
  if (NATIVE_ARRAY_BUFFER_VIEWS$2 && getPrototypeOf$1(Uint8ClampedArrayPrototype) !== TypedArrayPrototype$1) {
    setPrototypeOf$2(Uint8ClampedArrayPrototype, TypedArrayPrototype$1);
  }

  if (DESCRIPTORS$7 && !hasOwn$5(TypedArrayPrototype$1, TO_STRING_TAG)) {
    TYPED_ARRAY_TAG_REQIRED = true;
    defineProperty$5(TypedArrayPrototype$1, TO_STRING_TAG, { get: function () {
      return isObject$4(this) ? this[TYPED_ARRAY_TAG$1] : undefined;
    } });
    for (NAME in TypedArrayConstructorsList) if (global$s[NAME]) {
      createNonEnumerableProperty$4(global$s[NAME], TYPED_ARRAY_TAG$1, NAME);
    }
  }

  var arrayBufferViewCore = {
    NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS$2,
    TYPED_ARRAY_CONSTRUCTOR: TYPED_ARRAY_CONSTRUCTOR$2,
    TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQIRED && TYPED_ARRAY_TAG$1,
    aTypedArray: aTypedArray$m,
    aTypedArrayConstructor: aTypedArrayConstructor$3,
    exportTypedArrayMethod: exportTypedArrayMethod$n,
    exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,
    isView: isView,
    isTypedArray: isTypedArray$1,
    TypedArray: TypedArray$1,
    TypedArrayPrototype: TypedArrayPrototype$1
  };

  /* eslint-disable no-new -- required for testing */

  var global$r = global$17;
  var fails$k = fails$D;
  var checkCorrectnessOfIteration$1 = checkCorrectnessOfIteration$4;
  var NATIVE_ARRAY_BUFFER_VIEWS$1 = arrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;

  var ArrayBuffer$2 = global$r.ArrayBuffer;
  var Int8Array$2 = global$r.Int8Array;

  var typedArrayConstructorsRequireWrappers = !NATIVE_ARRAY_BUFFER_VIEWS$1 || !fails$k(function () {
    Int8Array$2(1);
  }) || !fails$k(function () {
    new Int8Array$2(-1);
  }) || !checkCorrectnessOfIteration$1(function (iterable) {
    new Int8Array$2();
    new Int8Array$2(null);
    new Int8Array$2(1.5);
    new Int8Array$2(iterable);
  }, true) || fails$k(function () {
    // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill
    return new Int8Array$2(new ArrayBuffer$2(2), 1, undefined).length !== 1;
  });

  var global$q = global$17;
  var toIntegerOrInfinity$5 = toIntegerOrInfinity$9;
  var toLength$7 = toLength$9;

  var RangeError$5 = global$q.RangeError;

  // `ToIndex` abstract operation
  // https://tc39.es/ecma262/#sec-toindex
  var toIndex$2 = function (it) {
    if (it === undefined) return 0;
    var number = toIntegerOrInfinity$5(it);
    var length = toLength$7(number);
    if (number !== length) throw RangeError$5('Wrong length or index');
    return length;
  };

  // IEEE754 conversions based on https://github.com/feross/ieee754
  var global$p = global$17;

  var Array$4 = global$p.Array;
  var abs = Math.abs;
  var pow = Math.pow;
  var floor$4 = Math.floor;
  var log = Math.log;
  var LN2 = Math.LN2;

  var pack = function (number, mantissaLength, bytes) {
    var buffer = Array$4(bytes);
    var exponentLength = bytes * 8 - mantissaLength - 1;
    var eMax = (1 << exponentLength) - 1;
    var eBias = eMax >> 1;
    var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;
    var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;
    var index = 0;
    var exponent, mantissa, c;
    number = abs(number);
    // eslint-disable-next-line no-self-compare -- NaN check
    if (number != number || number === Infinity) {
      // eslint-disable-next-line no-self-compare -- NaN check
      mantissa = number != number ? 1 : 0;
      exponent = eMax;
    } else {
      exponent = floor$4(log(number) / LN2);
      if (number * (c = pow(2, -exponent)) < 1) {
        exponent--;
        c *= 2;
      }
      if (exponent + eBias >= 1) {
        number += rt / c;
      } else {
        number += rt * pow(2, 1 - eBias);
      }
      if (number * c >= 2) {
        exponent++;
        c /= 2;
      }
      if (exponent + eBias >= eMax) {
        mantissa = 0;
        exponent = eMax;
      } else if (exponent + eBias >= 1) {
        mantissa = (number * c - 1) * pow(2, mantissaLength);
        exponent = exponent + eBias;
      } else {
        mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);
        exponent = 0;
      }
    }
    for (; mantissaLength >= 8; buffer[index++] = mantissa & 255, mantissa /= 256, mantissaLength -= 8);
    exponent = exponent << mantissaLength | mantissa;
    exponentLength += mantissaLength;
    for (; exponentLength > 0; buffer[index++] = exponent & 255, exponent /= 256, exponentLength -= 8);
    buffer[--index] |= sign * 128;
    return buffer;
  };

  var unpack = function (buffer, mantissaLength) {
    var bytes = buffer.length;
    var exponentLength = bytes * 8 - mantissaLength - 1;
    var eMax = (1 << exponentLength) - 1;
    var eBias = eMax >> 1;
    var nBits = exponentLength - 7;
    var index = bytes - 1;
    var sign = buffer[index--];
    var exponent = sign & 127;
    var mantissa;
    sign >>= 7;
    for (; nBits > 0; exponent = exponent * 256 + buffer[index], index--, nBits -= 8);
    mantissa = exponent & (1 << -nBits) - 1;
    exponent >>= -nBits;
    nBits += mantissaLength;
    for (; nBits > 0; mantissa = mantissa * 256 + buffer[index], index--, nBits -= 8);
    if (exponent === 0) {
      exponent = 1 - eBias;
    } else if (exponent === eMax) {
      return mantissa ? NaN : sign ? -Infinity : Infinity;
    } else {
      mantissa = mantissa + pow(2, mantissaLength);
      exponent = exponent - eBias;
    } return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);
  };

  var ieee754 = {
    pack: pack,
    unpack: unpack
  };

  var toObject$b = toObject$h;
  var toAbsoluteIndex$3 = toAbsoluteIndex$6;
  var lengthOfArrayLike$8 = lengthOfArrayLike$e;

  // `Array.prototype.fill` method implementation
  // https://tc39.es/ecma262/#sec-array.prototype.fill
  var arrayFill$1 = function fill(value /* , start = 0, end = @length */) {
    var O = toObject$b(this);
    var length = lengthOfArrayLike$8(O);
    var argumentsLength = arguments.length;
    var index = toAbsoluteIndex$3(argumentsLength > 1 ? arguments[1] : undefined, length);
    var end = argumentsLength > 2 ? arguments[2] : undefined;
    var endPos = end === undefined ? length : toAbsoluteIndex$3(end, length);
    while (endPos > index) O[index++] = value;
    return O;
  };

  var global$o = global$17;
  var uncurryThis$m = functionUncurryThis;
  var DESCRIPTORS$6 = descriptors;
  var NATIVE_ARRAY_BUFFER = arrayBufferNative;
  var FunctionName = functionName;
  var createNonEnumerableProperty$3 = createNonEnumerableProperty$b;
  var redefineAll = redefineAll$3;
  var fails$j = fails$D;
  var anInstance$1 = anInstance$5;
  var toIntegerOrInfinity$4 = toIntegerOrInfinity$9;
  var toLength$6 = toLength$9;
  var toIndex$1 = toIndex$2;
  var IEEE754 = ieee754;
  var getPrototypeOf = objectGetPrototypeOf;
  var setPrototypeOf$1 = objectSetPrototypeOf;
  var getOwnPropertyNames$2 = objectGetOwnPropertyNames.f;
  var defineProperty$4 = objectDefineProperty.f;
  var arrayFill = arrayFill$1;
  var arraySlice$5 = arraySlice$9;
  var setToStringTag$3 = setToStringTag$8;
  var InternalStateModule$2 = internalState;

  var PROPER_FUNCTION_NAME$3 = FunctionName.PROPER;
  var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
  var getInternalState$3 = InternalStateModule$2.get;
  var setInternalState$2 = InternalStateModule$2.set;
  var ARRAY_BUFFER = 'ArrayBuffer';
  var DATA_VIEW = 'DataView';
  var PROTOTYPE$1 = 'prototype';
  var WRONG_LENGTH$1 = 'Wrong length';
  var WRONG_INDEX = 'Wrong index';
  var NativeArrayBuffer = global$o[ARRAY_BUFFER];
  var $ArrayBuffer = NativeArrayBuffer;
  var ArrayBufferPrototype$1 = $ArrayBuffer && $ArrayBuffer[PROTOTYPE$1];
  var $DataView = global$o[DATA_VIEW];
  var DataViewPrototype = $DataView && $DataView[PROTOTYPE$1];
  var ObjectPrototype$1 = Object.prototype;
  var Array$3 = global$o.Array;
  var RangeError$4 = global$o.RangeError;
  var fill$1 = uncurryThis$m(arrayFill);
  var reverse = uncurryThis$m([].reverse);

  var packIEEE754 = IEEE754.pack;
  var unpackIEEE754 = IEEE754.unpack;

  var packInt8 = function (number) {
    return [number & 0xFF];
  };

  var packInt16 = function (number) {
    return [number & 0xFF, number >> 8 & 0xFF];
  };

  var packInt32 = function (number) {
    return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];
  };

  var unpackInt32 = function (buffer) {
    return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];
  };

  var packFloat32 = function (number) {
    return packIEEE754(number, 23, 4);
  };

  var packFloat64 = function (number) {
    return packIEEE754(number, 52, 8);
  };

  var addGetter$1 = function (Constructor, key) {
    defineProperty$4(Constructor[PROTOTYPE$1], key, { get: function () { return getInternalState$3(this)[key]; } });
  };

  var get = function (view, count, index, isLittleEndian) {
    var intIndex = toIndex$1(index);
    var store = getInternalState$3(view);
    if (intIndex + count > store.byteLength) throw RangeError$4(WRONG_INDEX);
    var bytes = getInternalState$3(store.buffer).bytes;
    var start = intIndex + store.byteOffset;
    var pack = arraySlice$5(bytes, start, start + count);
    return isLittleEndian ? pack : reverse(pack);
  };

  var set = function (view, count, index, conversion, value, isLittleEndian) {
    var intIndex = toIndex$1(index);
    var store = getInternalState$3(view);
    if (intIndex + count > store.byteLength) throw RangeError$4(WRONG_INDEX);
    var bytes = getInternalState$3(store.buffer).bytes;
    var start = intIndex + store.byteOffset;
    var pack = conversion(+value);
    for (var i = 0; i < count; i++) bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];
  };

  if (!NATIVE_ARRAY_BUFFER) {
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance$1(this, ArrayBufferPrototype$1);
      var byteLength = toIndex$1(length);
      setInternalState$2(this, {
        bytes: fill$1(Array$3(byteLength), 0),
        byteLength: byteLength
      });
      if (!DESCRIPTORS$6) this.byteLength = byteLength;
    };

    ArrayBufferPrototype$1 = $ArrayBuffer[PROTOTYPE$1];

    $DataView = function DataView(buffer, byteOffset, byteLength) {
      anInstance$1(this, DataViewPrototype);
      anInstance$1(buffer, ArrayBufferPrototype$1);
      var bufferLength = getInternalState$3(buffer).byteLength;
      var offset = toIntegerOrInfinity$4(byteOffset);
      if (offset < 0 || offset > bufferLength) throw RangeError$4('Wrong offset');
      byteLength = byteLength === undefined ? bufferLength - offset : toLength$6(byteLength);
      if (offset + byteLength > bufferLength) throw RangeError$4(WRONG_LENGTH$1);
      setInternalState$2(this, {
        buffer: buffer,
        byteLength: byteLength,
        byteOffset: offset
      });
      if (!DESCRIPTORS$6) {
        this.buffer = buffer;
        this.byteLength = byteLength;
        this.byteOffset = offset;
      }
    };

    DataViewPrototype = $DataView[PROTOTYPE$1];

    if (DESCRIPTORS$6) {
      addGetter$1($ArrayBuffer, 'byteLength');
      addGetter$1($DataView, 'buffer');
      addGetter$1($DataView, 'byteLength');
      addGetter$1($DataView, 'byteOffset');
    }

    redefineAll(DataViewPrototype, {
      getInt8: function getInt8(byteOffset) {
        return get(this, 1, byteOffset)[0] << 24 >> 24;
      },
      getUint8: function getUint8(byteOffset) {
        return get(this, 1, byteOffset)[0];
      },
      getInt16: function getInt16(byteOffset /* , littleEndian */) {
        var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
        return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
      },
      getUint16: function getUint16(byteOffset /* , littleEndian */) {
        var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
        return bytes[1] << 8 | bytes[0];
      },
      getInt32: function getInt32(byteOffset /* , littleEndian */) {
        return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined));
      },
      getUint32: function getUint32(byteOffset /* , littleEndian */) {
        return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined)) >>> 0;
      },
      getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
        return unpackIEEE754(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 23);
      },
      getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
        return unpackIEEE754(get(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 52);
      },
      setInt8: function setInt8(byteOffset, value) {
        set(this, 1, byteOffset, packInt8, value);
      },
      setUint8: function setUint8(byteOffset, value) {
        set(this, 1, byteOffset, packInt8, value);
      },
      setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
        set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
      },
      setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
        set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
      },
      setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
        set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
      },
      setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
        set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
      },
      setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
        set(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : undefined);
      },
      setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
        set(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : undefined);
      }
    });
  } else {
    var INCORRECT_ARRAY_BUFFER_NAME = PROPER_FUNCTION_NAME$3 && NativeArrayBuffer.name !== ARRAY_BUFFER;
    /* eslint-disable no-new -- required for testing */
    if (!fails$j(function () {
      NativeArrayBuffer(1);
    }) || !fails$j(function () {
      new NativeArrayBuffer(-1);
    }) || fails$j(function () {
      new NativeArrayBuffer();
      new NativeArrayBuffer(1.5);
      new NativeArrayBuffer(NaN);
      return INCORRECT_ARRAY_BUFFER_NAME && !CONFIGURABLE_FUNCTION_NAME;
    })) {
    /* eslint-enable no-new -- required for testing */
      $ArrayBuffer = function ArrayBuffer(length) {
        anInstance$1(this, ArrayBufferPrototype$1);
        return new NativeArrayBuffer(toIndex$1(length));
      };

      $ArrayBuffer[PROTOTYPE$1] = ArrayBufferPrototype$1;

      for (var keys$1 = getOwnPropertyNames$2(NativeArrayBuffer), j = 0, key; keys$1.length > j;) {
        if (!((key = keys$1[j++]) in $ArrayBuffer)) {
          createNonEnumerableProperty$3($ArrayBuffer, key, NativeArrayBuffer[key]);
        }
      }

      ArrayBufferPrototype$1.constructor = $ArrayBuffer;
    } else if (INCORRECT_ARRAY_BUFFER_NAME && CONFIGURABLE_FUNCTION_NAME) {
      createNonEnumerableProperty$3(NativeArrayBuffer, 'name', ARRAY_BUFFER);
    }

    // WebKit bug - the same parent prototype for typed arrays and data view
    if (setPrototypeOf$1 && getPrototypeOf(DataViewPrototype) !== ObjectPrototype$1) {
      setPrototypeOf$1(DataViewPrototype, ObjectPrototype$1);
    }

    // iOS Safari 7.x bug
    var testView = new $DataView(new $ArrayBuffer(2));
    var $setInt8 = uncurryThis$m(DataViewPrototype.setInt8);
    testView.setInt8(0, 2147483648);
    testView.setInt8(1, 2147483649);
    if (testView.getInt8(0) || !testView.getInt8(1)) redefineAll(DataViewPrototype, {
      setInt8: function setInt8(byteOffset, value) {
        $setInt8(this, byteOffset, value << 24 >> 24);
      },
      setUint8: function setUint8(byteOffset, value) {
        $setInt8(this, byteOffset, value << 24 >> 24);
      }
    }, { unsafe: true });
  }

  setToStringTag$3($ArrayBuffer, ARRAY_BUFFER);
  setToStringTag$3($DataView, DATA_VIEW);

  var arrayBuffer = {
    ArrayBuffer: $ArrayBuffer,
    DataView: $DataView
  };

  var isObject$3 = isObject$l;

  var floor$3 = Math.floor;

  // `IsIntegralNumber` abstract operation
  // https://tc39.es/ecma262/#sec-isintegralnumber
  // eslint-disable-next-line es/no-number-isinteger -- safe
  var isIntegralNumber$1 = Number.isInteger || function isInteger(it) {
    return !isObject$3(it) && isFinite(it) && floor$3(it) === it;
  };

  var global$n = global$17;
  var toIntegerOrInfinity$3 = toIntegerOrInfinity$9;

  var RangeError$3 = global$n.RangeError;

  var toPositiveInteger$1 = function (it) {
    var result = toIntegerOrInfinity$3(it);
    if (result < 0) throw RangeError$3("The argument can't be less than 0");
    return result;
  };

  var global$m = global$17;
  var toPositiveInteger = toPositiveInteger$1;

  var RangeError$2 = global$m.RangeError;

  var toOffset$2 = function (it, BYTES) {
    var offset = toPositiveInteger(it);
    if (offset % BYTES) throw RangeError$2('Wrong offset');
    return offset;
  };

  var bind$1 = functionBindContext;
  var call$c = functionCall;
  var aConstructor = aConstructor$3;
  var toObject$a = toObject$h;
  var lengthOfArrayLike$7 = lengthOfArrayLike$e;
  var getIterator$1 = getIterator$3;
  var getIteratorMethod$1 = getIteratorMethod$4;
  var isArrayIteratorMethod$1 = isArrayIteratorMethod$3;
  var aTypedArrayConstructor$2 = arrayBufferViewCore.aTypedArrayConstructor;

  var typedArrayFrom$1 = function from(source /* , mapfn, thisArg */) {
    var C = aConstructor(this);
    var O = toObject$a(source);
    var argumentsLength = arguments.length;
    var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var iteratorMethod = getIteratorMethod$1(O);
    var i, length, result, step, iterator, next;
    if (iteratorMethod && !isArrayIteratorMethod$1(iteratorMethod)) {
      iterator = getIterator$1(O, iteratorMethod);
      next = iterator.next;
      O = [];
      while (!(step = call$c(next, iterator)).done) {
        O.push(step.value);
      }
    }
    if (mapping && argumentsLength > 2) {
      mapfn = bind$1(mapfn, arguments[2]);
    }
    length = lengthOfArrayLike$7(O);
    result = new (aTypedArrayConstructor$2(C))(length);
    for (i = 0; length > i; i++) {
      result[i] = mapping ? mapfn(O[i], i) : O[i];
    }
    return result;
  };

  var $$n = _export;
  var global$l = global$17;
  var call$b = functionCall;
  var DESCRIPTORS$5 = descriptors;
  var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = typedArrayConstructorsRequireWrappers;
  var ArrayBufferViewCore$n = arrayBufferViewCore;
  var ArrayBufferModule = arrayBuffer;
  var anInstance = anInstance$5;
  var createPropertyDescriptor$1 = createPropertyDescriptor$6;
  var createNonEnumerableProperty$2 = createNonEnumerableProperty$b;
  var isIntegralNumber = isIntegralNumber$1;
  var toLength$5 = toLength$9;
  var toIndex = toIndex$2;
  var toOffset$1 = toOffset$2;
  var toPropertyKey$1 = toPropertyKey$5;
  var hasOwn$4 = hasOwnProperty_1;
  var classof$2 = classof$b;
  var isObject$2 = isObject$l;
  var isSymbol$1 = isSymbol$4;
  var create$1 = objectCreate;
  var isPrototypeOf$4 = objectIsPrototypeOf;
  var setPrototypeOf = objectSetPrototypeOf;
  var getOwnPropertyNames$1 = objectGetOwnPropertyNames.f;
  var typedArrayFrom = typedArrayFrom$1;
  var forEach = arrayIteration.forEach;
  var setSpecies$1 = setSpecies$4;
  var definePropertyModule$1 = objectDefineProperty;
  var getOwnPropertyDescriptorModule$2 = objectGetOwnPropertyDescriptor;
  var InternalStateModule$1 = internalState;
  var inheritIfRequired$1 = inheritIfRequired$3;

  var getInternalState$2 = InternalStateModule$1.get;
  var setInternalState$1 = InternalStateModule$1.set;
  var nativeDefineProperty$1 = definePropertyModule$1.f;
  var nativeGetOwnPropertyDescriptor$1 = getOwnPropertyDescriptorModule$2.f;
  var round = Math.round;
  var RangeError$1 = global$l.RangeError;
  var ArrayBuffer$1 = ArrayBufferModule.ArrayBuffer;
  var ArrayBufferPrototype = ArrayBuffer$1.prototype;
  var DataView$1 = ArrayBufferModule.DataView;
  var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore$n.NATIVE_ARRAY_BUFFER_VIEWS;
  var TYPED_ARRAY_CONSTRUCTOR$1 = ArrayBufferViewCore$n.TYPED_ARRAY_CONSTRUCTOR;
  var TYPED_ARRAY_TAG = ArrayBufferViewCore$n.TYPED_ARRAY_TAG;
  var TypedArray = ArrayBufferViewCore$n.TypedArray;
  var TypedArrayPrototype = ArrayBufferViewCore$n.TypedArrayPrototype;
  var aTypedArrayConstructor$1 = ArrayBufferViewCore$n.aTypedArrayConstructor;
  var isTypedArray = ArrayBufferViewCore$n.isTypedArray;
  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
  var WRONG_LENGTH = 'Wrong length';

  var fromList = function (C, list) {
    aTypedArrayConstructor$1(C);
    var index = 0;
    var length = list.length;
    var result = new C(length);
    while (length > index) result[index] = list[index++];
    return result;
  };

  var addGetter = function (it, key) {
    nativeDefineProperty$1(it, key, { get: function () {
      return getInternalState$2(this)[key];
    } });
  };

  var isArrayBuffer = function (it) {
    var klass;
    return isPrototypeOf$4(ArrayBufferPrototype, it) || (klass = classof$2(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';
  };

  var isTypedArrayIndex = function (target, key) {
    return isTypedArray(target)
      && !isSymbol$1(key)
      && key in target
      && isIntegralNumber(+key)
      && key >= 0;
  };

  var wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {
    key = toPropertyKey$1(key);
    return isTypedArrayIndex(target, key)
      ? createPropertyDescriptor$1(2, target[key])
      : nativeGetOwnPropertyDescriptor$1(target, key);
  };

  var wrappedDefineProperty = function defineProperty(target, key, descriptor) {
    key = toPropertyKey$1(key);
    if (isTypedArrayIndex(target, key)
      && isObject$2(descriptor)
      && hasOwn$4(descriptor, 'value')
      && !hasOwn$4(descriptor, 'get')
      && !hasOwn$4(descriptor, 'set')
      // TODO: add validation descriptor w/o calling accessors
      && !descriptor.configurable
      && (!hasOwn$4(descriptor, 'writable') || descriptor.writable)
      && (!hasOwn$4(descriptor, 'enumerable') || descriptor.enumerable)
    ) {
      target[key] = descriptor.value;
      return target;
    } return nativeDefineProperty$1(target, key, descriptor);
  };

  if (DESCRIPTORS$5) {
    if (!NATIVE_ARRAY_BUFFER_VIEWS) {
      getOwnPropertyDescriptorModule$2.f = wrappedGetOwnPropertyDescriptor;
      definePropertyModule$1.f = wrappedDefineProperty;
      addGetter(TypedArrayPrototype, 'buffer');
      addGetter(TypedArrayPrototype, 'byteOffset');
      addGetter(TypedArrayPrototype, 'byteLength');
      addGetter(TypedArrayPrototype, 'length');
    }

    $$n({ target: 'Object', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {
      getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,
      defineProperty: wrappedDefineProperty
    });

    typedArrayConstructor.exports = function (TYPE, wrapper, CLAMPED) {
      var BYTES = TYPE.match(/\d+$/)[0] / 8;
      var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';
      var GETTER = 'get' + TYPE;
      var SETTER = 'set' + TYPE;
      var NativeTypedArrayConstructor = global$l[CONSTRUCTOR_NAME];
      var TypedArrayConstructor = NativeTypedArrayConstructor;
      var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;
      var exported = {};

      var getter = function (that, index) {
        var data = getInternalState$2(that);
        return data.view[GETTER](index * BYTES + data.byteOffset, true);
      };

      var setter = function (that, index, value) {
        var data = getInternalState$2(that);
        if (CLAMPED) value = (value = round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;
        data.view[SETTER](index * BYTES + data.byteOffset, value, true);
      };

      var addElement = function (that, index) {
        nativeDefineProperty$1(that, index, {
          get: function () {
            return getter(this, index);
          },
          set: function (value) {
            return setter(this, index, value);
          },
          enumerable: true
        });
      };

      if (!NATIVE_ARRAY_BUFFER_VIEWS) {
        TypedArrayConstructor = wrapper(function (that, data, offset, $length) {
          anInstance(that, TypedArrayConstructorPrototype);
          var index = 0;
          var byteOffset = 0;
          var buffer, byteLength, length;
          if (!isObject$2(data)) {
            length = toIndex(data);
            byteLength = length * BYTES;
            buffer = new ArrayBuffer$1(byteLength);
          } else if (isArrayBuffer(data)) {
            buffer = data;
            byteOffset = toOffset$1(offset, BYTES);
            var $len = data.byteLength;
            if ($length === undefined) {
              if ($len % BYTES) throw RangeError$1(WRONG_LENGTH);
              byteLength = $len - byteOffset;
              if (byteLength < 0) throw RangeError$1(WRONG_LENGTH);
            } else {
              byteLength = toLength$5($length) * BYTES;
              if (byteLength + byteOffset > $len) throw RangeError$1(WRONG_LENGTH);
            }
            length = byteLength / BYTES;
          } else if (isTypedArray(data)) {
            return fromList(TypedArrayConstructor, data);
          } else {
            return call$b(typedArrayFrom, TypedArrayConstructor, data);
          }
          setInternalState$1(that, {
            buffer: buffer,
            byteOffset: byteOffset,
            byteLength: byteLength,
            length: length,
            view: new DataView$1(buffer)
          });
          while (index < length) addElement(that, index++);
        });

        if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
        TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create$1(TypedArrayPrototype);
      } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {
        TypedArrayConstructor = wrapper(function (dummy, data, typedArrayOffset, $length) {
          anInstance(dummy, TypedArrayConstructorPrototype);
          return inheritIfRequired$1(function () {
            if (!isObject$2(data)) return new NativeTypedArrayConstructor(toIndex(data));
            if (isArrayBuffer(data)) return $length !== undefined
              ? new NativeTypedArrayConstructor(data, toOffset$1(typedArrayOffset, BYTES), $length)
              : typedArrayOffset !== undefined
                ? new NativeTypedArrayConstructor(data, toOffset$1(typedArrayOffset, BYTES))
                : new NativeTypedArrayConstructor(data);
            if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);
            return call$b(typedArrayFrom, TypedArrayConstructor, data);
          }(), dummy, TypedArrayConstructor);
        });

        if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
        forEach(getOwnPropertyNames$1(NativeTypedArrayConstructor), function (key) {
          if (!(key in TypedArrayConstructor)) {
            createNonEnumerableProperty$2(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);
          }
        });
        TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;
      }

      if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {
        createNonEnumerableProperty$2(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);
      }

      createNonEnumerableProperty$2(TypedArrayConstructorPrototype, TYPED_ARRAY_CONSTRUCTOR$1, TypedArrayConstructor);

      if (TYPED_ARRAY_TAG) {
        createNonEnumerableProperty$2(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);
      }

      exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;

      $$n({
        global: true, forced: TypedArrayConstructor != NativeTypedArrayConstructor, sham: !NATIVE_ARRAY_BUFFER_VIEWS
      }, exported);

      if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {
        createNonEnumerableProperty$2(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);
      }

      if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {
        createNonEnumerableProperty$2(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);
      }

      setSpecies$1(CONSTRUCTOR_NAME);
    };
  } else typedArrayConstructor.exports = function () { /* empty */ };

  var createTypedArrayConstructor = typedArrayConstructor.exports;

  // `Int32Array` constructor
  // https://tc39.es/ecma262/#sec-typedarray-objects
  createTypedArrayConstructor('Int32', function (init) {
    return function Int32Array(data, byteOffset, length) {
      return init(this, data, byteOffset, length);
    };
  });

  var toObject$9 = toObject$h;
  var toAbsoluteIndex$2 = toAbsoluteIndex$6;
  var lengthOfArrayLike$6 = lengthOfArrayLike$e;

  var min$5 = Math.min;

  // `Array.prototype.copyWithin` method implementation
  // https://tc39.es/ecma262/#sec-array.prototype.copywithin
  // eslint-disable-next-line es/no-array-prototype-copywithin -- safe
  var arrayCopyWithin = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
    var O = toObject$9(this);
    var len = lengthOfArrayLike$6(O);
    var to = toAbsoluteIndex$2(target, len);
    var from = toAbsoluteIndex$2(start, len);
    var end = arguments.length > 2 ? arguments[2] : undefined;
    var count = min$5((end === undefined ? len : toAbsoluteIndex$2(end, len)) - from, len - to);
    var inc = 1;
    if (from < to && to < from + count) {
      inc = -1;
      from += count - 1;
      to += count - 1;
    }
    while (count-- > 0) {
      if (from in O) O[to] = O[from];
      else delete O[to];
      to += inc;
      from += inc;
    } return O;
  };

  var uncurryThis$l = functionUncurryThis;
  var ArrayBufferViewCore$m = arrayBufferViewCore;
  var $ArrayCopyWithin = arrayCopyWithin;

  var u$ArrayCopyWithin = uncurryThis$l($ArrayCopyWithin);
  var aTypedArray$l = ArrayBufferViewCore$m.aTypedArray;
  var exportTypedArrayMethod$m = ArrayBufferViewCore$m.exportTypedArrayMethod;

  // `%TypedArray%.prototype.copyWithin` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.copywithin
  exportTypedArrayMethod$m('copyWithin', function copyWithin(target, start /* , end */) {
    return u$ArrayCopyWithin(aTypedArray$l(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
  });

  var ArrayBufferViewCore$l = arrayBufferViewCore;
  var $every = arrayIteration.every;

  var aTypedArray$k = ArrayBufferViewCore$l.aTypedArray;
  var exportTypedArrayMethod$l = ArrayBufferViewCore$l.exportTypedArrayMethod;

  // `%TypedArray%.prototype.every` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.every
  exportTypedArrayMethod$l('every', function every(callbackfn /* , thisArg */) {
    return $every(aTypedArray$k(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  });

  var ArrayBufferViewCore$k = arrayBufferViewCore;
  var call$a = functionCall;
  var $fill = arrayFill$1;

  var aTypedArray$j = ArrayBufferViewCore$k.aTypedArray;
  var exportTypedArrayMethod$k = ArrayBufferViewCore$k.exportTypedArrayMethod;

  // `%TypedArray%.prototype.fill` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.fill
  exportTypedArrayMethod$k('fill', function fill(value /* , start, end */) {
    var length = arguments.length;
    return call$a(
      $fill,
      aTypedArray$j(this),
      value,
      length > 1 ? arguments[1] : undefined,
      length > 2 ? arguments[2] : undefined
    );
  });

  var arrayFromConstructorAndList$1 = function (Constructor, list) {
    var index = 0;
    var length = list.length;
    var result = new Constructor(length);
    while (length > index) result[index] = list[index++];
    return result;
  };

  var ArrayBufferViewCore$j = arrayBufferViewCore;
  var speciesConstructor$1 = speciesConstructor$3;

  var TYPED_ARRAY_CONSTRUCTOR = ArrayBufferViewCore$j.TYPED_ARRAY_CONSTRUCTOR;
  var aTypedArrayConstructor = ArrayBufferViewCore$j.aTypedArrayConstructor;

  // a part of `TypedArraySpeciesCreate` abstract operation
  // https://tc39.es/ecma262/#typedarray-species-create
  var typedArraySpeciesConstructor$4 = function (originalArray) {
    return aTypedArrayConstructor(speciesConstructor$1(originalArray, originalArray[TYPED_ARRAY_CONSTRUCTOR]));
  };

  var arrayFromConstructorAndList = arrayFromConstructorAndList$1;
  var typedArraySpeciesConstructor$3 = typedArraySpeciesConstructor$4;

  var typedArrayFromSpeciesAndList = function (instance, list) {
    return arrayFromConstructorAndList(typedArraySpeciesConstructor$3(instance), list);
  };

  var ArrayBufferViewCore$i = arrayBufferViewCore;
  var $filter$1 = arrayIteration.filter;
  var fromSpeciesAndList = typedArrayFromSpeciesAndList;

  var aTypedArray$i = ArrayBufferViewCore$i.aTypedArray;
  var exportTypedArrayMethod$j = ArrayBufferViewCore$i.exportTypedArrayMethod;

  // `%TypedArray%.prototype.filter` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.filter
  exportTypedArrayMethod$j('filter', function filter(callbackfn /* , thisArg */) {
    var list = $filter$1(aTypedArray$i(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    return fromSpeciesAndList(this, list);
  });

  var ArrayBufferViewCore$h = arrayBufferViewCore;
  var $find = arrayIteration.find;

  var aTypedArray$h = ArrayBufferViewCore$h.aTypedArray;
  var exportTypedArrayMethod$i = ArrayBufferViewCore$h.exportTypedArrayMethod;

  // `%TypedArray%.prototype.find` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.find
  exportTypedArrayMethod$i('find', function find(predicate /* , thisArg */) {
    return $find(aTypedArray$h(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
  });

  var ArrayBufferViewCore$g = arrayBufferViewCore;
  var $findIndex = arrayIteration.findIndex;

  var aTypedArray$g = ArrayBufferViewCore$g.aTypedArray;
  var exportTypedArrayMethod$h = ArrayBufferViewCore$g.exportTypedArrayMethod;

  // `%TypedArray%.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.findindex
  exportTypedArrayMethod$h('findIndex', function findIndex(predicate /* , thisArg */) {
    return $findIndex(aTypedArray$g(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
  });

  var ArrayBufferViewCore$f = arrayBufferViewCore;
  var $forEach$1 = arrayIteration.forEach;

  var aTypedArray$f = ArrayBufferViewCore$f.aTypedArray;
  var exportTypedArrayMethod$g = ArrayBufferViewCore$f.exportTypedArrayMethod;

  // `%TypedArray%.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.foreach
  exportTypedArrayMethod$g('forEach', function forEach(callbackfn /* , thisArg */) {
    $forEach$1(aTypedArray$f(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  });

  var ArrayBufferViewCore$e = arrayBufferViewCore;
  var $includes$1 = arrayIncludes.includes;

  var aTypedArray$e = ArrayBufferViewCore$e.aTypedArray;
  var exportTypedArrayMethod$f = ArrayBufferViewCore$e.exportTypedArrayMethod;

  // `%TypedArray%.prototype.includes` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.includes
  exportTypedArrayMethod$f('includes', function includes(searchElement /* , fromIndex */) {
    return $includes$1(aTypedArray$e(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
  });

  var ArrayBufferViewCore$d = arrayBufferViewCore;
  var $indexOf = arrayIncludes.indexOf;

  var aTypedArray$d = ArrayBufferViewCore$d.aTypedArray;
  var exportTypedArrayMethod$e = ArrayBufferViewCore$d.exportTypedArrayMethod;

  // `%TypedArray%.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.indexof
  exportTypedArrayMethod$e('indexOf', function indexOf(searchElement /* , fromIndex */) {
    return $indexOf(aTypedArray$d(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
  });

  var global$k = global$17;
  var uncurryThis$k = functionUncurryThis;
  var PROPER_FUNCTION_NAME$2 = functionName.PROPER;
  var ArrayBufferViewCore$c = arrayBufferViewCore;
  var ArrayIterators = es_array_iterator;
  var wellKnownSymbol$8 = wellKnownSymbol$s;

  var ITERATOR = wellKnownSymbol$8('iterator');
  var Uint8Array$1 = global$k.Uint8Array;
  var arrayValues = uncurryThis$k(ArrayIterators.values);
  var arrayKeys = uncurryThis$k(ArrayIterators.keys);
  var arrayEntries = uncurryThis$k(ArrayIterators.entries);
  var aTypedArray$c = ArrayBufferViewCore$c.aTypedArray;
  var exportTypedArrayMethod$d = ArrayBufferViewCore$c.exportTypedArrayMethod;
  var nativeTypedArrayIterator = Uint8Array$1 && Uint8Array$1.prototype[ITERATOR];

  var PROPER_ARRAY_VALUES_NAME = !!nativeTypedArrayIterator && nativeTypedArrayIterator.name === 'values';

  var typedArrayValues = function values() {
    return arrayValues(aTypedArray$c(this));
  };

  // `%TypedArray%.prototype.entries` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.entries
  exportTypedArrayMethod$d('entries', function entries() {
    return arrayEntries(aTypedArray$c(this));
  });
  // `%TypedArray%.prototype.keys` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.keys
  exportTypedArrayMethod$d('keys', function keys() {
    return arrayKeys(aTypedArray$c(this));
  });
  // `%TypedArray%.prototype.values` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.values
  exportTypedArrayMethod$d('values', typedArrayValues, PROPER_FUNCTION_NAME$2 && !PROPER_ARRAY_VALUES_NAME);
  // `%TypedArray%.prototype[@@iterator]` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype-@@iterator
  exportTypedArrayMethod$d(ITERATOR, typedArrayValues, PROPER_FUNCTION_NAME$2 && !PROPER_ARRAY_VALUES_NAME);

  var ArrayBufferViewCore$b = arrayBufferViewCore;
  var uncurryThis$j = functionUncurryThis;

  var aTypedArray$b = ArrayBufferViewCore$b.aTypedArray;
  var exportTypedArrayMethod$c = ArrayBufferViewCore$b.exportTypedArrayMethod;
  var $join = uncurryThis$j([].join);

  // `%TypedArray%.prototype.join` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.join
  exportTypedArrayMethod$c('join', function join(separator) {
    return $join(aTypedArray$b(this), separator);
  });

  /* eslint-disable es/no-array-prototype-lastindexof -- safe */
  var apply$5 = functionApply;
  var toIndexedObject$3 = toIndexedObject$b;
  var toIntegerOrInfinity$2 = toIntegerOrInfinity$9;
  var lengthOfArrayLike$5 = lengthOfArrayLike$e;
  var arrayMethodIsStrict$2 = arrayMethodIsStrict$4;

  var min$4 = Math.min;
  var $lastIndexOf$1 = [].lastIndexOf;
  var NEGATIVE_ZERO = !!$lastIndexOf$1 && 1 / [1].lastIndexOf(1, -0) < 0;
  var STRICT_METHOD$2 = arrayMethodIsStrict$2('lastIndexOf');
  var FORCED$6 = NEGATIVE_ZERO || !STRICT_METHOD$2;

  // `Array.prototype.lastIndexOf` method implementation
  // https://tc39.es/ecma262/#sec-array.prototype.lastindexof
  var arrayLastIndexOf = FORCED$6 ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
    // convert -0 to +0
    if (NEGATIVE_ZERO) return apply$5($lastIndexOf$1, this, arguments) || 0;
    var O = toIndexedObject$3(this);
    var length = lengthOfArrayLike$5(O);
    var index = length - 1;
    if (arguments.length > 1) index = min$4(index, toIntegerOrInfinity$2(arguments[1]));
    if (index < 0) index = length + index;
    for (;index >= 0; index--) if (index in O && O[index] === searchElement) return index || 0;
    return -1;
  } : $lastIndexOf$1;

  var ArrayBufferViewCore$a = arrayBufferViewCore;
  var apply$4 = functionApply;
  var $lastIndexOf = arrayLastIndexOf;

  var aTypedArray$a = ArrayBufferViewCore$a.aTypedArray;
  var exportTypedArrayMethod$b = ArrayBufferViewCore$a.exportTypedArrayMethod;

  // `%TypedArray%.prototype.lastIndexOf` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.lastindexof
  exportTypedArrayMethod$b('lastIndexOf', function lastIndexOf(searchElement /* , fromIndex */) {
    var length = arguments.length;
    return apply$4($lastIndexOf, aTypedArray$a(this), length > 1 ? [searchElement, arguments[1]] : [searchElement]);
  });

  var ArrayBufferViewCore$9 = arrayBufferViewCore;
  var $map$1 = arrayIteration.map;
  var typedArraySpeciesConstructor$2 = typedArraySpeciesConstructor$4;

  var aTypedArray$9 = ArrayBufferViewCore$9.aTypedArray;
  var exportTypedArrayMethod$a = ArrayBufferViewCore$9.exportTypedArrayMethod;

  // `%TypedArray%.prototype.map` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.map
  exportTypedArrayMethod$a('map', function map(mapfn /* , thisArg */) {
    return $map$1(aTypedArray$9(this), mapfn, arguments.length > 1 ? arguments[1] : undefined, function (O, length) {
      return new (typedArraySpeciesConstructor$2(O))(length);
    });
  });

  var global$j = global$17;
  var aCallable$2 = aCallable$9;
  var toObject$8 = toObject$h;
  var IndexedObject$2 = indexedObject;
  var lengthOfArrayLike$4 = lengthOfArrayLike$e;

  var TypeError$6 = global$j.TypeError;

  // `Array.prototype.{ reduce, reduceRight }` methods implementation
  var createMethod$1 = function (IS_RIGHT) {
    return function (that, callbackfn, argumentsLength, memo) {
      aCallable$2(callbackfn);
      var O = toObject$8(that);
      var self = IndexedObject$2(O);
      var length = lengthOfArrayLike$4(O);
      var index = IS_RIGHT ? length - 1 : 0;
      var i = IS_RIGHT ? -1 : 1;
      if (argumentsLength < 2) while (true) {
        if (index in self) {
          memo = self[index];
          index += i;
          break;
        }
        index += i;
        if (IS_RIGHT ? index < 0 : length <= index) {
          throw TypeError$6('Reduce of empty array with no initial value');
        }
      }
      for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
        memo = callbackfn(memo, self[index], index, O);
      }
      return memo;
    };
  };

  var arrayReduce = {
    // `Array.prototype.reduce` method
    // https://tc39.es/ecma262/#sec-array.prototype.reduce
    left: createMethod$1(false),
    // `Array.prototype.reduceRight` method
    // https://tc39.es/ecma262/#sec-array.prototype.reduceright
    right: createMethod$1(true)
  };

  var ArrayBufferViewCore$8 = arrayBufferViewCore;
  var $reduce = arrayReduce.left;

  var aTypedArray$8 = ArrayBufferViewCore$8.aTypedArray;
  var exportTypedArrayMethod$9 = ArrayBufferViewCore$8.exportTypedArrayMethod;

  // `%TypedArray%.prototype.reduce` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduce
  exportTypedArrayMethod$9('reduce', function reduce(callbackfn /* , initialValue */) {
    var length = arguments.length;
    return $reduce(aTypedArray$8(this), callbackfn, length, length > 1 ? arguments[1] : undefined);
  });

  var ArrayBufferViewCore$7 = arrayBufferViewCore;
  var $reduceRight = arrayReduce.right;

  var aTypedArray$7 = ArrayBufferViewCore$7.aTypedArray;
  var exportTypedArrayMethod$8 = ArrayBufferViewCore$7.exportTypedArrayMethod;

  // `%TypedArray%.prototype.reduceRicht` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduceright
  exportTypedArrayMethod$8('reduceRight', function reduceRight(callbackfn /* , initialValue */) {
    var length = arguments.length;
    return $reduceRight(aTypedArray$7(this), callbackfn, length, length > 1 ? arguments[1] : undefined);
  });

  var ArrayBufferViewCore$6 = arrayBufferViewCore;

  var aTypedArray$6 = ArrayBufferViewCore$6.aTypedArray;
  var exportTypedArrayMethod$7 = ArrayBufferViewCore$6.exportTypedArrayMethod;
  var floor$2 = Math.floor;

  // `%TypedArray%.prototype.reverse` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.reverse
  exportTypedArrayMethod$7('reverse', function reverse() {
    var that = this;
    var length = aTypedArray$6(that).length;
    var middle = floor$2(length / 2);
    var index = 0;
    var value;
    while (index < middle) {
      value = that[index];
      that[index++] = that[--length];
      that[length] = value;
    } return that;
  });

  var global$i = global$17;
  var ArrayBufferViewCore$5 = arrayBufferViewCore;
  var lengthOfArrayLike$3 = lengthOfArrayLike$e;
  var toOffset = toOffset$2;
  var toObject$7 = toObject$h;
  var fails$i = fails$D;

  var RangeError = global$i.RangeError;
  var aTypedArray$5 = ArrayBufferViewCore$5.aTypedArray;
  var exportTypedArrayMethod$6 = ArrayBufferViewCore$5.exportTypedArrayMethod;

  var FORCED$5 = fails$i(function () {
    // eslint-disable-next-line es/no-typed-arrays -- required for testing
    new Int8Array(1).set({});
  });

  // `%TypedArray%.prototype.set` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.set
  exportTypedArrayMethod$6('set', function set(arrayLike /* , offset */) {
    aTypedArray$5(this);
    var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);
    var length = this.length;
    var src = toObject$7(arrayLike);
    var len = lengthOfArrayLike$3(src);
    var index = 0;
    if (len + offset > length) throw RangeError('Wrong length');
    while (index < len) this[offset + index] = src[index++];
  }, FORCED$5);

  var ArrayBufferViewCore$4 = arrayBufferViewCore;
  var typedArraySpeciesConstructor$1 = typedArraySpeciesConstructor$4;
  var fails$h = fails$D;
  var arraySlice$4 = arraySlice$9;

  var aTypedArray$4 = ArrayBufferViewCore$4.aTypedArray;
  var exportTypedArrayMethod$5 = ArrayBufferViewCore$4.exportTypedArrayMethod;

  var FORCED$4 = fails$h(function () {
    // eslint-disable-next-line es/no-typed-arrays -- required for testing
    new Int8Array(1).slice();
  });

  // `%TypedArray%.prototype.slice` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice
  exportTypedArrayMethod$5('slice', function slice(start, end) {
    var list = arraySlice$4(aTypedArray$4(this), start, end);
    var C = typedArraySpeciesConstructor$1(this);
    var index = 0;
    var length = list.length;
    var result = new C(length);
    while (length > index) result[index] = list[index++];
    return result;
  }, FORCED$4);

  var ArrayBufferViewCore$3 = arrayBufferViewCore;
  var $some = arrayIteration.some;

  var aTypedArray$3 = ArrayBufferViewCore$3.aTypedArray;
  var exportTypedArrayMethod$4 = ArrayBufferViewCore$3.exportTypedArrayMethod;

  // `%TypedArray%.prototype.some` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.some
  exportTypedArrayMethod$4('some', function some(callbackfn /* , thisArg */) {
    return $some(aTypedArray$3(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  });

  var arraySlice$3 = arraySlice$9;

  var floor$1 = Math.floor;

  var mergeSort = function (array, comparefn) {
    var length = array.length;
    var middle = floor$1(length / 2);
    return length < 8 ? insertionSort(array, comparefn) : merge$1(
      array,
      mergeSort(arraySlice$3(array, 0, middle), comparefn),
      mergeSort(arraySlice$3(array, middle), comparefn),
      comparefn
    );
  };

  var insertionSort = function (array, comparefn) {
    var length = array.length;
    var i = 1;
    var element, j;

    while (i < length) {
      j = i;
      element = array[i];
      while (j && comparefn(array[j - 1], element) > 0) {
        array[j] = array[--j];
      }
      if (j !== i++) array[j] = element;
    } return array;
  };

  var merge$1 = function (array, left, right, comparefn) {
    var llength = left.length;
    var rlength = right.length;
    var lindex = 0;
    var rindex = 0;

    while (lindex < llength || rindex < rlength) {
      array[lindex + rindex] = (lindex < llength && rindex < rlength)
        ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]
        : lindex < llength ? left[lindex++] : right[rindex++];
    } return array;
  };

  var arraySort = mergeSort;

  var userAgent$1 = engineUserAgent;

  var firefox = userAgent$1.match(/firefox\/(\d+)/i);

  var engineFfVersion = !!firefox && +firefox[1];

  var UA = engineUserAgent;

  var engineIsIeOrEdge = /MSIE|Trident/.test(UA);

  var userAgent = engineUserAgent;

  var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);

  var engineWebkitVersion = !!webkit && +webkit[1];

  var global$h = global$17;
  var uncurryThis$i = functionUncurryThis;
  var fails$g = fails$D;
  var aCallable$1 = aCallable$9;
  var internalSort$1 = arraySort;
  var ArrayBufferViewCore$2 = arrayBufferViewCore;
  var FF$1 = engineFfVersion;
  var IE_OR_EDGE$1 = engineIsIeOrEdge;
  var V8$1 = engineV8Version;
  var WEBKIT$1 = engineWebkitVersion;

  var Array$2 = global$h.Array;
  var aTypedArray$2 = ArrayBufferViewCore$2.aTypedArray;
  var exportTypedArrayMethod$3 = ArrayBufferViewCore$2.exportTypedArrayMethod;
  var Uint16Array = global$h.Uint16Array;
  var un$Sort$1 = Uint16Array && uncurryThis$i(Uint16Array.prototype.sort);

  // WebKit
  var ACCEPT_INCORRECT_ARGUMENTS = !!un$Sort$1 && !(fails$g(function () {
    un$Sort$1(new Uint16Array(2), null);
  }) && fails$g(function () {
    un$Sort$1(new Uint16Array(2), {});
  }));

  var STABLE_SORT$1 = !!un$Sort$1 && !fails$g(function () {
    // feature detection can be too slow, so check engines versions
    if (V8$1) return V8$1 < 74;
    if (FF$1) return FF$1 < 67;
    if (IE_OR_EDGE$1) return true;
    if (WEBKIT$1) return WEBKIT$1 < 602;

    var array = new Uint16Array(516);
    var expected = Array$2(516);
    var index, mod;

    for (index = 0; index < 516; index++) {
      mod = index % 4;
      array[index] = 515 - index;
      expected[index] = index - 2 * mod + 3;
    }

    un$Sort$1(array, function (a, b) {
      return (a / 4 | 0) - (b / 4 | 0);
    });

    for (index = 0; index < 516; index++) {
      if (array[index] !== expected[index]) return true;
    }
  });

  var getSortCompare$1 = function (comparefn) {
    return function (x, y) {
      if (comparefn !== undefined) return +comparefn(x, y) || 0;
      // eslint-disable-next-line no-self-compare -- NaN check
      if (y !== y) return -1;
      // eslint-disable-next-line no-self-compare -- NaN check
      if (x !== x) return 1;
      if (x === 0 && y === 0) return 1 / x > 0 && 1 / y < 0 ? 1 : -1;
      return x > y;
    };
  };

  // `%TypedArray%.prototype.sort` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort
  exportTypedArrayMethod$3('sort', function sort(comparefn) {
    if (comparefn !== undefined) aCallable$1(comparefn);
    if (STABLE_SORT$1) return un$Sort$1(this, comparefn);

    return internalSort$1(aTypedArray$2(this), getSortCompare$1(comparefn));
  }, !STABLE_SORT$1 || ACCEPT_INCORRECT_ARGUMENTS);

  var ArrayBufferViewCore$1 = arrayBufferViewCore;
  var toLength$4 = toLength$9;
  var toAbsoluteIndex$1 = toAbsoluteIndex$6;
  var typedArraySpeciesConstructor = typedArraySpeciesConstructor$4;

  var aTypedArray$1 = ArrayBufferViewCore$1.aTypedArray;
  var exportTypedArrayMethod$2 = ArrayBufferViewCore$1.exportTypedArrayMethod;

  // `%TypedArray%.prototype.subarray` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.subarray
  exportTypedArrayMethod$2('subarray', function subarray(begin, end) {
    var O = aTypedArray$1(this);
    var length = O.length;
    var beginIndex = toAbsoluteIndex$1(begin, length);
    var C = typedArraySpeciesConstructor(O);
    return new C(
      O.buffer,
      O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT,
      toLength$4((end === undefined ? length : toAbsoluteIndex$1(end, length)) - beginIndex)
    );
  });

  var global$g = global$17;
  var apply$3 = functionApply;
  var ArrayBufferViewCore = arrayBufferViewCore;
  var fails$f = fails$D;
  var arraySlice$2 = arraySlice$9;

  var Int8Array$1 = global$g.Int8Array;
  var aTypedArray = ArrayBufferViewCore.aTypedArray;
  var exportTypedArrayMethod$1 = ArrayBufferViewCore.exportTypedArrayMethod;
  var $toLocaleString = [].toLocaleString;

  // iOS Safari 6.x fails here
  var TO_LOCALE_STRING_BUG = !!Int8Array$1 && fails$f(function () {
    $toLocaleString.call(new Int8Array$1(1));
  });

  var FORCED$3 = fails$f(function () {
    return [1, 2].toLocaleString() != new Int8Array$1([1, 2]).toLocaleString();
  }) || !fails$f(function () {
    Int8Array$1.prototype.toLocaleString.call([1, 2]);
  });

  // `%TypedArray%.prototype.toLocaleString` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.tolocalestring
  exportTypedArrayMethod$1('toLocaleString', function toLocaleString() {
    return apply$3(
      $toLocaleString,
      TO_LOCALE_STRING_BUG ? arraySlice$2(aTypedArray(this)) : aTypedArray(this),
      arraySlice$2(arguments)
    );
  }, FORCED$3);

  var exportTypedArrayMethod = arrayBufferViewCore.exportTypedArrayMethod;
  var fails$e = fails$D;
  var global$f = global$17;
  var uncurryThis$h = functionUncurryThis;

  var Uint8Array = global$f.Uint8Array;
  var Uint8ArrayPrototype = Uint8Array && Uint8Array.prototype || {};
  var arrayToString = [].toString;
  var join = uncurryThis$h([].join);

  if (fails$e(function () { arrayToString.call({}); })) {
    arrayToString = function toString() {
      return join(this);
    };
  }

  var IS_NOT_ARRAY_METHOD = Uint8ArrayPrototype.toString != arrayToString;

  // `%TypedArray%.prototype.toString` method
  // https://tc39.es/ecma262/#sec-%typedarray%.prototype.tostring
  exportTypedArrayMethod('toString', arrayToString, IS_NOT_ARRAY_METHOD);

  var $$m = _export;
  var uncurryThis$g = functionUncurryThis;
  var aCallable = aCallable$9;
  var toObject$6 = toObject$h;
  var lengthOfArrayLike$2 = lengthOfArrayLike$e;
  var toString$c = toString$f;
  var fails$d = fails$D;
  var internalSort = arraySort;
  var arrayMethodIsStrict$1 = arrayMethodIsStrict$4;
  var FF = engineFfVersion;
  var IE_OR_EDGE = engineIsIeOrEdge;
  var V8 = engineV8Version;
  var WEBKIT = engineWebkitVersion;

  var test = [];
  var un$Sort = uncurryThis$g(test.sort);
  var push$3 = uncurryThis$g(test.push);

  // IE8-
  var FAILS_ON_UNDEFINED = fails$d(function () {
    test.sort(undefined);
  });
  // V8 bug
  var FAILS_ON_NULL = fails$d(function () {
    test.sort(null);
  });
  // Old WebKit
  var STRICT_METHOD$1 = arrayMethodIsStrict$1('sort');

  var STABLE_SORT = !fails$d(function () {
    // feature detection can be too slow, so check engines versions
    if (V8) return V8 < 70;
    if (FF && FF > 3) return;
    if (IE_OR_EDGE) return true;
    if (WEBKIT) return WEBKIT < 603;

    var result = '';
    var code, chr, value, index;

    // generate an array with more 512 elements (Chakra and old V8 fails only in this case)
    for (code = 65; code < 76; code++) {
      chr = String.fromCharCode(code);

      switch (code) {
        case 66: case 69: case 70: case 72: value = 3; break;
        case 68: case 71: value = 4; break;
        default: value = 2;
      }

      for (index = 0; index < 47; index++) {
        test.push({ k: chr + index, v: value });
      }
    }

    test.sort(function (a, b) { return b.v - a.v; });

    for (index = 0; index < test.length; index++) {
      chr = test[index].k.charAt(0);
      if (result.charAt(result.length - 1) !== chr) result += chr;
    }

    return result !== 'DGBEFHACIJK';
  });

  var FORCED$2 = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD$1 || !STABLE_SORT;

  var getSortCompare = function (comparefn) {
    return function (x, y) {
      if (y === undefined) return -1;
      if (x === undefined) return 1;
      if (comparefn !== undefined) return +comparefn(x, y) || 0;
      return toString$c(x) > toString$c(y) ? 1 : -1;
    };
  };

  // `Array.prototype.sort` method
  // https://tc39.es/ecma262/#sec-array.prototype.sort
  $$m({ target: 'Array', proto: true, forced: FORCED$2 }, {
    sort: function sort(comparefn) {
      if (comparefn !== undefined) aCallable(comparefn);

      var array = toObject$6(this);

      if (STABLE_SORT) return comparefn === undefined ? un$Sort(array) : un$Sort(array, comparefn);

      var items = [];
      var arrayLength = lengthOfArrayLike$2(array);
      var itemsLength, index;

      for (index = 0; index < arrayLength; index++) {
        if (index in array) push$3(items, array[index]);
      }

      internalSort(items, getSortCompare(comparefn));

      itemsLength = items.length;
      index = 0;

      while (index < itemsLength) array[index] = items[index++];
      while (index < arrayLength) delete array[index++];

      return array;
    }
  });

  var $$l = _export;
  var DESCRIPTORS$4 = descriptors;
  var ownKeys = ownKeys$2;
  var toIndexedObject$2 = toIndexedObject$b;
  var getOwnPropertyDescriptorModule$1 = objectGetOwnPropertyDescriptor;
  var createProperty$2 = createProperty$5;

  // `Object.getOwnPropertyDescriptors` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
  $$l({ target: 'Object', stat: true, sham: !DESCRIPTORS$4 }, {
    getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
      var O = toIndexedObject$2(object);
      var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule$1.f;
      var keys = ownKeys(O);
      var result = {};
      var index = 0;
      var key, descriptor;
      while (keys.length > index) {
        descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
        if (descriptor !== undefined) createProperty$2(result, key, descriptor);
      }
      return result;
    }
  });

  var anObject$8 = anObject$k;
  var iteratorClose = iteratorClose$2;

  // call something on iterator step with safe closing on error
  var callWithSafeIterationClosing$1 = function (iterator, fn, value, ENTRIES) {
    try {
      return ENTRIES ? fn(anObject$8(value)[0], value[1]) : fn(value);
    } catch (error) {
      iteratorClose(iterator, 'throw', error);
    }
  };

  var global$e = global$17;
  var bind = functionBindContext;
  var call$9 = functionCall;
  var toObject$5 = toObject$h;
  var callWithSafeIterationClosing = callWithSafeIterationClosing$1;
  var isArrayIteratorMethod = isArrayIteratorMethod$3;
  var isConstructor = isConstructor$4;
  var lengthOfArrayLike$1 = lengthOfArrayLike$e;
  var createProperty$1 = createProperty$5;
  var getIterator = getIterator$3;
  var getIteratorMethod = getIteratorMethod$4;

  var Array$1 = global$e.Array;

  // `Array.from` method implementation
  // https://tc39.es/ecma262/#sec-array.from
  var arrayFrom = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject$5(arrayLike);
    var IS_CONSTRUCTOR = isConstructor(this);
    var argumentsLength = arguments.length;
    var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined);
    var iteratorMethod = getIteratorMethod(O);
    var index = 0;
    var length, result, step, iterator, next, value;
    // if the target is not iterable or it's an array with the default iterator - use a simple case
    if (iteratorMethod && !(this == Array$1 && isArrayIteratorMethod(iteratorMethod))) {
      iterator = getIterator(O, iteratorMethod);
      next = iterator.next;
      result = IS_CONSTRUCTOR ? new this() : [];
      for (;!(step = call$9(next, iterator)).done; index++) {
        value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
        createProperty$1(result, index, value);
      }
    } else {
      length = lengthOfArrayLike$1(O);
      result = IS_CONSTRUCTOR ? new this(length) : Array$1(length);
      for (;length > index; index++) {
        value = mapping ? mapfn(O[index], index) : O[index];
        createProperty$1(result, index, value);
      }
    }
    result.length = index;
    return result;
  };

  var $$k = _export;
  var from = arrayFrom;
  var checkCorrectnessOfIteration = checkCorrectnessOfIteration$4;

  var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
    // eslint-disable-next-line es/no-array-from -- required for testing
    Array.from(iterable);
  });

  // `Array.from` method
  // https://tc39.es/ecma262/#sec-array.from
  $$k({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {
    from: from
  });

  var $$j = _export;
  var global$d = global$17;
  var toAbsoluteIndex = toAbsoluteIndex$6;
  var toIntegerOrInfinity$1 = toIntegerOrInfinity$9;
  var lengthOfArrayLike = lengthOfArrayLike$e;
  var toObject$4 = toObject$h;
  var arraySpeciesCreate = arraySpeciesCreate$3;
  var createProperty = createProperty$5;
  var arrayMethodHasSpeciesSupport$2 = arrayMethodHasSpeciesSupport$5;

  var HAS_SPECIES_SUPPORT$2 = arrayMethodHasSpeciesSupport$2('splice');

  var TypeError$5 = global$d.TypeError;
  var max$2 = Math.max;
  var min$3 = Math.min;
  var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
  var MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';

  // `Array.prototype.splice` method
  // https://tc39.es/ecma262/#sec-array.prototype.splice
  // with adding support of @@species
  $$j({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT$2 }, {
    splice: function splice(start, deleteCount /* , ...items */) {
      var O = toObject$4(this);
      var len = lengthOfArrayLike(O);
      var actualStart = toAbsoluteIndex(start, len);
      var argumentsLength = arguments.length;
      var insertCount, actualDeleteCount, A, k, from, to;
      if (argumentsLength === 0) {
        insertCount = actualDeleteCount = 0;
      } else if (argumentsLength === 1) {
        insertCount = 0;
        actualDeleteCount = len - actualStart;
      } else {
        insertCount = argumentsLength - 2;
        actualDeleteCount = min$3(max$2(toIntegerOrInfinity$1(deleteCount), 0), len - actualStart);
      }
      if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {
        throw TypeError$5(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);
      }
      A = arraySpeciesCreate(O, actualDeleteCount);
      for (k = 0; k < actualDeleteCount; k++) {
        from = actualStart + k;
        if (from in O) createProperty(A, k, O[from]);
      }
      A.length = actualDeleteCount;
      if (insertCount < actualDeleteCount) {
        for (k = actualStart; k < len - actualDeleteCount; k++) {
          from = k + actualDeleteCount;
          to = k + insertCount;
          if (from in O) O[to] = O[from];
          else delete O[to];
        }
        for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];
      } else if (insertCount > actualDeleteCount) {
        for (k = len - actualDeleteCount; k > actualStart; k--) {
          from = k + actualDeleteCount - 1;
          to = k + insertCount - 1;
          if (from in O) O[to] = O[from];
          else delete O[to];
        }
      }
      for (k = 0; k < insertCount; k++) {
        O[k + actualStart] = arguments[k + 2];
      }
      O.length = len - actualDeleteCount + insertCount;
      return A;
    }
  });

  var isObject$1 = isObject$l;
  var classof$1 = classofRaw$1;
  var wellKnownSymbol$7 = wellKnownSymbol$s;

  var MATCH$2 = wellKnownSymbol$7('match');

  // `IsRegExp` abstract operation
  // https://tc39.es/ecma262/#sec-isregexp
  var isRegexp = function (it) {
    var isRegExp;
    return isObject$1(it) && ((isRegExp = it[MATCH$2]) !== undefined ? !!isRegExp : classof$1(it) == 'RegExp');
  };

  var global$c = global$17;
  var isRegExp$3 = isRegexp;

  var TypeError$4 = global$c.TypeError;

  var notARegexp = function (it) {
    if (isRegExp$3(it)) {
      throw TypeError$4("The method doesn't accept regular expressions");
    } return it;
  };

  var wellKnownSymbol$6 = wellKnownSymbol$s;

  var MATCH$1 = wellKnownSymbol$6('match');

  var correctIsRegexpLogic = function (METHOD_NAME) {
    var regexp = /./;
    try {
      '/./'[METHOD_NAME](regexp);
    } catch (error1) {
      try {
        regexp[MATCH$1] = false;
        return '/./'[METHOD_NAME](regexp);
      } catch (error2) { /* empty */ }
    } return false;
  };

  var $$i = _export;
  var uncurryThis$f = functionUncurryThis;
  var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
  var toLength$3 = toLength$9;
  var toString$b = toString$f;
  var notARegExp$1 = notARegexp;
  var requireObjectCoercible$8 = requireObjectCoercible$c;
  var correctIsRegExpLogic$1 = correctIsRegexpLogic;

  // eslint-disable-next-line es/no-string-prototype-startswith -- safe
  var un$StartsWith = uncurryThis$f(''.startsWith);
  var stringSlice$7 = uncurryThis$f(''.slice);
  var min$2 = Math.min;

  var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic$1('startsWith');
  // https://github.com/zloirock/core-js/pull/702
  var MDN_POLYFILL_BUG = !CORRECT_IS_REGEXP_LOGIC && !!function () {
    var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');
    return descriptor && !descriptor.writable;
  }();

  // `String.prototype.startsWith` method
  // https://tc39.es/ecma262/#sec-string.prototype.startswith
  $$i({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
    startsWith: function startsWith(searchString /* , position = 0 */) {
      var that = toString$b(requireObjectCoercible$8(this));
      notARegExp$1(searchString);
      var index = toLength$3(min$2(arguments.length > 1 ? arguments[1] : undefined, that.length));
      var search = toString$b(searchString);
      return un$StartsWith
        ? un$StartsWith(that, search, index)
        : stringSlice$7(that, index, index + search.length) === search;
    }
  });

  // a string of all valid unicode whitespaces
  var whitespaces$2 = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002' +
    '\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

  var uncurryThis$e = functionUncurryThis;
  var requireObjectCoercible$7 = requireObjectCoercible$c;
  var toString$a = toString$f;
  var whitespaces$1 = whitespaces$2;

  var replace$5 = uncurryThis$e(''.replace);
  var whitespace = '[' + whitespaces$1 + ']';
  var ltrim = RegExp('^' + whitespace + whitespace + '*');
  var rtrim$1 = RegExp(whitespace + whitespace + '*$');

  // `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
  var createMethod = function (TYPE) {
    return function ($this) {
      var string = toString$a(requireObjectCoercible$7($this));
      if (TYPE & 1) string = replace$5(string, ltrim, '');
      if (TYPE & 2) string = replace$5(string, rtrim$1, '');
      return string;
    };
  };

  var stringTrim = {
    // `String.prototype.{ trimLeft, trimStart }` methods
    // https://tc39.es/ecma262/#sec-string.prototype.trimstart
    start: createMethod(1),
    // `String.prototype.{ trimRight, trimEnd }` methods
    // https://tc39.es/ecma262/#sec-string.prototype.trimend
    end: createMethod(2),
    // `String.prototype.trim` method
    // https://tc39.es/ecma262/#sec-string.prototype.trim
    trim: createMethod(3)
  };

  var PROPER_FUNCTION_NAME$1 = functionName.PROPER;
  var fails$c = fails$D;
  var whitespaces = whitespaces$2;

  var non = '\u200B\u0085\u180E';

  // check that a method works with the correct list
  // of whitespaces and has a correct name
  var stringTrimForced = function (METHOD_NAME) {
    return fails$c(function () {
      return !!whitespaces[METHOD_NAME]()
        || non[METHOD_NAME]() !== non
        || (PROPER_FUNCTION_NAME$1 && whitespaces[METHOD_NAME].name !== METHOD_NAME);
    });
  };

  var $$h = _export;
  var $trim = stringTrim.trim;
  var forcedStringTrimMethod$2 = stringTrimForced;

  // `String.prototype.trim` method
  // https://tc39.es/ecma262/#sec-string.prototype.trim
  $$h({ target: 'String', proto: true, forced: forcedStringTrimMethod$2('trim') }, {
    trim: function trim() {
      return $trim(this);
    }
  });

  var $$g = _export;
  var $map = arrayIteration.map;
  var arrayMethodHasSpeciesSupport$1 = arrayMethodHasSpeciesSupport$5;

  var HAS_SPECIES_SUPPORT$1 = arrayMethodHasSpeciesSupport$1('map');

  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  // with adding support of @@species
  $$g({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT$1 }, {
    map: function map(callbackfn /* , thisArg */) {
      return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  });

  var anObject$7 = anObject$k;

  // `RegExp.prototype.flags` getter implementation
  // https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
  var regexpFlags$1 = function () {
    var that = anObject$7(this);
    var result = '';
    if (that.global) result += 'g';
    if (that.ignoreCase) result += 'i';
    if (that.multiline) result += 'm';
    if (that.dotAll) result += 's';
    if (that.unicode) result += 'u';
    if (that.sticky) result += 'y';
    return result;
  };

  var regexpStickyHelpers = {};

  var fails$b = fails$D;
  var global$b = global$17;

  // babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
  var $RegExp$2 = global$b.RegExp;

  regexpStickyHelpers.UNSUPPORTED_Y = fails$b(function () {
    var re = $RegExp$2('a', 'y');
    re.lastIndex = 2;
    return re.exec('abcd') != null;
  });

  regexpStickyHelpers.BROKEN_CARET = fails$b(function () {
    // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
    var re = $RegExp$2('^r', 'gy');
    re.lastIndex = 2;
    return re.exec('str') != null;
  });

  var fails$a = fails$D;
  var global$a = global$17;

  // babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError
  var $RegExp$1 = global$a.RegExp;

  var regexpUnsupportedDotAll = fails$a(function () {
    var re = $RegExp$1('.', 's');
    return !(re.dotAll && re.exec('\n') && re.flags === 's');
  });

  var fails$9 = fails$D;
  var global$9 = global$17;

  // babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError
  var $RegExp = global$9.RegExp;

  var regexpUnsupportedNcg = fails$9(function () {
    var re = $RegExp('(?<a>b)', 'g');
    return re.exec('b').groups.a !== 'b' ||
      'b'.replace(re, '$<a>c') !== 'bc';
  });

  /* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */
  /* eslint-disable regexp/no-useless-quantifier -- testing */
  var call$8 = functionCall;
  var uncurryThis$d = functionUncurryThis;
  var toString$9 = toString$f;
  var regexpFlags = regexpFlags$1;
  var stickyHelpers$2 = regexpStickyHelpers;
  var shared$1 = shared$5.exports;
  var create = objectCreate;
  var getInternalState$1 = internalState.get;
  var UNSUPPORTED_DOT_ALL$1 = regexpUnsupportedDotAll;
  var UNSUPPORTED_NCG$1 = regexpUnsupportedNcg;

  var nativeReplace = shared$1('native-string-replace', String.prototype.replace);
  var nativeExec = RegExp.prototype.exec;
  var patchedExec = nativeExec;
  var charAt$3 = uncurryThis$d(''.charAt);
  var indexOf$1 = uncurryThis$d(''.indexOf);
  var replace$4 = uncurryThis$d(''.replace);
  var stringSlice$6 = uncurryThis$d(''.slice);

  var UPDATES_LAST_INDEX_WRONG = (function () {
    var re1 = /a/;
    var re2 = /b*/g;
    call$8(nativeExec, re1, 'a');
    call$8(nativeExec, re2, 'a');
    return re1.lastIndex !== 0 || re2.lastIndex !== 0;
  })();

  var UNSUPPORTED_Y$2 = stickyHelpers$2.UNSUPPORTED_Y || stickyHelpers$2.BROKEN_CARET;

  // nonparticipating capturing group, copied from es5-shim's String#split patch.
  var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

  var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y$2 || UNSUPPORTED_DOT_ALL$1 || UNSUPPORTED_NCG$1;

  if (PATCH) {
    // eslint-disable-next-line max-statements -- TODO
    patchedExec = function exec(string) {
      var re = this;
      var state = getInternalState$1(re);
      var str = toString$9(string);
      var raw = state.raw;
      var result, reCopy, lastIndex, match, i, object, group;

      if (raw) {
        raw.lastIndex = re.lastIndex;
        result = call$8(patchedExec, raw, str);
        re.lastIndex = raw.lastIndex;
        return result;
      }

      var groups = state.groups;
      var sticky = UNSUPPORTED_Y$2 && re.sticky;
      var flags = call$8(regexpFlags, re);
      var source = re.source;
      var charsAdded = 0;
      var strCopy = str;

      if (sticky) {
        flags = replace$4(flags, 'y', '');
        if (indexOf$1(flags, 'g') === -1) {
          flags += 'g';
        }

        strCopy = stringSlice$6(str, re.lastIndex);
        // Support anchored sticky behavior.
        if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt$3(str, re.lastIndex - 1) !== '\n')) {
          source = '(?: ' + source + ')';
          strCopy = ' ' + strCopy;
          charsAdded++;
        }
        // ^(? + rx + ) is needed, in combination with some str slicing, to
        // simulate the 'y' flag.
        reCopy = new RegExp('^(?:' + source + ')', flags);
      }

      if (NPCG_INCLUDED) {
        reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
      }
      if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

      match = call$8(nativeExec, sticky ? reCopy : re, strCopy);

      if (sticky) {
        if (match) {
          match.input = stringSlice$6(match.input, charsAdded);
          match[0] = stringSlice$6(match[0], charsAdded);
          match.index = re.lastIndex;
          re.lastIndex += match[0].length;
        } else re.lastIndex = 0;
      } else if (UPDATES_LAST_INDEX_WRONG && match) {
        re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
      }
      if (NPCG_INCLUDED && match && match.length > 1) {
        // Fix browsers whose `exec` methods don't consistently return `undefined`
        // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
        call$8(nativeReplace, match[0], reCopy, function () {
          for (i = 1; i < arguments.length - 2; i++) {
            if (arguments[i] === undefined) match[i] = undefined;
          }
        });
      }

      if (match && groups) {
        match.groups = object = create(null);
        for (i = 0; i < groups.length; i++) {
          group = groups[i];
          object[group[0]] = match[group[1]];
        }
      }

      return match;
    };
  }

  var regexpExec$3 = patchedExec;

  var $$f = _export;
  var exec$2 = regexpExec$3;

  // `RegExp.prototype.exec` method
  // https://tc39.es/ecma262/#sec-regexp.prototype.exec
  $$f({ target: 'RegExp', proto: true, forced: /./.exec !== exec$2 }, {
    exec: exec$2
  });

  // TODO: Remove from `core-js@4` since it's moved to entry points

  var uncurryThis$c = functionUncurryThis;
  var redefine$3 = redefine$c.exports;
  var regexpExec$2 = regexpExec$3;
  var fails$8 = fails$D;
  var wellKnownSymbol$5 = wellKnownSymbol$s;
  var createNonEnumerableProperty$1 = createNonEnumerableProperty$b;

  var SPECIES = wellKnownSymbol$5('species');
  var RegExpPrototype$3 = RegExp.prototype;

  var fixRegexpWellKnownSymbolLogic = function (KEY, exec, FORCED, SHAM) {
    var SYMBOL = wellKnownSymbol$5(KEY);

    var DELEGATES_TO_SYMBOL = !fails$8(function () {
      // String methods call symbol-named RegEp methods
      var O = {};
      O[SYMBOL] = function () { return 7; };
      return ''[KEY](O) != 7;
    });

    var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails$8(function () {
      // Symbol-named RegExp methods call .exec
      var execCalled = false;
      var re = /a/;

      if (KEY === 'split') {
        // We can't use real regex here since it causes deoptimization
        // and serious performance degradation in V8
        // https://github.com/zloirock/core-js/issues/306
        re = {};
        // RegExp[@@split] doesn't call the regex's exec method, but first creates
        // a new one. We need to return the patched regex when creating the new one.
        re.constructor = {};
        re.constructor[SPECIES] = function () { return re; };
        re.flags = '';
        re[SYMBOL] = /./[SYMBOL];
      }

      re.exec = function () { execCalled = true; return null; };

      re[SYMBOL]('');
      return !execCalled;
    });

    if (
      !DELEGATES_TO_SYMBOL ||
      !DELEGATES_TO_EXEC ||
      FORCED
    ) {
      var uncurriedNativeRegExpMethod = uncurryThis$c(/./[SYMBOL]);
      var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
        var uncurriedNativeMethod = uncurryThis$c(nativeMethod);
        var $exec = regexp.exec;
        if ($exec === regexpExec$2 || $exec === RegExpPrototype$3.exec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            // The native String method already delegates to @@method (this
            // polyfilled function), leasing to infinite recursion.
            // We avoid it by directly calling the native @@method method.
            return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };
          }
          return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };
        }
        return { done: false };
      });

      redefine$3(String.prototype, KEY, methods[0]);
      redefine$3(RegExpPrototype$3, SYMBOL, methods[1]);
    }

    if (SHAM) createNonEnumerableProperty$1(RegExpPrototype$3[SYMBOL], 'sham', true);
  };

  var charAt$2 = stringMultibyte.charAt;

  // `AdvanceStringIndex` abstract operation
  // https://tc39.es/ecma262/#sec-advancestringindex
  var advanceStringIndex$3 = function (S, index, unicode) {
    return index + (unicode ? charAt$2(S, index).length : 1);
  };

  var global$8 = global$17;
  var call$7 = functionCall;
  var anObject$6 = anObject$k;
  var isCallable$4 = isCallable$p;
  var classof = classofRaw$1;
  var regexpExec$1 = regexpExec$3;

  var TypeError$3 = global$8.TypeError;

  // `RegExpExec` abstract operation
  // https://tc39.es/ecma262/#sec-regexpexec
  var regexpExecAbstract = function (R, S) {
    var exec = R.exec;
    if (isCallable$4(exec)) {
      var result = call$7(exec, R, S);
      if (result !== null) anObject$6(result);
      return result;
    }
    if (classof(R) === 'RegExp') return call$7(regexpExec$1, R, S);
    throw TypeError$3('RegExp#exec called on incompatible receiver');
  };

  var apply$2 = functionApply;
  var call$6 = functionCall;
  var uncurryThis$b = functionUncurryThis;
  var fixRegExpWellKnownSymbolLogic$3 = fixRegexpWellKnownSymbolLogic;
  var isRegExp$2 = isRegexp;
  var anObject$5 = anObject$k;
  var requireObjectCoercible$6 = requireObjectCoercible$c;
  var speciesConstructor = speciesConstructor$3;
  var advanceStringIndex$2 = advanceStringIndex$3;
  var toLength$2 = toLength$9;
  var toString$8 = toString$f;
  var getMethod$4 = getMethod$8;
  var arraySlice$1 = arraySlice$9;
  var callRegExpExec = regexpExecAbstract;
  var regexpExec = regexpExec$3;
  var stickyHelpers$1 = regexpStickyHelpers;
  var fails$7 = fails$D;

  var UNSUPPORTED_Y$1 = stickyHelpers$1.UNSUPPORTED_Y;
  var MAX_UINT32 = 0xFFFFFFFF;
  var min$1 = Math.min;
  var $push = [].push;
  var exec$1 = uncurryThis$b(/./.exec);
  var push$2 = uncurryThis$b($push);
  var stringSlice$5 = uncurryThis$b(''.slice);

  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  // Weex JS has frozen built-in prototypes, so use try / catch wrapper
  var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails$7(function () {
    // eslint-disable-next-line regexp/no-empty-group -- required for testing
    var re = /(?:)/;
    var originalExec = re.exec;
    re.exec = function () { return originalExec.apply(this, arguments); };
    var result = 'ab'.split(re);
    return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
  });

  // @@split logic
  fixRegExpWellKnownSymbolLogic$3('split', function (SPLIT, nativeSplit, maybeCallNative) {
    var internalSplit;
    if (
      'abbc'.split(/(b)*/)[1] == 'c' ||
      // eslint-disable-next-line regexp/no-empty-group -- required for testing
      'test'.split(/(?:)/, -1).length != 4 ||
      'ab'.split(/(?:ab)*/).length != 2 ||
      '.'.split(/(.?)(.?)/).length != 4 ||
      // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing
      '.'.split(/()()/).length > 1 ||
      ''.split(/.?/).length
    ) {
      // based on es5-shim implementation, need to rework it
      internalSplit = function (separator, limit) {
        var string = toString$8(requireObjectCoercible$6(this));
        var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
        if (lim === 0) return [];
        if (separator === undefined) return [string];
        // If `separator` is not a regex, use native split
        if (!isRegExp$2(separator)) {
          return call$6(nativeSplit, string, separator, lim);
        }
        var output = [];
        var flags = (separator.ignoreCase ? 'i' : '') +
                    (separator.multiline ? 'm' : '') +
                    (separator.unicode ? 'u' : '') +
                    (separator.sticky ? 'y' : '');
        var lastLastIndex = 0;
        // Make `global` and avoid `lastIndex` issues by working with a copy
        var separatorCopy = new RegExp(separator.source, flags + 'g');
        var match, lastIndex, lastLength;
        while (match = call$6(regexpExec, separatorCopy, string)) {
          lastIndex = separatorCopy.lastIndex;
          if (lastIndex > lastLastIndex) {
            push$2(output, stringSlice$5(string, lastLastIndex, match.index));
            if (match.length > 1 && match.index < string.length) apply$2($push, output, arraySlice$1(match, 1));
            lastLength = match[0].length;
            lastLastIndex = lastIndex;
            if (output.length >= lim) break;
          }
          if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop
        }
        if (lastLastIndex === string.length) {
          if (lastLength || !exec$1(separatorCopy, '')) push$2(output, '');
        } else push$2(output, stringSlice$5(string, lastLastIndex));
        return output.length > lim ? arraySlice$1(output, 0, lim) : output;
      };
    // Chakra, V8
    } else if ('0'.split(undefined, 0).length) {
      internalSplit = function (separator, limit) {
        return separator === undefined && limit === 0 ? [] : call$6(nativeSplit, this, separator, limit);
      };
    } else internalSplit = nativeSplit;

    return [
      // `String.prototype.split` method
      // https://tc39.es/ecma262/#sec-string.prototype.split
      function split(separator, limit) {
        var O = requireObjectCoercible$6(this);
        var splitter = separator == undefined ? undefined : getMethod$4(separator, SPLIT);
        return splitter
          ? call$6(splitter, separator, O, limit)
          : call$6(internalSplit, toString$8(O), separator, limit);
      },
      // `RegExp.prototype[@@split]` method
      // https://tc39.es/ecma262/#sec-regexp.prototype-@@split
      //
      // NOTE: This cannot be properly polyfilled in engines that don't support
      // the 'y' flag.
      function (string, limit) {
        var rx = anObject$5(this);
        var S = toString$8(string);
        var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);

        if (res.done) return res.value;

        var C = speciesConstructor(rx, RegExp);

        var unicodeMatching = rx.unicode;
        var flags = (rx.ignoreCase ? 'i' : '') +
                    (rx.multiline ? 'm' : '') +
                    (rx.unicode ? 'u' : '') +
                    (UNSUPPORTED_Y$1 ? 'g' : 'y');

        // ^(? + rx + ) is needed, in combination with some S slicing, to
        // simulate the 'y' flag.
        var splitter = new C(UNSUPPORTED_Y$1 ? '^(?:' + rx.source + ')' : rx, flags);
        var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
        if (lim === 0) return [];
        if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
        var p = 0;
        var q = 0;
        var A = [];
        while (q < S.length) {
          splitter.lastIndex = UNSUPPORTED_Y$1 ? 0 : q;
          var z = callRegExpExec(splitter, UNSUPPORTED_Y$1 ? stringSlice$5(S, q) : S);
          var e;
          if (
            z === null ||
            (e = min$1(toLength$2(splitter.lastIndex + (UNSUPPORTED_Y$1 ? q : 0)), S.length)) === p
          ) {
            q = advanceStringIndex$2(S, q, unicodeMatching);
          } else {
            push$2(A, stringSlice$5(S, p, q));
            if (A.length === lim) return A;
            for (var i = 1; i <= z.length - 1; i++) {
              push$2(A, z[i]);
              if (A.length === lim) return A;
            }
            q = p = e;
          }
        }
        push$2(A, stringSlice$5(S, p));
        return A;
      }
    ];
  }, !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y$1);

  var $$e = _export;
  var $filter = arrayIteration.filter;
  var arrayMethodHasSpeciesSupport = arrayMethodHasSpeciesSupport$5;

  var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');

  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  // with adding support of @@species
  $$e({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
    filter: function filter(callbackfn /* , thisArg */) {
      return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  });

  var $$d = _export;
  var uncurryThis$a = functionUncurryThis;
  var IndexedObject$1 = indexedObject;
  var toIndexedObject$1 = toIndexedObject$b;
  var arrayMethodIsStrict = arrayMethodIsStrict$4;

  var un$Join = uncurryThis$a([].join);

  var ES3_STRINGS = IndexedObject$1 != Object;
  var STRICT_METHOD = arrayMethodIsStrict('join', ',');

  // `Array.prototype.join` method
  // https://tc39.es/ecma262/#sec-array.prototype.join
  $$d({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {
    join: function join(separator) {
      return un$Join(toIndexedObject$1(this), separator === undefined ? ',' : separator);
    }
  });

  var uncurryThis$9 = functionUncurryThis;
  var requireObjectCoercible$5 = requireObjectCoercible$c;
  var toString$7 = toString$f;

  var quot = /"/g;
  var replace$3 = uncurryThis$9(''.replace);

  // `CreateHTML` abstract operation
  // https://tc39.es/ecma262/#sec-createhtml
  var createHtml = function (string, tag, attribute, value) {
    var S = toString$7(requireObjectCoercible$5(string));
    var p1 = '<' + tag;
    if (attribute !== '') p1 += ' ' + attribute + '="' + replace$3(toString$7(value), quot, '&quot;') + '"';
    return p1 + '>' + S + '</' + tag + '>';
  };

  var fails$6 = fails$D;

  // check the existence of a method, lowercase
  // of a tag and escaping quotes in arguments
  var stringHtmlForced = function (METHOD_NAME) {
    return fails$6(function () {
      var test = ''[METHOD_NAME]('"');
      return test !== test.toLowerCase() || test.split('"').length > 3;
    });
  };

  var $$c = _export;
  var createHTML$1 = createHtml;
  var forcedStringHTMLMethod$1 = stringHtmlForced;

  // `String.prototype.anchor` method
  // https://tc39.es/ecma262/#sec-string.prototype.anchor
  $$c({ target: 'String', proto: true, forced: forcedStringHTMLMethod$1('anchor') }, {
    anchor: function anchor(name) {
      return createHTML$1(this, 'a', 'name', name);
    }
  });

  var $$b = _export;
  var global$7 = global$17;

  // `globalThis` object
  // https://tc39.es/ecma262/#sec-globalthis
  $$b({ global: true }, {
    globalThis: global$7
  });

  var collection = collection$2;
  var collectionStrong = collectionStrong$2;

  // `Map` constructor
  // https://tc39.es/ecma262/#sec-map-objects
  collection('Map', function (init) {
    return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };
  }, collectionStrong);

  var DESCRIPTORS$3 = descriptors;
  var uncurryThis$8 = functionUncurryThis;
  var call$5 = functionCall;
  var fails$5 = fails$D;
  var objectKeys$1 = objectKeys$3;
  var getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;
  var propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;
  var toObject$3 = toObject$h;
  var IndexedObject = indexedObject;

  // eslint-disable-next-line es/no-object-assign -- safe
  var $assign = Object.assign;
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  var defineProperty$3 = Object.defineProperty;
  var concat$1 = uncurryThis$8([].concat);

  // `Object.assign` method
  // https://tc39.es/ecma262/#sec-object.assign
  var objectAssign = !$assign || fails$5(function () {
    // should have correct order of operations (Edge bug)
    if (DESCRIPTORS$3 && $assign({ b: 1 }, $assign(defineProperty$3({}, 'a', {
      enumerable: true,
      get: function () {
        defineProperty$3(this, 'b', {
          value: 3,
          enumerable: false
        });
      }
    }), { b: 2 })).b !== 1) return true;
    // should work with symbols and should have deterministic property order (V8 bug)
    var A = {};
    var B = {};
    // eslint-disable-next-line es/no-symbol -- safe
    var symbol = Symbol();
    var alphabet = 'abcdefghijklmnopqrst';
    A[symbol] = 7;
    alphabet.split('').forEach(function (chr) { B[chr] = chr; });
    return $assign({}, A)[symbol] != 7 || objectKeys$1($assign({}, B)).join('') != alphabet;
  }) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
    var T = toObject$3(target);
    var argumentsLength = arguments.length;
    var index = 1;
    var getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;
    var propertyIsEnumerable = propertyIsEnumerableModule$1.f;
    while (argumentsLength > index) {
      var S = IndexedObject(arguments[index++]);
      var keys = getOwnPropertySymbols ? concat$1(objectKeys$1(S), getOwnPropertySymbols(S)) : objectKeys$1(S);
      var length = keys.length;
      var j = 0;
      var key;
      while (length > j) {
        key = keys[j++];
        if (!DESCRIPTORS$3 || call$5(propertyIsEnumerable, S, key)) T[key] = S[key];
      }
    } return T;
  } : $assign;

  var $$a = _export;
  var assign$1 = objectAssign;

  // `Object.assign` method
  // https://tc39.es/ecma262/#sec-object.assign
  // eslint-disable-next-line es/no-object-assign -- required for testing
  $$a({ target: 'Object', stat: true, forced: Object.assign !== assign$1 }, {
    assign: assign$1
  });

  var uncurryThis$7 = functionUncurryThis;
  var toObject$2 = toObject$h;

  var floor = Math.floor;
  var charAt$1 = uncurryThis$7(''.charAt);
  var replace$2 = uncurryThis$7(''.replace);
  var stringSlice$4 = uncurryThis$7(''.slice);
  var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
  var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;

  // `GetSubstitution` abstract operation
  // https://tc39.es/ecma262/#sec-getsubstitution
  var getSubstitution$2 = function (matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject$2(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return replace$2(replacement, symbols, function (match, ch) {
      var capture;
      switch (charAt$1(ch, 0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return stringSlice$4(str, 0, position);
        case "'": return stringSlice$4(str, tailPos);
        case '<':
          capture = namedCaptures[stringSlice$4(ch, 1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? charAt$1(ch, 1) : captures[f - 1] + charAt$1(ch, 1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  };

  var apply$1 = functionApply;
  var call$4 = functionCall;
  var uncurryThis$6 = functionUncurryThis;
  var fixRegExpWellKnownSymbolLogic$2 = fixRegexpWellKnownSymbolLogic;
  var fails$4 = fails$D;
  var anObject$4 = anObject$k;
  var isCallable$3 = isCallable$p;
  var toIntegerOrInfinity = toIntegerOrInfinity$9;
  var toLength$1 = toLength$9;
  var toString$6 = toString$f;
  var requireObjectCoercible$4 = requireObjectCoercible$c;
  var advanceStringIndex$1 = advanceStringIndex$3;
  var getMethod$3 = getMethod$8;
  var getSubstitution$1 = getSubstitution$2;
  var regExpExec$2 = regexpExecAbstract;
  var wellKnownSymbol$4 = wellKnownSymbol$s;

  var REPLACE$1 = wellKnownSymbol$4('replace');
  var max$1 = Math.max;
  var min = Math.min;
  var concat = uncurryThis$6([].concat);
  var push$1 = uncurryThis$6([].push);
  var stringIndexOf$3 = uncurryThis$6(''.indexOf);
  var stringSlice$3 = uncurryThis$6(''.slice);

  var maybeToString = function (it) {
    return it === undefined ? it : String(it);
  };

  // IE <= 11 replaces $0 with the whole match, as if it was $&
  // https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
  var REPLACE_KEEPS_$0 = (function () {
    // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
    return 'a'.replace(/./, '$0') === '$0';
  })();

  // Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
    if (/./[REPLACE$1]) {
      return /./[REPLACE$1]('a', '$0') === '';
    }
    return false;
  })();

  var REPLACE_SUPPORTS_NAMED_GROUPS = !fails$4(function () {
    var re = /./;
    re.exec = function () {
      var result = [];
      result.groups = { a: '7' };
      return result;
    };
    // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive
    return ''.replace(re, '$<a>') !== '7';
  });

  // @@replace logic
  fixRegExpWellKnownSymbolLogic$2('replace', function (_, nativeReplace, maybeCallNative) {
    var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

    return [
      // `String.prototype.replace` method
      // https://tc39.es/ecma262/#sec-string.prototype.replace
      function replace(searchValue, replaceValue) {
        var O = requireObjectCoercible$4(this);
        var replacer = searchValue == undefined ? undefined : getMethod$3(searchValue, REPLACE$1);
        return replacer
          ? call$4(replacer, searchValue, O, replaceValue)
          : call$4(nativeReplace, toString$6(O), searchValue, replaceValue);
      },
      // `RegExp.prototype[@@replace]` method
      // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
      function (string, replaceValue) {
        var rx = anObject$4(this);
        var S = toString$6(string);

        if (
          typeof replaceValue == 'string' &&
          stringIndexOf$3(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&
          stringIndexOf$3(replaceValue, '$<') === -1
        ) {
          var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
          if (res.done) return res.value;
        }

        var functionalReplace = isCallable$3(replaceValue);
        if (!functionalReplace) replaceValue = toString$6(replaceValue);

        var global = rx.global;
        if (global) {
          var fullUnicode = rx.unicode;
          rx.lastIndex = 0;
        }
        var results = [];
        while (true) {
          var result = regExpExec$2(rx, S);
          if (result === null) break;

          push$1(results, result);
          if (!global) break;

          var matchStr = toString$6(result[0]);
          if (matchStr === '') rx.lastIndex = advanceStringIndex$1(S, toLength$1(rx.lastIndex), fullUnicode);
        }

        var accumulatedResult = '';
        var nextSourcePosition = 0;
        for (var i = 0; i < results.length; i++) {
          result = results[i];

          var matched = toString$6(result[0]);
          var position = max$1(min(toIntegerOrInfinity(result.index), S.length), 0);
          var captures = [];
          // NOTE: This is equivalent to
          //   captures = result.slice(1).map(maybeToString)
          // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
          // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
          // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
          for (var j = 1; j < result.length; j++) push$1(captures, maybeToString(result[j]));
          var namedCaptures = result.groups;
          if (functionalReplace) {
            var replacerArgs = concat([matched], captures, position, S);
            if (namedCaptures !== undefined) push$1(replacerArgs, namedCaptures);
            var replacement = toString$6(apply$1(replaceValue, undefined, replacerArgs));
          } else {
            replacement = getSubstitution$1(matched, S, position, captures, namedCaptures, replaceValue);
          }
          if (position >= nextSourcePosition) {
            accumulatedResult += stringSlice$3(S, nextSourcePosition, position) + replacement;
            nextSourcePosition = position + matched.length;
          }
        }
        return accumulatedResult + stringSlice$3(S, nextSourcePosition);
      }
    ];
  }, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);

  var $$9 = _export;
  var fill = arrayFill$1;
  var addToUnscopables$1 = addToUnscopables$3;

  // `Array.prototype.fill` method
  // https://tc39.es/ecma262/#sec-array.prototype.fill
  $$9({ target: 'Array', proto: true }, {
    fill: fill
  });

  // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
  addToUnscopables$1('fill');

  var wellKnownSymbolWrapped = {};

  var wellKnownSymbol$3 = wellKnownSymbol$s;

  wellKnownSymbolWrapped.f = wellKnownSymbol$3;

  var global$6 = global$17;

  var path$1 = global$6;

  var path = path$1;
  var hasOwn$3 = hasOwnProperty_1;
  var wrappedWellKnownSymbolModule$1 = wellKnownSymbolWrapped;
  var defineProperty$2 = objectDefineProperty.f;

  var defineWellKnownSymbol$4 = function (NAME) {
    var Symbol = path.Symbol || (path.Symbol = {});
    if (!hasOwn$3(Symbol, NAME)) defineProperty$2(Symbol, NAME, {
      value: wrappedWellKnownSymbolModule$1.f(NAME)
    });
  };

  var $$8 = _export;
  var global$5 = global$17;
  var getBuiltIn = getBuiltIn$9;
  var apply = functionApply;
  var call$3 = functionCall;
  var uncurryThis$5 = functionUncurryThis;
  var DESCRIPTORS$2 = descriptors;
  var NATIVE_SYMBOL$1 = nativeSymbol;
  var fails$3 = fails$D;
  var hasOwn$2 = hasOwnProperty_1;
  var isArray = isArray$4;
  var isCallable$2 = isCallable$p;
  var isObject = isObject$l;
  var isPrototypeOf$3 = objectIsPrototypeOf;
  var isSymbol = isSymbol$4;
  var anObject$3 = anObject$k;
  var toObject$1 = toObject$h;
  var toIndexedObject = toIndexedObject$b;
  var toPropertyKey = toPropertyKey$5;
  var $toString$1 = toString$f;
  var createPropertyDescriptor = createPropertyDescriptor$6;
  var nativeObjectCreate = objectCreate;
  var objectKeys = objectKeys$3;
  var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
  var getOwnPropertyNamesExternal = objectGetOwnPropertyNamesExternal;
  var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
  var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
  var definePropertyModule = objectDefineProperty;
  var propertyIsEnumerableModule = objectPropertyIsEnumerable;
  var arraySlice = arraySlice$9;
  var redefine$2 = redefine$c.exports;
  var shared = shared$5.exports;
  var sharedKey = sharedKey$4;
  var hiddenKeys = hiddenKeys$6;
  var uid = uid$5;
  var wellKnownSymbol$2 = wellKnownSymbol$s;
  var wrappedWellKnownSymbolModule = wellKnownSymbolWrapped;
  var defineWellKnownSymbol$3 = defineWellKnownSymbol$4;
  var setToStringTag$2 = setToStringTag$8;
  var InternalStateModule = internalState;
  var $forEach = arrayIteration.forEach;

  var HIDDEN = sharedKey('hidden');
  var SYMBOL = 'Symbol';
  var PROTOTYPE = 'prototype';
  var TO_PRIMITIVE = wellKnownSymbol$2('toPrimitive');

  var setInternalState = InternalStateModule.set;
  var getInternalState = InternalStateModule.getterFor(SYMBOL);

  var ObjectPrototype = Object[PROTOTYPE];
  var $Symbol = global$5.Symbol;
  var SymbolPrototype$1 = $Symbol && $Symbol[PROTOTYPE];
  var TypeError$2 = global$5.TypeError;
  var QObject = global$5.QObject;
  var $stringify = getBuiltIn('JSON', 'stringify');
  var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  var nativeDefineProperty = definePropertyModule.f;
  var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
  var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
  var push = uncurryThis$5([].push);

  var AllSymbols = shared('symbols');
  var ObjectPrototypeSymbols = shared('op-symbols');
  var StringToSymbolRegistry = shared('string-to-symbol-registry');
  var SymbolToStringRegistry = shared('symbol-to-string-registry');
  var WellKnownSymbolsStore = shared('wks');

  // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
  var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

  // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
  var setSymbolDescriptor = DESCRIPTORS$2 && fails$3(function () {
    return nativeObjectCreate(nativeDefineProperty({}, 'a', {
      get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
    })).a != 7;
  }) ? function (O, P, Attributes) {
    var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
    if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
    nativeDefineProperty(O, P, Attributes);
    if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
      nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
    }
  } : nativeDefineProperty;

  var wrap = function (tag, description) {
    var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype$1);
    setInternalState(symbol, {
      type: SYMBOL,
      tag: tag,
      description: description
    });
    if (!DESCRIPTORS$2) symbol.description = description;
    return symbol;
  };

  var $defineProperty = function defineProperty(O, P, Attributes) {
    if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
    anObject$3(O);
    var key = toPropertyKey(P);
    anObject$3(Attributes);
    if (hasOwn$2(AllSymbols, key)) {
      if (!Attributes.enumerable) {
        if (!hasOwn$2(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
        O[HIDDEN][key] = true;
      } else {
        if (hasOwn$2(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
        Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
      } return setSymbolDescriptor(O, key, Attributes);
    } return nativeDefineProperty(O, key, Attributes);
  };

  var $defineProperties = function defineProperties(O, Properties) {
    anObject$3(O);
    var properties = toIndexedObject(Properties);
    var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
    $forEach(keys, function (key) {
      if (!DESCRIPTORS$2 || call$3($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);
    });
    return O;
  };

  var $create = function create(O, Properties) {
    return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
  };

  var $propertyIsEnumerable = function propertyIsEnumerable(V) {
    var P = toPropertyKey(V);
    var enumerable = call$3(nativePropertyIsEnumerable, this, P);
    if (this === ObjectPrototype && hasOwn$2(AllSymbols, P) && !hasOwn$2(ObjectPrototypeSymbols, P)) return false;
    return enumerable || !hasOwn$2(this, P) || !hasOwn$2(AllSymbols, P) || hasOwn$2(this, HIDDEN) && this[HIDDEN][P]
      ? enumerable : true;
  };

  var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
    var it = toIndexedObject(O);
    var key = toPropertyKey(P);
    if (it === ObjectPrototype && hasOwn$2(AllSymbols, key) && !hasOwn$2(ObjectPrototypeSymbols, key)) return;
    var descriptor = nativeGetOwnPropertyDescriptor(it, key);
    if (descriptor && hasOwn$2(AllSymbols, key) && !(hasOwn$2(it, HIDDEN) && it[HIDDEN][key])) {
      descriptor.enumerable = true;
    }
    return descriptor;
  };

  var $getOwnPropertyNames = function getOwnPropertyNames(O) {
    var names = nativeGetOwnPropertyNames(toIndexedObject(O));
    var result = [];
    $forEach(names, function (key) {
      if (!hasOwn$2(AllSymbols, key) && !hasOwn$2(hiddenKeys, key)) push(result, key);
    });
    return result;
  };

  var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
    var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
    var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
    var result = [];
    $forEach(names, function (key) {
      if (hasOwn$2(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn$2(ObjectPrototype, key))) {
        push(result, AllSymbols[key]);
      }
    });
    return result;
  };

  // `Symbol` constructor
  // https://tc39.es/ecma262/#sec-symbol-constructor
  if (!NATIVE_SYMBOL$1) {
    $Symbol = function Symbol() {
      if (isPrototypeOf$3(SymbolPrototype$1, this)) throw TypeError$2('Symbol is not a constructor');
      var description = !arguments.length || arguments[0] === undefined ? undefined : $toString$1(arguments[0]);
      var tag = uid(description);
      var setter = function (value) {
        if (this === ObjectPrototype) call$3(setter, ObjectPrototypeSymbols, value);
        if (hasOwn$2(this, HIDDEN) && hasOwn$2(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
        setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
      };
      if (DESCRIPTORS$2 && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
      return wrap(tag, description);
    };

    SymbolPrototype$1 = $Symbol[PROTOTYPE];

    redefine$2(SymbolPrototype$1, 'toString', function toString() {
      return getInternalState(this).tag;
    });

    redefine$2($Symbol, 'withoutSetter', function (description) {
      return wrap(uid(description), description);
    });

    propertyIsEnumerableModule.f = $propertyIsEnumerable;
    definePropertyModule.f = $defineProperty;
    getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
    getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
    getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

    wrappedWellKnownSymbolModule.f = function (name) {
      return wrap(wellKnownSymbol$2(name), name);
    };

    if (DESCRIPTORS$2) {
      // https://github.com/tc39/proposal-Symbol-description
      nativeDefineProperty(SymbolPrototype$1, 'description', {
        configurable: true,
        get: function description() {
          return getInternalState(this).description;
        }
      });
      {
        redefine$2(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
      }
    }
  }

  $$8({ global: true, wrap: true, forced: !NATIVE_SYMBOL$1, sham: !NATIVE_SYMBOL$1 }, {
    Symbol: $Symbol
  });

  $forEach(objectKeys(WellKnownSymbolsStore), function (name) {
    defineWellKnownSymbol$3(name);
  });

  $$8({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL$1 }, {
    // `Symbol.for` method
    // https://tc39.es/ecma262/#sec-symbol.for
    'for': function (key) {
      var string = $toString$1(key);
      if (hasOwn$2(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
      var symbol = $Symbol(string);
      StringToSymbolRegistry[string] = symbol;
      SymbolToStringRegistry[symbol] = string;
      return symbol;
    },
    // `Symbol.keyFor` method
    // https://tc39.es/ecma262/#sec-symbol.keyfor
    keyFor: function keyFor(sym) {
      if (!isSymbol(sym)) throw TypeError$2(sym + ' is not a symbol');
      if (hasOwn$2(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
    },
    useSetter: function () { USE_SETTER = true; },
    useSimple: function () { USE_SETTER = false; }
  });

  $$8({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL$1, sham: !DESCRIPTORS$2 }, {
    // `Object.create` method
    // https://tc39.es/ecma262/#sec-object.create
    create: $create,
    // `Object.defineProperty` method
    // https://tc39.es/ecma262/#sec-object.defineproperty
    defineProperty: $defineProperty,
    // `Object.defineProperties` method
    // https://tc39.es/ecma262/#sec-object.defineproperties
    defineProperties: $defineProperties,
    // `Object.getOwnPropertyDescriptor` method
    // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
    getOwnPropertyDescriptor: $getOwnPropertyDescriptor
  });

  $$8({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL$1 }, {
    // `Object.getOwnPropertyNames` method
    // https://tc39.es/ecma262/#sec-object.getownpropertynames
    getOwnPropertyNames: $getOwnPropertyNames,
    // `Object.getOwnPropertySymbols` method
    // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
    getOwnPropertySymbols: $getOwnPropertySymbols
  });

  // Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
  // https://bugs.chromium.org/p/v8/issues/detail?id=3443
  $$8({ target: 'Object', stat: true, forced: fails$3(function () { getOwnPropertySymbolsModule.f(1); }) }, {
    getOwnPropertySymbols: function getOwnPropertySymbols(it) {
      return getOwnPropertySymbolsModule.f(toObject$1(it));
    }
  });

  // `JSON.stringify` method behavior with symbols
  // https://tc39.es/ecma262/#sec-json.stringify
  if ($stringify) {
    var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL$1 || fails$3(function () {
      var symbol = $Symbol();
      // MS Edge converts symbol values to JSON as {}
      return $stringify([symbol]) != '[null]'
        // WebKit converts symbol values to JSON as null
        || $stringify({ a: symbol }) != '{}'
        // V8 throws on boxed symbols
        || $stringify(Object(symbol)) != '{}';
    });

    $$8({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {
      // eslint-disable-next-line no-unused-vars -- required for `.length`
      stringify: function stringify(it, replacer, space) {
        var args = arraySlice(arguments);
        var $replacer = replacer;
        if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
        if (!isArray(replacer)) replacer = function (key, value) {
          if (isCallable$2($replacer)) value = call$3($replacer, this, key, value);
          if (!isSymbol(value)) return value;
        };
        args[1] = replacer;
        return apply($stringify, null, args);
      }
    });
  }

  // `Symbol.prototype[@@toPrimitive]` method
  // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
  if (!SymbolPrototype$1[TO_PRIMITIVE]) {
    var valueOf = SymbolPrototype$1.valueOf;
    // eslint-disable-next-line no-unused-vars -- required for .length
    redefine$2(SymbolPrototype$1, TO_PRIMITIVE, function (hint) {
      // TODO: improve hint logic
      return call$3(valueOf, this);
    });
  }
  // `Symbol.prototype[@@toStringTag]` property
  // https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag
  setToStringTag$2($Symbol, SYMBOL);

  hiddenKeys[HIDDEN] = true;

  var $$7 = _export;
  var DESCRIPTORS$1 = descriptors;
  var global$4 = global$17;
  var uncurryThis$4 = functionUncurryThis;
  var hasOwn$1 = hasOwnProperty_1;
  var isCallable$1 = isCallable$p;
  var isPrototypeOf$2 = objectIsPrototypeOf;
  var toString$5 = toString$f;
  var defineProperty$1 = objectDefineProperty.f;
  var copyConstructorProperties = copyConstructorProperties$2;

  var NativeSymbol = global$4.Symbol;
  var SymbolPrototype = NativeSymbol && NativeSymbol.prototype;

  if (DESCRIPTORS$1 && isCallable$1(NativeSymbol) && (!('description' in SymbolPrototype) ||
    // Safari 12 bug
    NativeSymbol().description !== undefined
  )) {
    var EmptyStringDescriptionStore = {};
    // wrap Symbol constructor for correct work with undefined description
    var SymbolWrapper = function Symbol() {
      var description = arguments.length < 1 || arguments[0] === undefined ? undefined : toString$5(arguments[0]);
      var result = isPrototypeOf$2(SymbolPrototype, this)
        ? new NativeSymbol(description)
        // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
        : description === undefined ? NativeSymbol() : NativeSymbol(description);
      if (description === '') EmptyStringDescriptionStore[result] = true;
      return result;
    };

    copyConstructorProperties(SymbolWrapper, NativeSymbol);
    SymbolWrapper.prototype = SymbolPrototype;
    SymbolPrototype.constructor = SymbolWrapper;

    var NATIVE_SYMBOL = String(NativeSymbol('test')) == 'Symbol(test)';
    var symbolToString = uncurryThis$4(SymbolPrototype.toString);
    var symbolValueOf = uncurryThis$4(SymbolPrototype.valueOf);
    var regexp = /^Symbol\((.*)\)[^)]+$/;
    var replace$1 = uncurryThis$4(''.replace);
    var stringSlice$2 = uncurryThis$4(''.slice);

    defineProperty$1(SymbolPrototype, 'description', {
      configurable: true,
      get: function description() {
        var symbol = symbolValueOf(this);
        var string = symbolToString(symbol);
        if (hasOwn$1(EmptyStringDescriptionStore, symbol)) return '';
        var desc = NATIVE_SYMBOL ? stringSlice$2(string, 7, -1) : replace$1(string, regexp, '$1');
        return desc === '' ? undefined : desc;
      }
    });

    $$7({ global: true, forced: true }, {
      Symbol: SymbolWrapper
    });
  }

  var defineWellKnownSymbol$2 = defineWellKnownSymbol$4;

  // `Symbol.iterator` well-known symbol
  // https://tc39.es/ecma262/#sec-symbol.iterator
  defineWellKnownSymbol$2('iterator');

  function _createSuper$F(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$F(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$F() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function noop() {}

  var identity = function identity(x) {
    return x;
  };

  function assign(tar, src) {
    // @ts-ignore
    for (var k in src) {
      tar[k] = src[k];
    }

    return tar;
  }

  function is_promise(value) {
    return value && _typeof(value) === 'object' && typeof value.then === 'function';
  }

  function add_location(element, file, line, column, char) {
    element.__svelte_meta = {
      loc: {
        file: file,
        line: line,
        column: column,
        char: char
      }
    };
  }

  function run(fn) {
    return fn();
  }

  function blank_object() {
    return Object.create(null);
  }

  function run_all(fns) {
    fns.forEach(run);
  }

  function is_function(thing) {
    return typeof thing === 'function';
  }

  function safe_not_equal(a, b) {
    return a != a ? b == b : a !== b || a && _typeof(a) === 'object' || typeof a === 'function';
  }

  var src_url_equal_anchor;

  function src_url_equal(element_src, url) {
    if (!src_url_equal_anchor) {
      src_url_equal_anchor = document.createElement('a');
    }

    src_url_equal_anchor.href = url;
    return element_src === src_url_equal_anchor.href;
  }

  function is_empty(obj) {
    return Object.keys(obj).length === 0;
  }

  function validate_store(store, name) {
    if (store != null && typeof store.subscribe !== 'function') {
      throw new Error("'".concat(name, "' is not a store with a 'subscribe' method"));
    }
  }

  function subscribe(store) {
    if (store == null) {
      return noop;
    }

    for (var _len = arguments.length, callbacks = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      callbacks[_key - 1] = arguments[_key];
    }

    var unsub = store.subscribe.apply(store, callbacks);
    return unsub.unsubscribe ? function () {
      return unsub.unsubscribe();
    } : unsub;
  }

  function component_subscribe(component, store, callback) {
    component.$$.on_destroy.push(subscribe(store, callback));
  }

  function set_store_value(store, ret, value) {
    store.set(value);
    return ret;
  }

  var is_client = typeof window !== 'undefined';
  var now = is_client ? function () {
    return window.performance.now();
  } : function () {
    return Date.now();
  };
  var raf = is_client ? function (cb) {
    return requestAnimationFrame(cb);
  } : noop; // used internally for testing

  var tasks = new Set();

  function run_tasks(now) {
    tasks.forEach(function (task) {
      if (!task.c(now)) {
        tasks.delete(task);
        task.f();
      }
    });
    if (tasks.size !== 0) raf(run_tasks);
  }
  /**
   * Creates a new task that runs on each raf frame
   * until it returns a falsy value or is aborted
   */


  function loop(callback) {
    var task;
    if (tasks.size === 0) raf(run_tasks);
    return {
      promise: new Promise(function (fulfill) {
        tasks.add(task = {
          c: callback,
          f: fulfill
        });
      }),
      abort: function abort() {
        tasks.delete(task);
      }
    };
  } // Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM

  function append(target, node) {
    target.appendChild(node);
  }

  function get_root_for_style(node) {
    if (!node) return document;
    var root = node.getRootNode ? node.getRootNode() : node.ownerDocument;

    if (root && root.host) {
      return root;
    }

    return node.ownerDocument;
  }

  function append_empty_stylesheet(node) {
    var style_element = element('style');
    append_stylesheet(get_root_for_style(node), style_element);
    return style_element;
  }

  function append_stylesheet(node, style) {
    append(node.head || node, style);
  }

  function insert(target, node, anchor) {
    target.insertBefore(node, anchor || null);
  }

  function detach(node) {
    node.parentNode.removeChild(node);
  }

  function destroy_each(iterations, detaching) {
    for (var i = 0; i < iterations.length; i += 1) {
      if (iterations[i]) iterations[i].d(detaching);
    }
  }

  function element(name) {
    return document.createElement(name);
  }

  function svg_element(name) {
    return document.createElementNS('http://www.w3.org/2000/svg', name);
  }

  function text(data) {
    return document.createTextNode(data);
  }

  function space() {
    return text(' ');
  }

  function empty() {
    return text('');
  }

  function listen(node, event, handler, options) {
    node.addEventListener(event, handler, options);
    return function () {
      return node.removeEventListener(event, handler, options);
    };
  }

  function attr(node, attribute, value) {
    if (value == null) node.removeAttribute(attribute);else if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);
  }

  function children(element) {
    return Array.from(element.childNodes);
  }

  function set_input_value(input, value) {
    input.value = value == null ? '' : value;
  }

  function set_style(node, key, value, important) {
    node.style.setProperty(key, value, important ? 'important' : '');
  }

  function custom_event(type, detail) {
    var bubbles = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var e = document.createEvent('CustomEvent');
    e.initCustomEvent(type, bubbles, false, detail);
    return e;
  }

  var HtmlTag = /*#__PURE__*/function () {
    function HtmlTag() {
      _classCallCheck(this, HtmlTag);

      this.e = this.n = null;
    }

    _createClass(HtmlTag, [{
      key: "c",
      value: function c(html) {
        this.h(html);
      }
    }, {
      key: "m",
      value: function m(html, target) {
        var anchor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

        if (!this.e) {
          this.e = element(target.nodeName);
          this.t = target;
          this.c(html);
        }

        this.i(anchor);
      }
    }, {
      key: "h",
      value: function h(html) {
        this.e.innerHTML = html;
        this.n = Array.from(this.e.childNodes);
      }
    }, {
      key: "i",
      value: function i(anchor) {
        for (var i = 0; i < this.n.length; i += 1) {
          insert(this.t, this.n[i], anchor);
        }
      }
    }, {
      key: "p",
      value: function p(html) {
        this.d();
        this.h(html);
        this.i(this.a);
      }
    }, {
      key: "d",
      value: function d() {
        this.n.forEach(detach);
      }
    }]);

    return HtmlTag;
  }();

  var active_docs = new Set();
  var active = 0; // https://github.com/darkskyapp/string-hash/blob/master/index.js

  function hash(str) {
    var hash = 5381;
    var i = str.length;

    while (i--) {
      hash = (hash << 5) - hash ^ str.charCodeAt(i);
    }

    return hash >>> 0;
  }

  function create_rule(node, a, b, duration, delay, ease, fn) {
    var uid = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;
    var step = 16.666 / duration;
    var keyframes = '{\n';

    for (var p = 0; p <= 1; p += step) {
      var t = a + (b - a) * ease(p);
      keyframes += p * 100 + "%{".concat(fn(t, 1 - t), "}\n");
    }

    var rule = keyframes + "100% {".concat(fn(b, 1 - b), "}\n}");
    var name = "__svelte_".concat(hash(rule), "_").concat(uid);
    var doc = get_root_for_style(node);
    active_docs.add(doc);
    var stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);
    var current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});

    if (!current_rules[name]) {
      current_rules[name] = true;
      stylesheet.insertRule("@keyframes ".concat(name, " ").concat(rule), stylesheet.cssRules.length);
    }

    var animation = node.style.animation || '';
    node.style.animation = "".concat(animation ? "".concat(animation, ", ") : '').concat(name, " ").concat(duration, "ms linear ").concat(delay, "ms 1 both");
    active += 1;
    return name;
  }

  function delete_rule(node, name) {
    var previous = (node.style.animation || '').split(', ');
    var next = previous.filter(name ? function (anim) {
      return anim.indexOf(name) < 0;
    } // remove specific animation
    : function (anim) {
      return anim.indexOf('__svelte') === -1;
    } // remove all Svelte animations
    );
    var deleted = previous.length - next.length;

    if (deleted) {
      node.style.animation = next.join(', ');
      active -= deleted;
      if (!active) clear_rules();
    }
  }

  function clear_rules() {
    raf(function () {
      if (active) return;
      active_docs.forEach(function (doc) {
        var stylesheet = doc.__svelte_stylesheet;
        var i = stylesheet.cssRules.length;

        while (i--) {
          stylesheet.deleteRule(i);
        }

        doc.__svelte_rules = {};
      });
      active_docs.clear();
    });
  }

  function create_animation(node, from, fn, params) {
    if (!from) return noop;
    var to = node.getBoundingClientRect();
    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom) return noop;

    var _fn = fn(node, {
      from: from,
      to: to
    }, params),
        _fn$delay = _fn.delay,
        delay = _fn$delay === void 0 ? 0 : _fn$delay,
        _fn$duration = _fn.duration,
        duration = _fn$duration === void 0 ? 300 : _fn$duration,
        _fn$easing = _fn.easing,
        easing = _fn$easing === void 0 ? identity : _fn$easing,
        _fn$start = _fn.start,
        start_time = _fn$start === void 0 ? now() + delay : _fn$start,
        _fn$end = _fn.end,
        end = _fn$end === void 0 ? start_time + duration : _fn$end,
        _fn$tick = _fn.tick,
        tick = _fn$tick === void 0 ? noop : _fn$tick,
        css = _fn.css;

    var running = true;
    var started = false;
    var name;

    function start() {
      if (css) {
        name = create_rule(node, 0, 1, duration, delay, easing, css);
      }

      if (!delay) {
        started = true;
      }
    }

    function stop() {
      if (css) delete_rule(node, name);
      running = false;
    }

    loop(function (now) {
      if (!started && now >= start_time) {
        started = true;
      }

      if (started && now >= end) {
        tick(1, 0);
        stop();
      }

      if (!running) {
        return false;
      }

      if (started) {
        var p = now - start_time;
        var t = 0 + 1 * easing(p / duration);
        tick(t, 1 - t);
      }

      return true;
    });
    start();
    tick(0, 1);
    return stop;
  }

  function fix_position(node) {
    var style = getComputedStyle(node);

    if (style.position !== 'absolute' && style.position !== 'fixed') {
      var width = style.width,
          height = style.height;
      var a = node.getBoundingClientRect();
      node.style.position = 'absolute';
      node.style.width = width;
      node.style.height = height;
      add_transform(node, a);
    }
  }

  function add_transform(node, a) {
    var b = node.getBoundingClientRect();

    if (a.left !== b.left || a.top !== b.top) {
      var style = getComputedStyle(node);
      var transform = style.transform === 'none' ? '' : style.transform;
      node.style.transform = "".concat(transform, " translate(").concat(a.left - b.left, "px, ").concat(a.top - b.top, "px)");
    }
  }

  var current_component;

  function set_current_component(component) {
    current_component = component;
  }

  function get_current_component() {
    if (!current_component) throw new Error('Function called outside component initialization');
    return current_component;
  }

  function onMount$1(fn) {
    get_current_component().$$.on_mount.push(fn);
  }

  var dirty_components = [];
  var binding_callbacks = [];
  var render_callbacks = [];
  var flush_callbacks = [];
  var resolved_promise = Promise.resolve();
  var update_scheduled = false;

  function schedule_update() {
    if (!update_scheduled) {
      update_scheduled = true;
      resolved_promise.then(flush);
    }
  }

  function add_render_callback(fn) {
    render_callbacks.push(fn);
  }

  var flushing = false;
  var seen_callbacks = new Set();

  function flush() {
    if (flushing) return;
    flushing = true;

    do {
      // first, call beforeUpdate functions
      // and update components
      for (var i = 0; i < dirty_components.length; i += 1) {
        var component = dirty_components[i];
        set_current_component(component);
        update(component.$$);
      }

      set_current_component(null);
      dirty_components.length = 0;

      while (binding_callbacks.length) {
        binding_callbacks.pop()();
      } // then, once components are updated, call
      // afterUpdate functions. This may cause
      // subsequent updates...


      for (var _i4 = 0; _i4 < render_callbacks.length; _i4 += 1) {
        var callback = render_callbacks[_i4];

        if (!seen_callbacks.has(callback)) {
          // ...so guard against infinite loops
          seen_callbacks.add(callback);
          callback();
        }
      }

      render_callbacks.length = 0;
    } while (dirty_components.length);

    while (flush_callbacks.length) {
      flush_callbacks.pop()();
    }

    update_scheduled = false;
    flushing = false;
    seen_callbacks.clear();
  }

  function update($$) {
    if ($$.fragment !== null) {
      $$.update();
      run_all($$.before_update);
      var dirty = $$.dirty;
      $$.dirty = [-1];
      $$.fragment && $$.fragment.p($$.ctx, dirty);
      $$.after_update.forEach(add_render_callback);
    }
  }

  var promise;

  function wait() {
    if (!promise) {
      promise = Promise.resolve();
      promise.then(function () {
        promise = null;
      });
    }

    return promise;
  }

  function dispatch(node, direction, kind) {
    node.dispatchEvent(custom_event("".concat(direction ? 'intro' : 'outro').concat(kind)));
  }

  var outroing = new Set();
  var outros;

  function group_outros() {
    outros = {
      r: 0,
      c: [],
      p: outros // parent group

    };
  }

  function check_outros() {
    if (!outros.r) {
      run_all(outros.c);
    }

    outros = outros.p;
  }

  function transition_in(block, local) {
    if (block && block.i) {
      outroing.delete(block);
      block.i(local);
    }
  }

  function transition_out(block, local, detach, callback) {
    if (block && block.o) {
      if (outroing.has(block)) return;
      outroing.add(block);
      outros.c.push(function () {
        outroing.delete(block);

        if (callback) {
          if (detach) block.d(1);
          callback();
        }
      });
      block.o(local);
    }
  }

  var null_transition = {
    duration: 0
  };

  function create_in_transition(node, fn, params) {
    var config = fn(node, params);
    var running = false;
    var animation_name;
    var task;
    var uid = 0;

    function cleanup() {
      if (animation_name) delete_rule(node, animation_name);
    }

    function go() {
      var _ref = config || null_transition,
          _ref$delay = _ref.delay,
          delay = _ref$delay === void 0 ? 0 : _ref$delay,
          _ref$duration = _ref.duration,
          duration = _ref$duration === void 0 ? 300 : _ref$duration,
          _ref$easing = _ref.easing,
          easing = _ref$easing === void 0 ? identity : _ref$easing,
          _ref$tick = _ref.tick,
          tick = _ref$tick === void 0 ? noop : _ref$tick,
          css = _ref.css;

      if (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);
      tick(0, 1);
      var start_time = now() + delay;
      var end_time = start_time + duration;
      if (task) task.abort();
      running = true;
      add_render_callback(function () {
        return dispatch(node, true, 'start');
      });
      task = loop(function (now) {
        if (running) {
          if (now >= end_time) {
            tick(1, 0);
            dispatch(node, true, 'end');
            cleanup();
            return running = false;
          }

          if (now >= start_time) {
            var t = easing((now - start_time) / duration);
            tick(t, 1 - t);
          }
        }

        return running;
      });
    }

    var started = false;
    return {
      start: function start() {
        if (started) return;
        started = true;
        delete_rule(node);

        if (is_function(config)) {
          config = config();
          wait().then(go);
        } else {
          go();
        }
      },
      invalidate: function invalidate() {
        started = false;
      },
      end: function end() {
        if (running) {
          cleanup();
          running = false;
        }
      }
    };
  }

  function create_out_transition(node, fn, params) {
    var config = fn(node, params);
    var running = true;
    var animation_name;
    var group = outros;
    group.r += 1;

    function go() {
      var _ref2 = config || null_transition,
          _ref2$delay = _ref2.delay,
          delay = _ref2$delay === void 0 ? 0 : _ref2$delay,
          _ref2$duration = _ref2.duration,
          duration = _ref2$duration === void 0 ? 300 : _ref2$duration,
          _ref2$easing = _ref2.easing,
          easing = _ref2$easing === void 0 ? identity : _ref2$easing,
          _ref2$tick = _ref2.tick,
          tick = _ref2$tick === void 0 ? noop : _ref2$tick,
          css = _ref2.css;

      if (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);
      var start_time = now() + delay;
      var end_time = start_time + duration;
      add_render_callback(function () {
        return dispatch(node, false, 'start');
      });
      loop(function (now) {
        if (running) {
          if (now >= end_time) {
            tick(0, 1);
            dispatch(node, false, 'end');

            if (! --group.r) {
              // this will result in `end()` being called,
              // so we don't need to clean up here
              run_all(group.c);
            }

            return false;
          }

          if (now >= start_time) {
            var t = easing((now - start_time) / duration);
            tick(1 - t, t);
          }
        }

        return running;
      });
    }

    if (is_function(config)) {
      wait().then(function () {
        // @ts-ignore
        config = config();
        go();
      });
    } else {
      go();
    }

    return {
      end: function end(reset) {
        if (reset && config.tick) {
          config.tick(1, 0);
        }

        if (running) {
          if (animation_name) delete_rule(node, animation_name);
          running = false;
        }
      }
    };
  }

  function create_bidirectional_transition(node, fn, params, intro) {
    var config = fn(node, params);
    var t = intro ? 0 : 1;
    var running_program = null;
    var pending_program = null;
    var animation_name = null;

    function clear_animation() {
      if (animation_name) delete_rule(node, animation_name);
    }

    function init(program, duration) {
      var d = program.b - t;
      duration *= Math.abs(d);
      return {
        a: t,
        b: program.b,
        d: d,
        duration: duration,
        start: program.start,
        end: program.start + duration,
        group: program.group
      };
    }

    function go(b) {
      var _ref3 = config || null_transition,
          _ref3$delay = _ref3.delay,
          delay = _ref3$delay === void 0 ? 0 : _ref3$delay,
          _ref3$duration = _ref3.duration,
          duration = _ref3$duration === void 0 ? 300 : _ref3$duration,
          _ref3$easing = _ref3.easing,
          easing = _ref3$easing === void 0 ? identity : _ref3$easing,
          _ref3$tick = _ref3.tick,
          tick = _ref3$tick === void 0 ? noop : _ref3$tick,
          css = _ref3.css;

      var program = {
        start: now() + delay,
        b: b
      };

      if (!b) {
        // @ts-ignore todo: improve typings
        program.group = outros;
        outros.r += 1;
      }

      if (running_program || pending_program) {
        pending_program = program;
      } else {
        // if this is an intro, and there's a delay, we need to do
        // an initial tick and/or apply CSS animation immediately
        if (css) {
          clear_animation();
          animation_name = create_rule(node, t, b, duration, delay, easing, css);
        }

        if (b) tick(0, 1);
        running_program = init(program, duration);
        add_render_callback(function () {
          return dispatch(node, b, 'start');
        });
        loop(function (now) {
          if (pending_program && now > pending_program.start) {
            running_program = init(pending_program, duration);
            pending_program = null;
            dispatch(node, running_program.b, 'start');

            if (css) {
              clear_animation();
              animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);
            }
          }

          if (running_program) {
            if (now >= running_program.end) {
              tick(t = running_program.b, 1 - t);
              dispatch(node, running_program.b, 'end');

              if (!pending_program) {
                // we're done
                if (running_program.b) {
                  // intro — we can tidy up immediately
                  clear_animation();
                } else {
                  // outro — needs to be coordinated
                  if (! --running_program.group.r) run_all(running_program.group.c);
                }
              }

              running_program = null;
            } else if (now >= running_program.start) {
              var p = now - running_program.start;
              t = running_program.a + running_program.d * easing(p / running_program.duration);
              tick(t, 1 - t);
            }
          }

          return !!(running_program || pending_program);
        });
      }
    }

    return {
      run: function run(b) {
        if (is_function(config)) {
          wait().then(function () {
            // @ts-ignore
            config = config();
            go(b);
          });
        } else {
          go(b);
        }
      },
      end: function end() {
        clear_animation();
        running_program = pending_program = null;
      }
    };
  }

  function handle_promise(promise, info) {
    var token = info.token = {};

    function update(type, index, key, value) {
      if (info.token !== token) return;
      info.resolved = value;
      var child_ctx = info.ctx;

      if (key !== undefined) {
        child_ctx = child_ctx.slice();
        child_ctx[key] = value;
      }

      var block = type && (info.current = type)(child_ctx);
      var needs_flush = false;

      if (info.block) {
        if (info.blocks) {
          info.blocks.forEach(function (block, i) {
            if (i !== index && block) {
              group_outros();
              transition_out(block, 1, 1, function () {
                if (info.blocks[i] === block) {
                  info.blocks[i] = null;
                }
              });
              check_outros();
            }
          });
        } else {
          info.block.d(1);
        }

        block.c();
        transition_in(block, 1);
        block.m(info.mount(), info.anchor);
        needs_flush = true;
      }

      info.block = block;
      if (info.blocks) info.blocks[index] = block;

      if (needs_flush) {
        flush();
      }
    }

    if (is_promise(promise)) {
      var _current_component = get_current_component();

      promise.then(function (value) {
        set_current_component(_current_component);
        update(info.then, 1, info.value, value);
        set_current_component(null);
      }, function (error) {
        set_current_component(_current_component);
        update(info.catch, 2, info.error, error);
        set_current_component(null);

        if (!info.hasCatch) {
          throw error;
        }
      }); // if we previously had a then/catch block, destroy it

      if (info.current !== info.pending) {
        update(info.pending, 0);
        return true;
      }
    } else {
      if (info.current !== info.then) {
        update(info.then, 1, info.value, promise);
        return true;
      }

      info.resolved = promise;
    }
  }

  function update_await_block_branch(info, ctx, dirty) {
    var child_ctx = ctx.slice();
    var resolved = info.resolved;

    if (info.current === info.then) {
      child_ctx[info.value] = resolved;
    }

    if (info.current === info.catch) {
      child_ctx[info.error] = resolved;
    }

    info.block.p(child_ctx, dirty);
  }

  var globals = typeof window !== 'undefined' ? window : typeof globalThis !== 'undefined' ? globalThis : global;

  function outro_and_destroy_block(block, lookup) {
    transition_out(block, 1, 1, function () {
      lookup.delete(block.key);
    });
  }

  function fix_and_outro_and_destroy_block(block, lookup) {
    block.f();
    outro_and_destroy_block(block, lookup);
  }

  function update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {
    var o = old_blocks.length;
    var n = list.length;
    var i = o;
    var old_indexes = {};

    while (i--) {
      old_indexes[old_blocks[i].key] = i;
    }

    var new_blocks = [];
    var new_lookup = new Map();
    var deltas = new Map();
    i = n;

    while (i--) {
      var child_ctx = get_context(ctx, list, i);
      var key = get_key(child_ctx);
      var block = lookup.get(key);

      if (!block) {
        block = create_each_block(key, child_ctx);
        block.c();
      } else if (dynamic) {
        block.p(child_ctx, dirty);
      }

      new_lookup.set(key, new_blocks[i] = block);
      if (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));
    }

    var will_move = new Set();
    var did_move = new Set();

    function insert(block) {
      transition_in(block, 1);
      block.m(node, next);
      lookup.set(block.key, block);
      next = block.first;
      n--;
    }

    while (o && n) {
      var new_block = new_blocks[n - 1];
      var old_block = old_blocks[o - 1];
      var new_key = new_block.key;
      var old_key = old_block.key;

      if (new_block === old_block) {
        // do nothing
        next = new_block.first;
        o--;
        n--;
      } else if (!new_lookup.has(old_key)) {
        // remove old block
        destroy(old_block, lookup);
        o--;
      } else if (!lookup.has(new_key) || will_move.has(new_key)) {
        insert(new_block);
      } else if (did_move.has(old_key)) {
        o--;
      } else if (deltas.get(new_key) > deltas.get(old_key)) {
        did_move.add(new_key);
        insert(new_block);
      } else {
        will_move.add(old_key);
        o--;
      }
    }

    while (o--) {
      var _old_block = old_blocks[o];
      if (!new_lookup.has(_old_block.key)) destroy(_old_block, lookup);
    }

    while (n) {
      insert(new_blocks[n - 1]);
    }

    return new_blocks;
  }

  function validate_each_keys(ctx, list, get_context, get_key) {
    var keys = new Set();

    for (var i = 0; i < list.length; i++) {
      var key = get_key(get_context(ctx, list, i));

      if (keys.has(key)) {
        throw new Error('Cannot have duplicate keys in a keyed each');
      }

      keys.add(key);
    }
  }

  function create_component(block) {
    block && block.c();
  }

  function mount_component(component, target, anchor, customElement) {
    var _component$$$ = component.$$,
        fragment = _component$$$.fragment,
        on_mount = _component$$$.on_mount,
        on_destroy = _component$$$.on_destroy,
        after_update = _component$$$.after_update;
    fragment && fragment.m(target, anchor);

    if (!customElement) {
      // onMount happens before the initial afterUpdate
      add_render_callback(function () {
        var new_on_destroy = on_mount.map(run).filter(is_function);

        if (on_destroy) {
          on_destroy.push.apply(on_destroy, _toConsumableArray(new_on_destroy));
        } else {
          // Edge case - component was destroyed immediately,
          // most likely as a result of a binding initialising
          run_all(new_on_destroy);
        }

        component.$$.on_mount = [];
      });
    }

    after_update.forEach(add_render_callback);
  }

  function destroy_component(component, detaching) {
    var $$ = component.$$;

    if ($$.fragment !== null) {
      run_all($$.on_destroy);
      $$.fragment && $$.fragment.d(detaching); // TODO null out other refs, including component.$$ (but need to
      // preserve final state?)

      $$.on_destroy = $$.fragment = null;
      $$.ctx = [];
    }
  }

  function make_dirty(component, i) {
    if (component.$$.dirty[0] === -1) {
      dirty_components.push(component);
      schedule_update();
      component.$$.dirty.fill(0);
    }

    component.$$.dirty[i / 31 | 0] |= 1 << i % 31;
  }

  function init(component, options, instance, create_fragment, not_equal, props, append_styles) {
    var dirty = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : [-1];
    var parent_component = current_component;
    set_current_component(component);
    var $$ = component.$$ = {
      fragment: null,
      ctx: null,
      // state
      props: props,
      update: noop,
      not_equal: not_equal,
      bound: blank_object(),
      // lifecycle
      on_mount: [],
      on_destroy: [],
      on_disconnect: [],
      before_update: [],
      after_update: [],
      context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),
      // everything else
      callbacks: blank_object(),
      dirty: dirty,
      skip_bound: false,
      root: options.target || parent_component.$$.root
    };
    append_styles && append_styles($$.root);
    var ready = false;
    $$.ctx = instance ? instance(component, options.props || {}, function (i, ret) {
      var value = (arguments.length <= 2 ? 0 : arguments.length - 2) ? arguments.length <= 2 ? undefined : arguments[2] : ret;

      if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {
        if (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);
        if (ready) make_dirty(component, i);
      }

      return ret;
    }) : [];
    $$.update();
    ready = true;
    run_all($$.before_update); // `false` as a special case of no DOM component

    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;

    if (options.target) {
      if (options.hydrate) {
        var nodes = children(options.target); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion

        $$.fragment && $$.fragment.l(nodes);
        nodes.forEach(detach);
      } else {
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        $$.fragment && $$.fragment.c();
      }

      if (options.intro) transition_in(component.$$.fragment);
      mount_component(component, options.target, options.anchor, options.customElement);
      flush();
    }

    set_current_component(parent_component);
  }
  /**
   * Base class for Svelte components. Used when dev=false.
   */


  var SvelteComponent = /*#__PURE__*/function () {
    function SvelteComponent() {
      _classCallCheck(this, SvelteComponent);
    }

    _createClass(SvelteComponent, [{
      key: "$destroy",
      value: function $destroy() {
        destroy_component(this, 1);
        this.$destroy = noop;
      }
    }, {
      key: "$on",
      value: function $on(type, callback) {
        var callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);
        callbacks.push(callback);
        return function () {
          var index = callbacks.indexOf(callback);
          if (index !== -1) callbacks.splice(index, 1);
        };
      }
    }, {
      key: "$set",
      value: function $set($$props) {
        if (this.$$set && !is_empty($$props)) {
          this.$$.skip_bound = true;
          this.$$set($$props);
          this.$$.skip_bound = false;
        }
      }
    }]);

    return SvelteComponent;
  }();

  function dispatch_dev(type, detail) {
    document.dispatchEvent(custom_event(type, Object.assign({
      version: '3.44.2'
    }, detail), true));
  }

  function append_dev(target, node) {
    dispatch_dev('SvelteDOMInsert', {
      target: target,
      node: node
    });
    append(target, node);
  }

  function insert_dev(target, node, anchor) {
    dispatch_dev('SvelteDOMInsert', {
      target: target,
      node: node,
      anchor: anchor
    });
    insert(target, node, anchor);
  }

  function detach_dev(node) {
    dispatch_dev('SvelteDOMRemove', {
      node: node
    });
    detach(node);
  }

  function listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {
    var modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];
    if (has_prevent_default) modifiers.push('preventDefault');
    if (has_stop_propagation) modifiers.push('stopPropagation');
    dispatch_dev('SvelteDOMAddEventListener', {
      node: node,
      event: event,
      handler: handler,
      modifiers: modifiers
    });
    var dispose = listen(node, event, handler, options);
    return function () {
      dispatch_dev('SvelteDOMRemoveEventListener', {
        node: node,
        event: event,
        handler: handler,
        modifiers: modifiers
      });
      dispose();
    };
  }

  function attr_dev(node, attribute, value) {
    attr(node, attribute, value);
    if (value == null) dispatch_dev('SvelteDOMRemoveAttribute', {
      node: node,
      attribute: attribute
    });else dispatch_dev('SvelteDOMSetAttribute', {
      node: node,
      attribute: attribute,
      value: value
    });
  }

  function prop_dev(node, property, value) {
    node[property] = value;
    dispatch_dev('SvelteDOMSetProperty', {
      node: node,
      property: property,
      value: value
    });
  }

  function set_data_dev(text, data) {
    data = '' + data;
    if (text.wholeText === data) return;
    dispatch_dev('SvelteDOMSetData', {
      node: text,
      data: data
    });
    text.data = data;
  }

  function validate_each_argument(arg) {
    if (typeof arg !== 'string' && !(arg && _typeof(arg) === 'object' && 'length' in arg)) {
      var msg = '{#each} only iterates over array-like objects.';

      if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {
        msg += ' You can use a spread to convert this iterable into an array.';
      }

      throw new Error(msg);
    }
  }

  function validate_slots(name, slot, keys) {
    for (var _i5 = 0, _Object$keys = Object.keys(slot); _i5 < _Object$keys.length; _i5++) {
      var slot_key = _Object$keys[_i5];

      if (!~keys.indexOf(slot_key)) {
        console.warn("<".concat(name, "> received an unexpected slot \"").concat(slot_key, "\"."));
      }
    }
  }
  /**
   * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.
   */


  var SvelteComponentDev = /*#__PURE__*/function (_SvelteComponent) {
    _inherits(SvelteComponentDev, _SvelteComponent);

    var _super3 = _createSuper$F(SvelteComponentDev);

    function SvelteComponentDev(options) {
      _classCallCheck(this, SvelteComponentDev);

      if (!options || !options.target && !options.$$inline) {
        throw new Error("'target' is a required option");
      }

      return _super3.call(this);
    }

    _createClass(SvelteComponentDev, [{
      key: "$destroy",
      value: function $destroy() {
        _get(_getPrototypeOf(SvelteComponentDev.prototype), "$destroy", this).call(this);

        this.$destroy = function () {
          console.warn('Component was already destroyed'); // eslint-disable-line no-console
        };
      }
    }, {
      key: "$capture_state",
      value: function $capture_state() {}
    }, {
      key: "$inject_state",
      value: function $inject_state() {}
    }]);

    return SvelteComponentDev;
  }(SvelteComponent);

  function _createSuper$E(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$E(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$E() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$E = "src/material-icons/add-circle.svelte";

  function create_fragment$E(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$E, 6, 69, 189);
        attr_dev(path1, "d", "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z");
        add_location(path1, file$E, 6, 106, 226);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$E, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$E.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$E($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Add_circle', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Add_circle> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Add_circle = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Add_circle, _SvelteComponentDev);

    var _super = _createSuper$E(Add_circle);

    function Add_circle(options) {
      var _this;

      _classCallCheck(this, Add_circle);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$E, create_fragment$E, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Add_circle",
        options: options,
        id: create_fragment$E.name
      });
      return _this;
    }

    _createClass(Add_circle, [{
      key: "size",
      get: function get() {
        throw new Error("<Add_circle>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Add_circle>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Add_circle>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Add_circle>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Add_circle>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Add_circle>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Add_circle;
  }(SvelteComponentDev);

  function _createSuper$D(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$D(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$D() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$D = "src/material-icons/arrow-downward.svelte";

  function create_fragment$D(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0V0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$D, 6, 69, 189);
        attr_dev(path1, "d", "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z");
        add_location(path1, file$D, 6, 108, 228);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$D, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$D.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$D($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Arrow_downward', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Arrow_downward> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Arrow_downward = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Arrow_downward, _SvelteComponentDev);

    var _super = _createSuper$D(Arrow_downward);

    function Arrow_downward(options) {
      var _this;

      _classCallCheck(this, Arrow_downward);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$D, create_fragment$D, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Arrow_downward",
        options: options,
        id: create_fragment$D.name
      });
      return _this;
    }

    _createClass(Arrow_downward, [{
      key: "size",
      get: function get() {
        throw new Error("<Arrow_downward>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Arrow_downward>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Arrow_downward>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Arrow_downward>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Arrow_downward>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Arrow_downward>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Arrow_downward;
  }(SvelteComponentDev);

  function _createSuper$C(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$C(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$C() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$C = "src/material-icons/cancel.svelte";

  function create_fragment$C(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$C, 5, 71, 190);
        attr_dev(path1, "d", "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z");
        add_location(path1, file$C, 5, 108, 227);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$C, 5, 0, 119);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$C.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$C($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Cancel', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Cancel> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Cancel = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Cancel, _SvelteComponentDev);

    var _super = _createSuper$C(Cancel);

    function Cancel(options) {
      var _this;

      _classCallCheck(this, Cancel);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$C, create_fragment$C, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Cancel",
        options: options,
        id: create_fragment$C.name
      });
      return _this;
    }

    _createClass(Cancel, [{
      key: "size",
      get: function get() {
        throw new Error("<Cancel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Cancel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Cancel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Cancel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Cancel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Cancel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Cancel;
  }(SvelteComponentDev);

  function _createSuper$B(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$B(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$B() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$B = "src/material-icons/cancel-presentation.svelte";

  function create_fragment$B(ctx) {
    var svg;
    var path0;
    var path1;
    var path2;
    var path3;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        path2 = svg_element("path");
        path3 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$B, 5, 71, 190);
        attr_dev(path1, "d", "M21 19.1H3V5h18v14.1zM21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z");
        add_location(path1, file$B, 5, 108, 227);
        attr_dev(path2, "d", "M21 19.1H3V5h18v14.1zM21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z");
        attr_dev(path2, "fill", "none");
        add_location(path2, file$B, 5, 217, 336);
        attr_dev(path3, "d", "M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41z");
        add_location(path3, file$B, 5, 338, 457);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$B, 5, 0, 119);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
        append_dev(svg, path2);
        append_dev(svg, path3);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$B.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$B($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Cancel_presentation', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Cancel_presentation> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Cancel_presentation = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Cancel_presentation, _SvelteComponentDev);

    var _super = _createSuper$B(Cancel_presentation);

    function Cancel_presentation(options) {
      var _this;

      _classCallCheck(this, Cancel_presentation);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$B, create_fragment$B, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Cancel_presentation",
        options: options,
        id: create_fragment$B.name
      });
      return _this;
    }

    _createClass(Cancel_presentation, [{
      key: "size",
      get: function get() {
        throw new Error("<Cancel_presentation>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Cancel_presentation>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Cancel_presentation>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Cancel_presentation>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Cancel_presentation>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Cancel_presentation>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Cancel_presentation;
  }(SvelteComponentDev);

  function _createSuper$A(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$A(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$A() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$A = "src/material-icons/check-circle.svelte";

  function create_fragment$A(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$A, 5, 71, 190);
        attr_dev(path1, "d", "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z");
        add_location(path1, file$A, 5, 108, 227);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$A, 5, 0, 119);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$A.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$A($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Check_circle', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Check_circle> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Check_circle = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Check_circle, _SvelteComponentDev);

    var _super = _createSuper$A(Check_circle);

    function Check_circle(options) {
      var _this;

      _classCallCheck(this, Check_circle);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$A, create_fragment$A, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Check_circle",
        options: options,
        id: create_fragment$A.name
      });
      return _this;
    }

    _createClass(Check_circle, [{
      key: "size",
      get: function get() {
        throw new Error("<Check_circle>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Check_circle>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Check_circle>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Check_circle>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Check_circle>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Check_circle>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Check_circle;
  }(SvelteComponentDev);

  function _createSuper$z(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$z(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$z() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$z = "src/material-icons/close.svelte";

  function create_fragment$z(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$z, 5, 71, 190);
        attr_dev(path1, "d", "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z");
        add_location(path1, file$z, 5, 108, 227);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$z, 5, 0, 119);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$z.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$z($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Close', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Close> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Close = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Close, _SvelteComponentDev);

    var _super = _createSuper$z(Close);

    function Close(options) {
      var _this;

      _classCallCheck(this, Close);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$z, create_fragment$z, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Close",
        options: options,
        id: create_fragment$z.name
      });
      return _this;
    }

    _createClass(Close, [{
      key: "size",
      get: function get() {
        throw new Error("<Close>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Close>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Close>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Close>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Close>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Close>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Close;
  }(SvelteComponentDev);

  function _createSuper$y(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$y(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$y() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$y = "src/material-icons/content-copy.svelte";

  function create_fragment$y(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$y, 5, 71, 190);
        attr_dev(path1, "d", "M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z");
        add_location(path1, file$y, 5, 108, 227);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$y, 5, 0, 119);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$y.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$y($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Content_copy', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Content_copy> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Content_copy = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Content_copy, _SvelteComponentDev);

    var _super = _createSuper$y(Content_copy);

    function Content_copy(options) {
      var _this;

      _classCallCheck(this, Content_copy);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$y, create_fragment$y, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Content_copy",
        options: options,
        id: create_fragment$y.name
      });
      return _this;
    }

    _createClass(Content_copy, [{
      key: "size",
      get: function get() {
        throw new Error("<Content_copy>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Content_copy>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Content_copy>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Content_copy>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Content_copy>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Content_copy>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Content_copy;
  }(SvelteComponentDev);

  function _createSuper$x(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$x(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$x() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$x = "src/material-icons/double-arrow.svelte";

  function create_fragment$x(ctx) {
    var svg;
    var g0;
    var rect;
    var g2;
    var g1;
    var polygon0;
    var polygon1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        g0 = svg_element("g");
        rect = svg_element("rect");
        g2 = svg_element("g");
        g1 = svg_element("g");
        polygon0 = svg_element("polygon");
        polygon1 = svg_element("polygon");
        attr_dev(rect, "fill", "none");
        attr_dev(rect, "height", "24");
        attr_dev(rect, "width", "24");
        add_location(rect, file$x, 6, 72, 192);
        add_location(g0, file$x, 6, 69, 189);
        attr_dev(polygon0, "points", "15.5,5 11,5 16,12 11,19 15.5,19 20.5,12");
        add_location(polygon0, file$x, 6, 124, 244);
        attr_dev(polygon1, "points", "8.5,5 4,5 9,12 4,19 8.5,19 13.5,12");
        add_location(polygon1, file$x, 6, 183, 303);
        add_location(g1, file$x, 6, 121, 241);
        add_location(g2, file$x, 6, 118, 238);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$x, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, g0);
        append_dev(g0, rect);
        append_dev(svg, g2);
        append_dev(g2, g1);
        append_dev(g1, polygon0);
        append_dev(g1, polygon1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$x.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$x($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Double_arrow', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Double_arrow> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Double_arrow = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Double_arrow, _SvelteComponentDev);

    var _super = _createSuper$x(Double_arrow);

    function Double_arrow(options) {
      var _this;

      _classCallCheck(this, Double_arrow);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$x, create_fragment$x, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Double_arrow",
        options: options,
        id: create_fragment$x.name
      });
      return _this;
    }

    _createClass(Double_arrow, [{
      key: "size",
      get: function get() {
        throw new Error("<Double_arrow>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Double_arrow>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Double_arrow>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Double_arrow>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Double_arrow>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Double_arrow>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Double_arrow;
  }(SvelteComponentDev);

  function _createSuper$w(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$w(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$w() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$w = "src/material-icons/edit.svelte";

  function create_fragment$w(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$w, 6, 71, 191);
        attr_dev(path1, "d", "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z");
        add_location(path1, file$w, 6, 108, 228);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$w, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$w.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$w($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Edit', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Edit> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Edit = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Edit, _SvelteComponentDev);

    var _super = _createSuper$w(Edit);

    function Edit(options) {
      var _this;

      _classCallCheck(this, Edit);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$w, create_fragment$w, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Edit",
        options: options,
        id: create_fragment$w.name
      });
      return _this;
    }

    _createClass(Edit, [{
      key: "size",
      get: function get() {
        throw new Error("<Edit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Edit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Edit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Edit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Edit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Edit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Edit;
  }(SvelteComponentDev);

  function _createSuper$v(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$v(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$v() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$v = "src/material-icons/file-text.svelte";

  function create_fragment$v(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M5 4a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1H5zm-.5 2.5A.5.5 0 0 1 5 6h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5zM5 8a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1H5zm0 2a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1H5z");
        add_location(path0, file$v, 7, 2, 192);
        attr_dev(path1, "d", "M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2zm10-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1z");
        add_location(path1, file$v, 8, 2, 384);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$v, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$v.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$v($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('File_text', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<File_text> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var File_text = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(File_text, _SvelteComponentDev);

    var _super = _createSuper$v(File_text);

    function File_text(options) {
      var _this;

      _classCallCheck(this, File_text);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$v, create_fragment$v, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "File_text",
        options: options,
        id: create_fragment$v.name
      });
      return _this;
    }

    _createClass(File_text, [{
      key: "size",
      get: function get() {
        throw new Error("<File_text>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<File_text>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<File_text>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<File_text>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<File_text>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<File_text>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return File_text;
  }(SvelteComponentDev);

  function _createSuper$u(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$u(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$u() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$u = "src/material-icons/folder.svelte";

  function create_fragment$u(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$u, 6, 69, 189);
        attr_dev(path1, "d", "M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z");
        add_location(path1, file$u, 6, 106, 226);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$u, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$u.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$u($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Folder', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Folder> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Folder = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Folder, _SvelteComponentDev);

    var _super = _createSuper$u(Folder);

    function Folder(options) {
      var _this;

      _classCallCheck(this, Folder);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$u, create_fragment$u, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Folder",
        options: options,
        id: create_fragment$u.name
      });
      return _this;
    }

    _createClass(Folder, [{
      key: "size",
      get: function get() {
        throw new Error("<Folder>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Folder>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Folder>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Folder>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Folder>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Folder>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Folder;
  }(SvelteComponentDev);

  function _createSuper$t(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$t(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$t() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$t = "src/material-icons/folder-open.svelte";

  function create_fragment$t(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$t, 6, 69, 189);
        attr_dev(path1, "d", "M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z");
        add_location(path1, file$t, 6, 106, 226);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$t, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$t.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$t($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Folder_open', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Folder_open> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Folder_open = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Folder_open, _SvelteComponentDev);

    var _super = _createSuper$t(Folder_open);

    function Folder_open(options) {
      var _this;

      _classCallCheck(this, Folder_open);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$t, create_fragment$t, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Folder_open",
        options: options,
        id: create_fragment$t.name
      });
      return _this;
    }

    _createClass(Folder_open, [{
      key: "size",
      get: function get() {
        throw new Error("<Folder_open>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Folder_open>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Folder_open>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Folder_open>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Folder_open>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Folder_open>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Folder_open;
  }(SvelteComponentDev);

  function _createSuper$s(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$s(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$s() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$s = "src/material-icons/help.svelte";

  function create_fragment$s(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$s, 6, 69, 189);
        attr_dev(path1, "d", "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z");
        add_location(path1, file$s, 6, 106, 226);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$s, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$s.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$s($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Help', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Help> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Help = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Help, _SvelteComponentDev);

    var _super = _createSuper$s(Help);

    function Help(options) {
      var _this;

      _classCallCheck(this, Help);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$s, create_fragment$s, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Help",
        options: options,
        id: create_fragment$s.name
      });
      return _this;
    }

    _createClass(Help, [{
      key: "size",
      get: function get() {
        throw new Error("<Help>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Help>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Help>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Help>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Help>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Help>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Help;
  }(SvelteComponentDev);

  function _createSuper$r(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$r(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$r() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$r = "src/material-icons/home.svelte";

  function create_fragment$r(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$r, 6, 69, 189);
        attr_dev(path1, "d", "M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z");
        add_location(path1, file$r, 6, 106, 226);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$r, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$r.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$r($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Home', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Home> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Home$1 = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Home, _SvelteComponentDev);

    var _super = _createSuper$r(Home);

    function Home(options) {
      var _this;

      _classCallCheck(this, Home);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$r, create_fragment$r, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Home",
        options: options,
        id: create_fragment$r.name
      });
      return _this;
    }

    _createClass(Home, [{
      key: "size",
      get: function get() {
        throw new Error("<Home>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Home>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Home>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Home>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Home>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Home>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Home;
  }(SvelteComponentDev);

  function _createSuper$q(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$q(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$q() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$q = "src/material-icons/info.svelte";

  function create_fragment$q(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$q, 6, 69, 189);
        attr_dev(path1, "d", "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z");
        add_location(path1, file$q, 6, 106, 226);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$q, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$q.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$q($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Info', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Info> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Info = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Info, _SvelteComponentDev);

    var _super = _createSuper$q(Info);

    function Info(options) {
      var _this;

      _classCallCheck(this, Info);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$q, create_fragment$q, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Info",
        options: options,
        id: create_fragment$q.name
      });
      return _this;
    }

    _createClass(Info, [{
      key: "size",
      get: function get() {
        throw new Error("<Info>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Info>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Info>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Info>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Info>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Info>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Info;
  }(SvelteComponentDev);

  function _createSuper$p(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$p(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$p() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$p = "src/material-icons/keyboard-arrow-up.svelte";

  function create_fragment$p(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$p, 6, 69, 189);
        attr_dev(path1, "d", "M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z");
        add_location(path1, file$p, 6, 106, 226);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$p, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$p.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$p($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Keyboard_arrow_up', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Keyboard_arrow_up> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Keyboard_arrow_up = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Keyboard_arrow_up, _SvelteComponentDev);

    var _super = _createSuper$p(Keyboard_arrow_up);

    function Keyboard_arrow_up(options) {
      var _this;

      _classCallCheck(this, Keyboard_arrow_up);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$p, create_fragment$p, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Keyboard_arrow_up",
        options: options,
        id: create_fragment$p.name
      });
      return _this;
    }

    _createClass(Keyboard_arrow_up, [{
      key: "size",
      get: function get() {
        throw new Error("<Keyboard_arrow_up>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Keyboard_arrow_up>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Keyboard_arrow_up>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Keyboard_arrow_up>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Keyboard_arrow_up>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Keyboard_arrow_up>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Keyboard_arrow_up;
  }(SvelteComponentDev);

  function _createSuper$o(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$o(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$o() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$o = "src/material-icons/mail-outline.svelte";

  function create_fragment$o(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$o, 6, 69, 189);
        attr_dev(path1, "d", "M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z");
        add_location(path1, file$o, 6, 106, 226);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$o, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$o.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$o($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Mail_outline', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Mail_outline> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Mail_outline = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Mail_outline, _SvelteComponentDev);

    var _super = _createSuper$o(Mail_outline);

    function Mail_outline(options) {
      var _this;

      _classCallCheck(this, Mail_outline);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$o, create_fragment$o, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Mail_outline",
        options: options,
        id: create_fragment$o.name
      });
      return _this;
    }

    _createClass(Mail_outline, [{
      key: "size",
      get: function get() {
        throw new Error("<Mail_outline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Mail_outline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Mail_outline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Mail_outline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Mail_outline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Mail_outline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Mail_outline;
  }(SvelteComponentDev);

  function _createSuper$n(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$n(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$n() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$n = "src/material-icons/menu.svelte";

  function create_fragment$n(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$n, 6, 69, 189);
        attr_dev(path1, "d", "M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z");
        add_location(path1, file$n, 6, 106, 226);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$n, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$n.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$n($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Menu', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Menu> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Menu = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Menu, _SvelteComponentDev);

    var _super = _createSuper$n(Menu);

    function Menu(options) {
      var _this;

      _classCallCheck(this, Menu);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$n, create_fragment$n, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Menu",
        options: options,
        id: create_fragment$n.name
      });
      return _this;
    }

    _createClass(Menu, [{
      key: "size",
      get: function get() {
        throw new Error("<Menu>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Menu>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Menu>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Menu>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Menu>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Menu>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Menu;
  }(SvelteComponentDev);

  function _createSuper$m(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$m(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$m() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$m = "src/material-icons/more-vert.svelte";

  function create_fragment$m(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$m, 6, 69, 189);
        attr_dev(path1, "d", "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z");
        add_location(path1, file$m, 6, 106, 226);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$m, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$m.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$m($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('More_vert', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<More_vert> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var More_vert = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(More_vert, _SvelteComponentDev);

    var _super = _createSuper$m(More_vert);

    function More_vert(options) {
      var _this;

      _classCallCheck(this, More_vert);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$m, create_fragment$m, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "More_vert",
        options: options,
        id: create_fragment$m.name
      });
      return _this;
    }

    _createClass(More_vert, [{
      key: "size",
      get: function get() {
        throw new Error("<More_vert>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<More_vert>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<More_vert>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<More_vert>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<More_vert>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<More_vert>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return More_vert;
  }(SvelteComponentDev);

  function _createSuper$l(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$l(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$l() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$l = "src/material-icons/open-in-new.svelte";

  function create_fragment$l(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$l, 6, 69, 189);
        attr_dev(path1, "d", "M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z");
        add_location(path1, file$l, 6, 106, 226);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$l, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$l.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$l($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Open_in_new', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Open_in_new> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Open_in_new = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Open_in_new, _SvelteComponentDev);

    var _super = _createSuper$l(Open_in_new);

    function Open_in_new(options) {
      var _this;

      _classCallCheck(this, Open_in_new);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$l, create_fragment$l, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Open_in_new",
        options: options,
        id: create_fragment$l.name
      });
      return _this;
    }

    _createClass(Open_in_new, [{
      key: "size",
      get: function get() {
        throw new Error("<Open_in_new>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Open_in_new>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Open_in_new>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Open_in_new>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Open_in_new>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Open_in_new>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Open_in_new;
  }(SvelteComponentDev);

  function _createSuper$k(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$k(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$k() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$k = "src/material-icons/play-circle-filled.svelte";

  function create_fragment$k(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$k, 6, 69, 189);
        attr_dev(path1, "d", "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z");
        add_location(path1, file$k, 6, 106, 226);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$k, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$k.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$k($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Play_circle_filled', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Play_circle_filled> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Play_circle_filled = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Play_circle_filled, _SvelteComponentDev);

    var _super = _createSuper$k(Play_circle_filled);

    function Play_circle_filled(options) {
      var _this;

      _classCallCheck(this, Play_circle_filled);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$k, create_fragment$k, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Play_circle_filled",
        options: options,
        id: create_fragment$k.name
      });
      return _this;
    }

    _createClass(Play_circle_filled, [{
      key: "size",
      get: function get() {
        throw new Error("<Play_circle_filled>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Play_circle_filled>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Play_circle_filled>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Play_circle_filled>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Play_circle_filled>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Play_circle_filled>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Play_circle_filled;
  }(SvelteComponentDev);

  function _createSuper$j(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$j(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$j() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$j = "src/material-icons/remove-circle.svelte";

  function create_fragment$j(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$j, 6, 69, 189);
        attr_dev(path1, "d", "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z");
        add_location(path1, file$j, 6, 106, 226);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$j, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$j.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$j($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Remove_circle', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Remove_circle> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Remove_circle = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Remove_circle, _SvelteComponentDev);

    var _super = _createSuper$j(Remove_circle);

    function Remove_circle(options) {
      var _this;

      _classCallCheck(this, Remove_circle);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$j, create_fragment$j, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Remove_circle",
        options: options,
        id: create_fragment$j.name
      });
      return _this;
    }

    _createClass(Remove_circle, [{
      key: "size",
      get: function get() {
        throw new Error("<Remove_circle>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Remove_circle>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Remove_circle>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Remove_circle>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Remove_circle>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Remove_circle>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Remove_circle;
  }(SvelteComponentDev);

  function _createSuper$i(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$i(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$i() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$i = "src/material-icons/reply.svelte";

  function create_fragment$i(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$i, 6, 69, 189);
        attr_dev(path1, "d", "M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z");
        add_location(path1, file$i, 6, 106, 226);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$i, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$i.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$i($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Reply', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Reply> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Reply = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Reply, _SvelteComponentDev);

    var _super = _createSuper$i(Reply);

    function Reply(options) {
      var _this;

      _classCallCheck(this, Reply);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$i, create_fragment$i, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Reply",
        options: options,
        id: create_fragment$i.name
      });
      return _this;
    }

    _createClass(Reply, [{
      key: "size",
      get: function get() {
        throw new Error("<Reply>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Reply>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Reply>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Reply>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Reply>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Reply>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Reply;
  }(SvelteComponentDev);

  function _createSuper$h(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$h(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$h() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$h = "src/material-icons/settings.svelte";

  function create_fragment$h(ctx) {
    var svg;
    var g;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        g = svg_element("g");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0,0h24v24H0V0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$h, 6, 72, 192);
        attr_dev(path1, "d", "M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z");
        add_location(path1, file$h, 6, 111, 231);
        add_location(g, file$h, 6, 69, 189);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$h, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, g);
        append_dev(g, path0);
        append_dev(g, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$h.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$h($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Settings', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Settings> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Settings = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Settings, _SvelteComponentDev);

    var _super = _createSuper$h(Settings);

    function Settings(options) {
      var _this;

      _classCallCheck(this, Settings);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$h, create_fragment$h, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Settings",
        options: options,
        id: create_fragment$h.name
      });
      return _this;
    }

    _createClass(Settings, [{
      key: "size",
      get: function get() {
        throw new Error("<Settings>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Settings>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Settings>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Settings>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Settings>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Settings>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Settings;
  }(SvelteComponentDev);

  function _createSuper$g(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$g(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$g() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$g = "src/material-icons/shopping-basket.svelte";

  function create_fragment$g(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$g, 6, 69, 189);
        attr_dev(path1, "d", "M17.21 9l-4.38-6.56c-.19-.28-.51-.42-.83-.42-.32 0-.64.14-.83.43L6.79 9H2c-.55 0-1 .45-1 1 0 .09.01.18.04.27l2.54 9.27c.23.84 1 1.46 1.92 1.46h13c.92 0 1.69-.62 1.93-1.46l2.54-9.27L23 10c0-.55-.45-1-1-1h-4.79zM9 9l3-4.4L15 9H9zm3 8c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z");
        add_location(path1, file$g, 6, 106, 226);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$g, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$g.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$g($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Shopping_basket', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Shopping_basket> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Shopping_basket = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Shopping_basket, _SvelteComponentDev);

    var _super = _createSuper$g(Shopping_basket);

    function Shopping_basket(options) {
      var _this;

      _classCallCheck(this, Shopping_basket);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$g, create_fragment$g, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Shopping_basket",
        options: options,
        id: create_fragment$g.name
      });
      return _this;
    }

    _createClass(Shopping_basket, [{
      key: "size",
      get: function get() {
        throw new Error("<Shopping_basket>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Shopping_basket>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Shopping_basket>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Shopping_basket>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Shopping_basket>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Shopping_basket>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Shopping_basket;
  }(SvelteComponentDev);

  function _createSuper$f(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$f(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$f() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$f = "src/material-icons/shopping-cart.svelte";

  function create_fragment$f(ctx) {
    var svg;
    var path0;
    var path1;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path0 = svg_element("path");
        path1 = svg_element("path");
        attr_dev(path0, "d", "M0 0h24v24H0z");
        attr_dev(path0, "fill", "none");
        add_location(path0, file$f, 6, 69, 189);
        attr_dev(path1, "d", "M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z");
        add_location(path1, file$f, 6, 106, 226);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$f, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path0);
        append_dev(svg, path1);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$f.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$f($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Shopping_cart', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Shopping_cart> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Shopping_cart = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Shopping_cart, _SvelteComponentDev);

    var _super = _createSuper$f(Shopping_cart);

    function Shopping_cart(options) {
      var _this;

      _classCallCheck(this, Shopping_cart);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$f, create_fragment$f, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Shopping_cart",
        options: options,
        id: create_fragment$f.name
      });
      return _this;
    }

    _createClass(Shopping_cart, [{
      key: "size",
      get: function get() {
        throw new Error("<Shopping_cart>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Shopping_cart>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Shopping_cart>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Shopping_cart>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Shopping_cart>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Shopping_cart>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Shopping_cart;
  }(SvelteComponentDev);

  function _createSuper$e(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$e(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$e() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$e = "src/material-icons/spinner.svelte";

  function create_fragment$e(ctx) {
    var svg;
    var g;
    var path;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        g = svg_element("g");
        path = svg_element("path");
        attr_dev(path, "d", "M15.1,19.37l1,1.74c-0.96,0.44-2.01,0.73-3.1,0.84v-2.02C13.74,19.84,14.44,19.65,15.1,19.37z M4.07,13H2.05 c0.11,1.1,0.4,2.14,0.84,3.1l1.74-1C4.35,14.44,4.16,13.74,4.07,13z M15.1,4.63l1-1.74C15.14,2.45,14.1,2.16,13,2.05v2.02 C13.74,4.16,14.44,4.35,15.1,4.63z M19.93,11h2.02c-0.11-1.1-0.4-2.14-0.84-3.1l-1.74,1C19.65,9.56,19.84,10.26,19.93,11z M8.9,19.37l-1,1.74c0.96,0.44,2.01,0.73,3.1,0.84v-2.02C10.26,19.84,9.56,19.65,8.9,19.37z M11,4.07V2.05 c-1.1,0.11-2.14,0.4-3.1,0.84l1,1.74C9.56,4.35,10.26,4.16,11,4.07z M18.36,7.17l1.74-1.01c-0.63-0.87-1.4-1.64-2.27-2.27 l-1.01,1.74C17.41,6.08,17.92,6.59,18.36,7.17z M4.63,8.9l-1.74-1C2.45,8.86,2.16,9.9,2.05,11h2.02C4.16,10.26,4.35,9.56,4.63,8.9z M19.93,13c-0.09,0.74-0.28,1.44-0.56,2.1l1.74,1c0.44-0.96,0.73-2.01,0.84-3.1H19.93z M16.83,18.36l1.01,1.74 c0.87-0.63,1.64-1.4,2.27-2.27l-1.74-1.01C17.92,17.41,17.41,17.92,16.83,18.36z M7.17,5.64L6.17,3.89 C5.29,4.53,4.53,5.29,3.9,6.17l1.74,1.01C6.08,6.59,6.59,6.08,7.17,5.64z M5.64,16.83L3.9,17.83c0.63,0.87,1.4,1.64,2.27,2.27 l1.01-1.74C6.59,17.92,6.08,17.41,5.64,16.83z M13");
        add_location(path, file$e, 6, 72, 192);
        add_location(g, file$e, 6, 69, 189);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$e, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, g);
        append_dev(g, path);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$e.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$e($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Spinner', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Spinner> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var Spinner = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Spinner, _SvelteComponentDev);

    var _super = _createSuper$e(Spinner);

    function Spinner(options) {
      var _this;

      _classCallCheck(this, Spinner);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$e, create_fragment$e, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Spinner",
        options: options,
        id: create_fragment$e.name
      });
      return _this;
    }

    _createClass(Spinner, [{
      key: "size",
      get: function get() {
        throw new Error("<Spinner>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Spinner>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<Spinner>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Spinner>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<Spinner>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Spinner>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Spinner;
  }(SvelteComponentDev);

  function _createSuper$d(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$d(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$d() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$d = "src/material-icons/x-circle-fill.svelte";

  function create_fragment$d(ctx) {
    var svg;
    var path;
    var block = {
      c: function create() {
        svg = svg_element("svg");
        path = svg_element("path");
        attr_dev(path, "d", "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z");
        add_location(path, file$d, 6, 71, 191);
        attr_dev(svg, "fill",
        /*color*/
        ctx[1]);
        attr_dev(svg, "width",
        /*size*/
        ctx[0]);
        attr_dev(svg, "height",
        /*size*/
        ctx[0]);
        attr_dev(svg, "viewBox",
        /*viewBox*/
        ctx[2]);
        add_location(svg, file$d, 6, 0, 120);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, svg, anchor);
        append_dev(svg, path);
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*color*/
        2) {
          attr_dev(svg, "fill",
          /*color*/
          ctx[1]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "width",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*size*/
        1) {
          attr_dev(svg, "height",
          /*size*/
          ctx[0]);
        }

        if (dirty &
        /*viewBox*/
        4) {
          attr_dev(svg, "viewBox",
          /*viewBox*/
          ctx[2]);
        }
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(svg);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$d.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$d($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('X_circle_fill', slots, []);
    var _$$props$size = $$props.size,
        size = _$$props$size === void 0 ? "1em" : _$$props$size;
    var _$$props$color = $$props.color,
        color = _$$props$color === void 0 ? "currentColor" : _$$props$color;
    var _$$props$viewBox = $$props.viewBox,
        viewBox = _$$props$viewBox === void 0 ? "0 0 24 24" : _$$props$viewBox;
    var writable_props = ['size', 'color', 'viewBox'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<X_circle_fill> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    $$self.$capture_state = function () {
      return {
        size: size,
        color: color,
        viewBox: viewBox
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('size' in $$props) $$invalidate(0, size = $$props.size);
      if ('color' in $$props) $$invalidate(1, color = $$props.color);
      if ('viewBox' in $$props) $$invalidate(2, viewBox = $$props.viewBox);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [size, color, viewBox];
  }

  var X_circle_fill = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(X_circle_fill, _SvelteComponentDev);

    var _super = _createSuper$d(X_circle_fill);

    function X_circle_fill(options) {
      var _this;

      _classCallCheck(this, X_circle_fill);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$d, create_fragment$d, safe_not_equal, {
        size: 0,
        color: 1,
        viewBox: 2
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "X_circle_fill",
        options: options,
        id: create_fragment$d.name
      });
      return _this;
    }

    _createClass(X_circle_fill, [{
      key: "size",
      get: function get() {
        throw new Error("<X_circle_fill>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<X_circle_fill>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "color",
      get: function get() {
        throw new Error("<X_circle_fill>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<X_circle_fill>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "viewBox",
      get: function get() {
        throw new Error("<X_circle_fill>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<X_circle_fill>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return X_circle_fill;
  }(SvelteComponentDev);

  function _createForOfIteratorHelper$1(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray$1(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$1(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen); }

  function _arrayLikeToArray$1(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
  var subscriber_queue = [];
  /**
   * Create a `Writable` store that allows both updating and reading by subscription.
   * @param {*=}value initial value
   * @param {StartStopNotifier=}start start and stop notifications for subscriptions
   */


  function writable(value) {
    var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;
    var stop;
    var subscribers = new Set();

    function set(new_value) {
      if (safe_not_equal(value, new_value)) {
        value = new_value;

        if (stop) {
          // store is ready
          var run_queue = !subscriber_queue.length;

          var _iterator = _createForOfIteratorHelper$1(subscribers),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var subscriber = _step.value;
              subscriber[1]();
              subscriber_queue.push(subscriber, value);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }

          if (run_queue) {
            for (var i = 0; i < subscriber_queue.length; i += 2) {
              subscriber_queue[i][0](subscriber_queue[i + 1]);
            }

            subscriber_queue.length = 0;
          }
        }
      }
    }

    function update(fn) {
      set(fn(value));
    }

    function subscribe(run) {
      var invalidate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;
      var subscriber = [run, invalidate];
      subscribers.add(subscriber);

      if (subscribers.size === 1) {
        stop = start(set) || noop;
      }

      run(value);
      return function () {
        subscribers.delete(subscriber);

        if (subscribers.size === 0) {
          stop();
          stop = null;
        }
      };
    }

    return {
      set: set,
      update: update,
      subscribe: subscribe
    };
  }

  var pageNum = writable(1);
  var version = writable('0.1.0');

  function cubicOut(t) {
    var f = t - 1.0;
    return f * f * f + 1.0;
  }

  function quintOut(t) {
    return --t * t * t * t * t + 1;
  }

  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */

  function __rest(s, e) {
    var t = {};

    for (var p in s) {
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    }

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
  }

  function fade(node) {
    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref2$delay = _ref2.delay,
        delay = _ref2$delay === void 0 ? 0 : _ref2$delay,
        _ref2$duration = _ref2.duration,
        duration = _ref2$duration === void 0 ? 400 : _ref2$duration,
        _ref2$easing = _ref2.easing,
        easing = _ref2$easing === void 0 ? identity : _ref2$easing;

    var o = +getComputedStyle(node).opacity;
    return {
      delay: delay,
      duration: duration,
      easing: easing,
      css: function css(t) {
        return "opacity: ".concat(t * o);
      }
    };
  }

  function fly(node) {
    var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref3$delay = _ref3.delay,
        delay = _ref3$delay === void 0 ? 0 : _ref3$delay,
        _ref3$duration = _ref3.duration,
        duration = _ref3$duration === void 0 ? 400 : _ref3$duration,
        _ref3$easing = _ref3.easing,
        easing = _ref3$easing === void 0 ? cubicOut : _ref3$easing,
        _ref3$x = _ref3.x,
        x = _ref3$x === void 0 ? 0 : _ref3$x,
        _ref3$y = _ref3.y,
        y = _ref3$y === void 0 ? 0 : _ref3$y,
        _ref3$opacity = _ref3.opacity,
        opacity = _ref3$opacity === void 0 ? 0 : _ref3$opacity;

    var style = getComputedStyle(node);
    var target_opacity = +style.opacity;
    var transform = style.transform === 'none' ? '' : style.transform;
    var od = target_opacity * (1 - opacity);
    return {
      delay: delay,
      duration: duration,
      easing: easing,
      css: function css(t, u) {
        return "\n\t\t\ttransform: ".concat(transform, " translate(").concat((1 - t) * x, "px, ").concat((1 - t) * y, "px);\n\t\t\topacity: ").concat(target_opacity - od * u);
      }
    };
  }

  function crossfade(_a) {
    var fallback = _a.fallback,
        defaults = __rest(_a, ["fallback"]);

    var to_receive = new Map();
    var to_send = new Map();

    function crossfade(from, node, params) {
      var _assign = assign(assign({}, defaults), params),
          _assign$delay = _assign.delay,
          delay = _assign$delay === void 0 ? 0 : _assign$delay,
          _assign$duration = _assign.duration,
          duration = _assign$duration === void 0 ? function (d) {
        return Math.sqrt(d) * 30;
      } : _assign$duration,
          _assign$easing = _assign.easing,
          easing = _assign$easing === void 0 ? cubicOut : _assign$easing;

      var to = node.getBoundingClientRect();
      var dx = from.left - to.left;
      var dy = from.top - to.top;
      var dw = from.width / to.width;
      var dh = from.height / to.height;
      var d = Math.sqrt(dx * dx + dy * dy);
      var style = getComputedStyle(node);
      var transform = style.transform === 'none' ? '' : style.transform;
      var opacity = +style.opacity;
      return {
        delay: delay,
        duration: is_function(duration) ? duration(d) : duration,
        easing: easing,
        css: function css(t, u) {
          return "\n\t\t\t\topacity: ".concat(t * opacity, ";\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ").concat(transform, " translate(").concat(u * dx, "px,").concat(u * dy, "px) scale(").concat(t + (1 - t) * dw, ", ").concat(t + (1 - t) * dh, ");\n\t\t\t");
        }
      };
    }

    function transition(items, counterparts, intro) {
      return function (node, params) {
        items.set(params.key, {
          rect: node.getBoundingClientRect()
        });
        return function () {
          if (counterparts.has(params.key)) {
            var _counterparts$get = counterparts.get(params.key),
                rect = _counterparts$get.rect;

            counterparts.delete(params.key);
            return crossfade(rect, node, params);
          } // if the node is disappearing altogether
          // (i.e. wasn't claimed by the other list)
          // then we need to supply an outro


          items.delete(params.key);
          return fallback && fallback(node, params, intro);
        };
      };
    }

    return [transition(to_send, to_receive, false), transition(to_receive, to_send, true)];
  }

  function _createSuper$c(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$c(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$c() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$c = "src/components/SideHelp.svelte";

  function get_each_context$5(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[4] = list[i];
    child_ctx[6] = i;
    return child_ctx;
  }

  function get_each_context_1$5(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[4] = list[i];
    child_ctx[6] = i;
    return child_ctx;
  }

  function get_each_context_2$4(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[4] = list[i];
    child_ctx[6] = i;
    return child_ctx;
  } // (15:9) {#each msgItems1 as item, i}


  function create_each_block_2$4(ctx) {
    var li;
    var span;
    var raw_value = "&#93".concat(
    /*i*/
    ctx[6] + 12, ";") + "";
    var t0;
    var t1_value =
    /*item*/
    ctx[4] + "";
    var t1;
    var block = {
      c: function create() {
        li = element("li");
        span = element("span");
        t0 = space();
        t1 = text(t1_value);
        attr_dev(span, "class", "red");
        add_location(span, file$c, 15, 16, 434);
        add_location(li, file$c, 15, 12, 430);
      },
      m: function mount(target, anchor) {
        insert_dev(target, li, anchor);
        append_dev(li, span);
        span.innerHTML = raw_value;
        append_dev(li, t0);
        append_dev(li, t1);
      },
      p: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(li);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block_2$4.name,
      type: "each",
      source: "(15:9) {#each msgItems1 as item, i}",
      ctx: ctx
    });
    return block;
  } // (55:12) {#each msgItems2 as item, i}


  function create_each_block_1$5(ctx) {
    var li;
    var span;
    var raw0_value = "&#931".concat(
    /*i*/
    ctx[6] + 2, ";") + "";
    var t0;
    var html_tag;
    var raw1_value =
    /*item*/
    ctx[4] + "";
    var t1;
    var block = {
      c: function create() {
        li = element("li");
        span = element("span");
        t0 = space();
        html_tag = new HtmlTag();
        t1 = space();
        attr_dev(span, "class", "green");
        add_location(span, file$c, 56, 18, 1555);
        html_tag.a = t1;
        add_location(li, file$c, 55, 15, 1532);
      },
      m: function mount(target, anchor) {
        insert_dev(target, li, anchor);
        append_dev(li, span);
        span.innerHTML = raw0_value;
        append_dev(li, t0);
        html_tag.m(raw1_value, li);
        append_dev(li, t1);
      },
      p: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(li);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block_1$5.name,
      type: "each",
      source: "(55:12) {#each msgItems2 as item, i}",
      ctx: ctx
    });
    return block;
  } // (70:12) {#each msgItems3 as item, i}


  function create_each_block$5(ctx) {
    var li;
    var span;
    var raw0_value = "&#931".concat(
    /*i*/
    ctx[6] + 2, ";") + "";
    var t;
    var html_tag;
    var raw1_value =
    /*item*/
    ctx[4] + "";
    var block = {
      c: function create() {
        li = element("li");
        span = element("span");
        t = space();
        html_tag = new HtmlTag();
        attr_dev(span, "class", "green");
        add_location(span, file$c, 70, 19, 1973);
        html_tag.a = null;
        add_location(li, file$c, 70, 15, 1969);
      },
      m: function mount(target, anchor) {
        insert_dev(target, li, anchor);
        append_dev(li, span);
        span.innerHTML = raw0_value;
        append_dev(li, t);
        html_tag.m(raw1_value, li);
      },
      p: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(li);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block$5.name,
      type: "each",
      source: "(70:12) {#each msgItems3 as item, i}",
      ctx: ctx
    });
    return block;
  }

  function create_fragment$c(ctx) {
    var div5;
    var div4;
    var h1;
    var t1;
    var h30;
    var span0;
    var t3;
    var t4;
    var img0;
    var img0_src_value;
    var t5;
    var ul;
    var t6;
    var div0;
    var t8;
    var br0;
    var t9;
    var h31;
    var span1;
    var t11;
    var t12;
    var div1;
    var span2;
    var shoppingcart;
    var t13;
    var t14;
    var img1;
    var img1_src_value;
    var t15;
    var div2;
    var t17;
    var br1;
    var t18;
    var h32;
    var span3;
    var t20;
    var t21;
    var img2;
    var img2_src_value;
    var t22;
    var ol0;
    var t23;
    var img3;
    var img3_src_value;
    var t24;
    var ol1;
    var t25;
    var br2;
    var t26;
    var div3;
    var span4;
    var xcirclefill;
    var t27;
    var br3;
    var current;
    var mounted;
    var dispose;
    var each_value_2 =
    /*msgItems1*/
    ctx[0];
    validate_each_argument(each_value_2);
    var each_blocks_2 = [];

    for (var i = 0; i < each_value_2.length; i += 1) {
      each_blocks_2[i] = create_each_block_2$4(get_each_context_2$4(ctx, each_value_2, i));
    }

    shoppingcart = new Shopping_cart({
      props: {
        size: "1.4em"
      },
      $$inline: true
    });
    var each_value_1 =
    /*msgItems2*/
    ctx[1];
    validate_each_argument(each_value_1);
    var each_blocks_1 = [];

    for (var _i = 0; _i < each_value_1.length; _i += 1) {
      each_blocks_1[_i] = create_each_block_1$5(get_each_context_1$5(ctx, each_value_1, _i));
    }

    var each_value =
    /*msgItems3*/
    ctx[2];
    validate_each_argument(each_value);
    var each_blocks = [];

    for (var _i2 = 0; _i2 < each_value.length; _i2 += 1) {
      each_blocks[_i2] = create_each_block$5(get_each_context$5(ctx, each_value, _i2));
    }

    xcirclefill = new X_circle_fill({
      props: {
        color: "red",
        size: "4em"
      },
      $$inline: true
    });
    var block = {
      c: function create() {
        div5 = element("div");
        div4 = element("div");
        h1 = element("h1");
        h1.textContent = "注文方法";
        t1 = space();
        h30 = element("h3");
        span0 = element("span");
        span0.textContent = "●";
        t3 = text(" 商品の選択");
        t4 = space();
        img0 = element("img");
        t5 = space();
        ul = element("ul");

        for (var _i3 = 0; _i3 < each_blocks_2.length; _i3 += 1) {
          each_blocks_2[_i3].c();
        }

        t6 = space();
        div0 = element("div");
        div0.textContent = "商品画像右上に「管理番号」及び該当する場合には「Sale」「送料無料」「完売」のメッセージが表示されます。";
        t8 = space();
        br0 = element("br");
        t9 = space();
        h31 = element("h3");
        span1 = element("span");
        span1.textContent = "●";
        t11 = text(" 注文フォームを開く");
        t12 = space();
        div1 = element("div");
        span2 = element("span");
        create_component(shoppingcart.$$.fragment);
        t13 = text("\n           をクリックするとリストが表示されます。");
        t14 = space();
        img1 = element("img");
        t15 = space();
        div2 = element("div");
        div2.textContent = "リストの商品名をクリックし「取消」或いは「購入」を選択します。";
        t17 = space();
        br1 = element("br");
        t18 = space();
        h32 = element("h3");
        span3 = element("span");
        span3.textContent = "●";
        t20 = text(" 注文メイルの送信");
        t21 = space();
        img2 = element("img");
        t22 = space();
        ol0 = element("ol");

        for (var _i4 = 0; _i4 < each_blocks_1.length; _i4 += 1) {
          each_blocks_1[_i4].c();
        }

        t23 = space();
        img3 = element("img");
        t24 = space();
        ol1 = element("ol");

        for (var _i5 = 0; _i5 < each_blocks.length; _i5 += 1) {
          each_blocks[_i5].c();
        }

        t25 = space();
        br2 = element("br");
        t26 = space();
        div3 = element("div");
        span4 = element("span");
        create_component(xcirclefill.$$.fragment);
        t27 = space();
        br3 = element("br");
        attr_dev(h1, "class", "center svelte-w0rukp");
        add_location(h1, file$c, 4, 9, 97);
        attr_dev(span0, "class", "mark svelte-w0rukp");
        add_location(span0, file$c, 6, 13, 140);
        add_location(h30, file$c, 6, 9, 136);
        if (!src_url_equal(img0.src, img0_src_value = "./images/help-image01e.png")) attr_dev(img0, "src", img0_src_value);
        attr_dev(img0, "alt", "商品選択画像");
        attr_dev(img0, "title", "商品選択画像");
        attr_dev(img0, "width", "250");
        add_location(img0, file$c, 8, 9, 189);
        attr_dev(ul, "class", "image-info svelte-w0rukp");
        add_location(ul, file$c, 12, 9, 322);
        attr_dev(div0, "class", "div-msg svelte-w0rukp");
        set_style(div0, "font-size", "0.7em");
        add_location(div0, file$c, 20, 9, 541);
        add_location(br0, file$c, 24, 9, 682);
        attr_dev(span1, "class", "mark svelte-w0rukp");
        add_location(span1, file$c, 26, 13, 701);
        add_location(h31, file$c, 26, 9, 697);
        attr_dev(span2, "class", "material-icons green");
        add_location(span2, file$c, 29, 11, 797);
        attr_dev(div1, "class", "div-msg svelte-w0rukp");
        add_location(div1, file$c, 28, 9, 763);
        if (!src_url_equal(img1.src, img1_src_value = "./images/help-image02e.png")) attr_dev(img1, "src", img1_src_value);
        attr_dev(img1, "alt", "注文フォーム・リスト画面");
        attr_dev(img1, "title", "注文フォーム・リスト画面");
        attr_dev(img1, "width", "250");
        add_location(img1, file$c, 35, 9, 964);
        attr_dev(div2, "class", "div-msg svelte-w0rukp");
        add_location(div2, file$c, 40, 9, 1110);
        add_location(br1, file$c, 44, 9, 1205);
        attr_dev(span3, "class", "mark svelte-w0rukp");
        add_location(span3, file$c, 46, 13, 1224);
        add_location(h32, file$c, 46, 9, 1220);
        if (!src_url_equal(img2.src, img2_src_value = "./images/help-image03c.png")) attr_dev(img2, "src", img2_src_value);
        attr_dev(img2, "alt", "注文フォーム・払込方法画面");
        attr_dev(img2, "title", "注文フォーム・払込方法画面");
        attr_dev(img2, "width", "250");
        add_location(img2, file$c, 48, 9, 1285);
        attr_dev(ol0, "class", "image-info2 svelte-w0rukp");
        add_location(ol0, file$c, 53, 9, 1433);
        if (!src_url_equal(img3.src, img3_src_value = "./images/help-image03a.png")) attr_dev(img3, "src", img3_src_value);
        attr_dev(img3, "alt", "注文フォーム・お客様情報入力画面");
        attr_dev(img3, "title", "注文フォーム・お客様情報入力画面");
        attr_dev(img3, "width", "250");
        add_location(img3, file$c, 63, 9, 1716);
        attr_dev(ol1, "class", "image-info2 svelte-w0rukp");
        add_location(ol1, file$c, 68, 9, 1870);
        add_location(br2, file$c, 74, 9, 2090);
        attr_dev(span4, "title", "ヘルプを閉じる");
        add_location(span4, file$c, 77, 12, 2146);
        attr_dev(div3, "class", "btn-close-ex svelte-w0rukp");
        add_location(div3, file$c, 76, 9, 2106);
        add_location(br3, file$c, 82, 9, 2301);
        attr_dev(div4, "class", "info-content svelte-w0rukp");
        add_location(div4, file$c, 2, 6, 60);
        attr_dev(div5, "class", "mdc-menu mdc-menu-surface menu-info svelte-w0rukp");
        add_location(div5, file$c, 1, 3, 4);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, div5, anchor);
        append_dev(div5, div4);
        append_dev(div4, h1);
        append_dev(div4, t1);
        append_dev(div4, h30);
        append_dev(h30, span0);
        append_dev(h30, t3);
        append_dev(div4, t4);
        append_dev(div4, img0);
        append_dev(div4, t5);
        append_dev(div4, ul);

        for (var _i6 = 0; _i6 < each_blocks_2.length; _i6 += 1) {
          each_blocks_2[_i6].m(ul, null);
        }

        append_dev(div4, t6);
        append_dev(div4, div0);
        append_dev(div4, t8);
        append_dev(div4, br0);
        append_dev(div4, t9);
        append_dev(div4, h31);
        append_dev(h31, span1);
        append_dev(h31, t11);
        append_dev(div4, t12);
        append_dev(div4, div1);
        append_dev(div1, span2);
        mount_component(shoppingcart, span2, null);
        append_dev(div1, t13);
        append_dev(div4, t14);
        append_dev(div4, img1);
        append_dev(div4, t15);
        append_dev(div4, div2);
        append_dev(div4, t17);
        append_dev(div4, br1);
        append_dev(div4, t18);
        append_dev(div4, h32);
        append_dev(h32, span3);
        append_dev(h32, t20);
        append_dev(div4, t21);
        append_dev(div4, img2);
        append_dev(div4, t22);
        append_dev(div4, ol0);

        for (var _i7 = 0; _i7 < each_blocks_1.length; _i7 += 1) {
          each_blocks_1[_i7].m(ol0, null);
        }

        append_dev(div4, t23);
        append_dev(div4, img3);
        append_dev(div4, t24);
        append_dev(div4, ol1);

        for (var _i8 = 0; _i8 < each_blocks.length; _i8 += 1) {
          each_blocks[_i8].m(ol1, null);
        }

        append_dev(div4, t25);
        append_dev(div4, br2);
        append_dev(div4, t26);
        append_dev(div4, div3);
        append_dev(div3, span4);
        mount_component(xcirclefill, span4, null);
        append_dev(div4, t27);
        append_dev(div4, br3);
        current = true;

        if (!mounted) {
          dispose = listen_dev(span4, "click",
          /*click_handler*/
          ctx[3], false, false, false);
          mounted = true;
        }
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*msgItems1*/
        1) {
          each_value_2 =
          /*msgItems1*/
          ctx[0];
          validate_each_argument(each_value_2);

          var _i9;

          for (_i9 = 0; _i9 < each_value_2.length; _i9 += 1) {
            var child_ctx = get_each_context_2$4(ctx, each_value_2, _i9);

            if (each_blocks_2[_i9]) {
              each_blocks_2[_i9].p(child_ctx, dirty);
            } else {
              each_blocks_2[_i9] = create_each_block_2$4(child_ctx);

              each_blocks_2[_i9].c();

              each_blocks_2[_i9].m(ul, null);
            }
          }

          for (; _i9 < each_blocks_2.length; _i9 += 1) {
            each_blocks_2[_i9].d(1);
          }

          each_blocks_2.length = each_value_2.length;
        }

        if (dirty &
        /*msgItems2*/
        2) {
          each_value_1 =
          /*msgItems2*/
          ctx[1];
          validate_each_argument(each_value_1);

          var _i10;

          for (_i10 = 0; _i10 < each_value_1.length; _i10 += 1) {
            var _child_ctx = get_each_context_1$5(ctx, each_value_1, _i10);

            if (each_blocks_1[_i10]) {
              each_blocks_1[_i10].p(_child_ctx, dirty);
            } else {
              each_blocks_1[_i10] = create_each_block_1$5(_child_ctx);

              each_blocks_1[_i10].c();

              each_blocks_1[_i10].m(ol0, null);
            }
          }

          for (; _i10 < each_blocks_1.length; _i10 += 1) {
            each_blocks_1[_i10].d(1);
          }

          each_blocks_1.length = each_value_1.length;
        }

        if (dirty &
        /*msgItems3*/
        4) {
          each_value =
          /*msgItems3*/
          ctx[2];
          validate_each_argument(each_value);

          var _i11;

          for (_i11 = 0; _i11 < each_value.length; _i11 += 1) {
            var _child_ctx2 = get_each_context$5(ctx, each_value, _i11);

            if (each_blocks[_i11]) {
              each_blocks[_i11].p(_child_ctx2, dirty);
            } else {
              each_blocks[_i11] = create_each_block$5(_child_ctx2);

              each_blocks[_i11].c();

              each_blocks[_i11].m(ol1, null);
            }
          }

          for (; _i11 < each_blocks.length; _i11 += 1) {
            each_blocks[_i11].d(1);
          }

          each_blocks.length = each_value.length;
        }
      },
      i: function intro(local) {
        if (current) return;
        transition_in(shoppingcart.$$.fragment, local);
        transition_in(xcirclefill.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        transition_out(shoppingcart.$$.fragment, local);
        transition_out(xcirclefill.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div5);
        destroy_each(each_blocks_2, detaching);
        destroy_component(shoppingcart);
        destroy_each(each_blocks_1, detaching);
        destroy_each(each_blocks, detaching);
        destroy_component(xcirclefill);
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$c.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function closeHelp() {
    var menu = new mdc.menu.MDCMenu(document.querySelector('.mdc-menu'));
    menu.open = !menu.open;
  }

  function instance$c($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('SideHelp', slots, []);
    var msgItems1 = ["商品名が表示されます。", "この商品のアピールポイントです。", "この商品の特徴ポイントが表示されます。", "この商品の量目と単価が表示されます。", "現在の注文個数を表示します。", "注文個数の増減を行います。", "個数に応じた小計が表示されます。", "選択した全ての商品総額が表示されます。", "購入商品の注文リストが開かれます。", "この商品の個数と小計をリセットします。", "この商品の商品説明が表示されます。"];
    var msgItems2 = ["払込方法の何れかを選択します。", "「その他」を選択した場合はメイル送信時にその内容を記して下さい。", "この項目は<span class='red'>必須</span>です。"];
    var msgItems3 = ["注文者氏名、届け先住所は<span class='red'>必須</span>です。", "注文者と商品の受取人とが異なる場合は、特に誤りのないようご注意下さい。", "郵便番号、連絡先電話番号は必須ではありませんが、正確に配送を行うためなるべくご記入を願います。", "「注文する」をクリックしますとお客様常備のメイラーが開かれます。", "送信メイルには、伝言、要望、意見などを追加編集出来ます。", "開かれたメイル画面で注文内容を再度確認し間違いがなければ送信して下さい。", "メイルの受領次第注文確認メイルを送信致します。"];
    var writable_props = [];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<SideHelp> was created with unknown prop '".concat(key, "'"));
    });

    var click_handler = function click_handler() {
      return closeHelp();
    };

    $$self.$capture_state = function () {
      return {
        Close: Close,
        ShoppingCart: Shopping_cart,
        XCircleFill: X_circle_fill,
        closeHelp: closeHelp,
        msgItems1: msgItems1,
        msgItems2: msgItems2,
        msgItems3: msgItems3
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('msgItems1' in $$props) $$invalidate(0, msgItems1 = $$props.msgItems1);
      if ('msgItems2' in $$props) $$invalidate(1, msgItems2 = $$props.msgItems2);
      if ('msgItems3' in $$props) $$invalidate(2, msgItems3 = $$props.msgItems3);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [msgItems1, msgItems2, msgItems3, click_handler];
  }

  var SideHelp = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(SideHelp, _SvelteComponentDev);

    var _super = _createSuper$c(SideHelp);

    function SideHelp(options) {
      var _this;

      _classCallCheck(this, SideHelp);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$c, create_fragment$c, safe_not_equal, {});
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "SideHelp",
        options: options,
        id: create_fragment$c.name
      });
      return _this;
    }

    return SideHelp;
  }(SvelteComponentDev);

  function _createSuper$b(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$b(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$b() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$b = "src/components/Navbar.svelte";

  function get_each_context$4(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[22] = list[i].category;
    child_ctx[23] = list[i].items;
    child_ctx[24] = list[i].icon;
    child_ctx[26] = i;
    return child_ctx;
  }

  function get_each_context_1$4(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[27] = list[i].name;
    child_ctx[28] = list[i].ref;
    return child_ctx;
  }

  function get_each_context_2$3(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[31] = list[i].subject;
    child_ctx[26] = i;
    return child_ctx;
  } // (119:9) {#each user_pages as { subject }


  function create_each_block_2$3(ctx) {
    var a;
    var playcirclefilled;
    var t0;
    var span;
    var t1;
    var t2_value =
    /*subject*/
    ctx[31] + "";
    var t2;
    var t3;
    var current;
    var mounted;
    var dispose;
    playcirclefilled = new Play_circle_filled({
      props: {
        color: "#85bb5c",
        size: "2em"
      },
      $$inline: true
    });

    function click_handler_5() {
      return (
        /*click_handler_5*/
        ctx[13](
        /*i*/
        ctx[26])
      );
    }

    var block = {
      c: function create() {
        a = element("a");
        create_component(playcirclefilled.$$.fragment);
        t0 = space();
        span = element("span");
        t1 = text(" ");
        t2 = text(t2_value);
        t3 = space();
        attr_dev(span, "class", "mdc-list-item__text");
        add_location(span, file$b, 122, 15, 4059);
        attr_dev(a, "class", "mdc-list-item svelte-ik3kxg");
        attr_dev(a, "href", "#/infomations");
        add_location(a, file$b, 119, 12, 3855);
      },
      m: function mount(target, anchor) {
        insert_dev(target, a, anchor);
        mount_component(playcirclefilled, a, null);
        append_dev(a, t0);
        append_dev(a, span);
        append_dev(span, t1);
        append_dev(span, t2);
        append_dev(a, t3);
        current = true;

        if (!mounted) {
          dispose = listen_dev(a, "click", click_handler_5, false, false, false);
          mounted = true;
        }
      },
      p: function update(new_ctx, dirty) {
        ctx = new_ctx;
      },
      i: function intro(local) {
        if (current) return;
        transition_in(playcirclefilled.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        transition_out(playcirclefilled.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(a);
        destroy_component(playcirclefilled);
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block_2$3.name,
      type: "each",
      source: "(119:9) {#each user_pages as { subject }",
      ctx: ctx
    });
    return block;
  } // (130:6) {#if administration === 1 }


  function create_if_block$5(ctx) {
    var each_1_anchor;
    var current;
    var each_value =
    /*nav_menus*/
    ctx[7];
    validate_each_argument(each_value);
    var each_blocks = [];

    for (var i = 0; i < each_value.length; i += 1) {
      each_blocks[i] = create_each_block$4(get_each_context$4(ctx, each_value, i));
    }

    var out = function out(i) {
      return transition_out(each_blocks[i], 1, 1, function () {
        each_blocks[i] = null;
      });
    };

    var block = {
      c: function create() {
        for (var _i = 0; _i < each_blocks.length; _i += 1) {
          each_blocks[_i].c();
        }

        each_1_anchor = empty();
      },
      m: function mount(target, anchor) {
        for (var _i2 = 0; _i2 < each_blocks.length; _i2 += 1) {
          each_blocks[_i2].m(target, anchor);
        }

        insert_dev(target, each_1_anchor, anchor);
        current = true;
      },
      p: function update(ctx, dirty) {
        if (dirty[0] &
        /*nav_menus, asideClose, openMenu, visible, visible_panel*/
        244) {
          each_value =
          /*nav_menus*/
          ctx[7];
          validate_each_argument(each_value);

          var _i3;

          for (_i3 = 0; _i3 < each_value.length; _i3 += 1) {
            var child_ctx = get_each_context$4(ctx, each_value, _i3);

            if (each_blocks[_i3]) {
              each_blocks[_i3].p(child_ctx, dirty);

              transition_in(each_blocks[_i3], 1);
            } else {
              each_blocks[_i3] = create_each_block$4(child_ctx);

              each_blocks[_i3].c();

              transition_in(each_blocks[_i3], 1);

              each_blocks[_i3].m(each_1_anchor.parentNode, each_1_anchor);
            }
          }

          group_outros();

          for (_i3 = each_value.length; _i3 < each_blocks.length; _i3 += 1) {
            out(_i3);
          }

          check_outros();
        }
      },
      i: function intro(local) {
        if (current) return;

        for (var _i4 = 0; _i4 < each_value.length; _i4 += 1) {
          transition_in(each_blocks[_i4]);
        }

        current = true;
      },
      o: function outro(local) {
        each_blocks = each_blocks.filter(Boolean);

        for (var _i5 = 0; _i5 < each_blocks.length; _i5 += 1) {
          transition_out(each_blocks[_i5]);
        }

        current = false;
      },
      d: function destroy(detaching) {
        destroy_each(each_blocks, detaching);
        if (detaching) detach_dev(each_1_anchor);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block$5.name,
      type: "if",
      source: "(130:6) {#if administration === 1 }",
      ctx: ctx
    });
    return block;
  } // (139:12) {#if visible[i]}


  function create_if_block_1$4(ctx) {
    var ul;
    var t;
    var ul_transition;
    var current;
    var each_value_1 =
    /*items*/
    ctx[23];
    validate_each_argument(each_value_1);
    var each_blocks = [];

    for (var i = 0; i < each_value_1.length; i += 1) {
      each_blocks[i] = create_each_block_1$4(get_each_context_1$4(ctx, each_value_1, i));
    }

    var out = function out(i) {
      return transition_out(each_blocks[i], 1, 1, function () {
        each_blocks[i] = null;
      });
    };

    var block = {
      c: function create() {
        ul = element("ul");

        for (var _i6 = 0; _i6 < each_blocks.length; _i6 += 1) {
          each_blocks[_i6].c();
        }

        t = space();
        attr_dev(ul, "class", "mdc-list");
        add_location(ul, file$b, 140, 15, 4573);
      },
      m: function mount(target, anchor) {
        insert_dev(target, ul, anchor);

        for (var _i7 = 0; _i7 < each_blocks.length; _i7 += 1) {
          each_blocks[_i7].m(ul, null);
        }

        append_dev(ul, t);
        current = true;
      },
      p: function update(ctx, dirty) {
        if (dirty[0] &
        /*asideClose, openMenu, nav_menus, visible*/
        180) {
          each_value_1 =
          /*items*/
          ctx[23];
          validate_each_argument(each_value_1);

          var _i8;

          for (_i8 = 0; _i8 < each_value_1.length; _i8 += 1) {
            var child_ctx = get_each_context_1$4(ctx, each_value_1, _i8);

            if (each_blocks[_i8]) {
              each_blocks[_i8].p(child_ctx, dirty);

              transition_in(each_blocks[_i8], 1);
            } else {
              each_blocks[_i8] = create_each_block_1$4(child_ctx);

              each_blocks[_i8].c();

              transition_in(each_blocks[_i8], 1);

              each_blocks[_i8].m(ul, t);
            }
          }

          group_outros();

          for (_i8 = each_value_1.length; _i8 < each_blocks.length; _i8 += 1) {
            out(_i8);
          }

          check_outros();
        }
      },
      i: function intro(local) {
        if (current) return;

        for (var _i9 = 0; _i9 < each_value_1.length; _i9 += 1) {
          transition_in(each_blocks[_i9]);
        }

        add_render_callback(function () {
          if (!ul_transition) ul_transition = create_bidirectional_transition(ul, fade, {}, true);
          ul_transition.run(1);
        });
        current = true;
      },
      o: function outro(local) {
        each_blocks = each_blocks.filter(Boolean);

        for (var _i10 = 0; _i10 < each_blocks.length; _i10 += 1) {
          transition_out(each_blocks[_i10]);
        }

        if (!ul_transition) ul_transition = create_bidirectional_transition(ul, fade, {}, false);
        ul_transition.run(0);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(ul);
        destroy_each(each_blocks, detaching);
        if (detaching && ul_transition) ul_transition.end();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_1$4.name,
      type: "if",
      source: "(139:12) {#if visible[i]}",
      ctx: ctx
    });
    return block;
  } // (154:24) {:else}


  function create_else_block$1(ctx) {
    var a;
    var playcirclefilled;
    var t0;
    var span;
    var t1;
    var t2_value =
    /*name*/
    ctx[27] + "";
    var t2;
    var current;
    var mounted;
    var dispose;
    playcirclefilled = new Play_circle_filled({
      props: {
        color: "#85bb5c",
        size: "1.4em"
      },
      $$inline: true
    });

    function click_handler_8() {
      return (
        /*click_handler_8*/
        ctx[16](
        /*i*/
        ctx[26])
      );
    }

    var block = {
      c: function create() {
        a = element("a");
        create_component(playcirclefilled.$$.fragment);
        t0 = space();
        span = element("span");
        t1 = text("  ");
        t2 = text(t2_value);
        attr_dev(span, "class", "mdc-list-item__text");
        add_location(span, file$b, 157, 30, 5475);
        attr_dev(a, "class", "mdc-list-item svelte-ik3kxg");
        attr_dev(a, "href", "#/" +
        /*ref*/
        ctx[28]);
        add_location(a, file$b, 154, 27, 5260);
      },
      m: function mount(target, anchor) {
        insert_dev(target, a, anchor);
        mount_component(playcirclefilled, a, null);
        append_dev(a, t0);
        append_dev(a, span);
        append_dev(span, t1);
        append_dev(span, t2);
        current = true;

        if (!mounted) {
          dispose = listen_dev(a, "click", click_handler_8, false, false, false);
          mounted = true;
        }
      },
      p: function update(new_ctx, dirty) {
        ctx = new_ctx;
      },
      i: function intro(local) {
        if (current) return;
        transition_in(playcirclefilled.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        transition_out(playcirclefilled.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(a);
        destroy_component(playcirclefilled);
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_else_block$1.name,
      type: "else",
      source: "(154:24) {:else}",
      ctx: ctx
    });
    return block;
  } // (146:23) {#if ref === "how-to-order"}


  function create_if_block_2$4(ctx) {
    var span1;
    var playcirclefilled;
    var t0;
    var span0;
    var t1;
    var t2_value =
    /*name*/
    ctx[27] + "";
    var t2;
    var current;
    var mounted;
    var dispose;
    playcirclefilled = new Play_circle_filled({
      props: {
        color: "#85bb5c",
        size: "1.4em"
      },
      $$inline: true
    });
    var block = {
      c: function create() {
        span1 = element("span");
        create_component(playcirclefilled.$$.fragment);
        t0 = space();
        span0 = element("span");
        t1 = text("  ");
        t2 = text(t2_value);
        attr_dev(span0, "class", "mdc-list-item__text");
        add_location(span0, file$b, 149, 30, 5041);
        attr_dev(span1, "class", "mdc-list-item");
        add_location(span1, file$b, 146, 27, 4844);
      },
      m: function mount(target, anchor) {
        insert_dev(target, span1, anchor);
        mount_component(playcirclefilled, span1, null);
        append_dev(span1, t0);
        append_dev(span1, span0);
        append_dev(span0, t1);
        append_dev(span0, t2);
        current = true;

        if (!mounted) {
          dispose = listen_dev(span1, "click",
          /*click_handler_7*/
          ctx[15], false, false, false);
          mounted = true;
        }
      },
      p: noop,
      i: function intro(local) {
        if (current) return;
        transition_in(playcirclefilled.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        transition_out(playcirclefilled.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(span1);
        destroy_component(playcirclefilled);
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_2$4.name,
      type: "if",
      source: "(146:23) {#if ref === \\\"how-to-order\\\"}",
      ctx: ctx
    });
    return block;
  } // (143:18) {#each items as { name, ref }}


  function create_each_block_1$4(ctx) {
    var li;
    var current_block_type_index;
    var if_block;
    var current;
    var mounted;
    var dispose;
    var if_block_creators = [create_if_block_2$4, create_else_block$1];
    var if_blocks = [];

    function select_block_type(ctx, dirty) {
      if (
      /*ref*/
      ctx[28] === "how-to-order") return 0;
      return 1;
    }

    current_block_type_index = select_block_type(ctx);
    if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
    var block = {
      c: function create() {
        li = element("li");
        if_block.c();
        attr_dev(li, "class", "mdc-list-item list-item");
        add_location(li, file$b, 144, 21, 4704);
      },
      m: function mount(target, anchor) {
        insert_dev(target, li, anchor);
        if_blocks[current_block_type_index].m(li, null);
        current = true;

        if (!mounted) {
          dispose = listen_dev(li, "click",
          /*asideClose*/
          ctx[4], false, false, false);
          mounted = true;
        }
      },
      p: function update(ctx, dirty) {
        if_block.p(ctx, dirty);
      },
      i: function intro(local) {
        if (current) return;
        transition_in(if_block);
        current = true;
      },
      o: function outro(local) {
        transition_out(if_block);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(li);
        if_blocks[current_block_type_index].d();
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block_1$4.name,
      type: "each",
      source: "(143:18) {#each items as { name, ref }}",
      ctx: ctx
    });
    return block;
  } // (132:9) {#each nav_menus as { category, items, icon }


  function create_each_block$4(ctx) {
    var div;
    var html_tag;
    var raw_value =
    /*icon*/
    ctx[24] + "";
    var t0;
    var t1_value =
    /*category*/
    ctx[22] + "";
    var t1;
    var t2;
    var if_block_anchor;
    var current;
    var mounted;
    var dispose;

    function click_handler_6() {
      return (
        /*click_handler_6*/
        ctx[14](
        /*i*/
        ctx[26])
      );
    }

    var if_block =
    /*visible*/
    ctx[2][
    /*i*/
    ctx[26]] && create_if_block_1$4(ctx);
    var block = {
      c: function create() {
        div = element("div");
        html_tag = new HtmlTag();
        t0 = text("  ");
        t1 = text(t1_value);
        t2 = space();
        if (if_block) if_block.c();
        if_block_anchor = empty();
        html_tag.a = t0;
        attr_dev(div, "class", "mdc-list-item");
        add_location(div, file$b, 133, 15, 4329);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div, anchor);
        html_tag.m(raw_value, div);
        append_dev(div, t0);
        append_dev(div, t1);
        insert_dev(target, t2, anchor);
        if (if_block) if_block.m(target, anchor);
        insert_dev(target, if_block_anchor, anchor);
        current = true;

        if (!mounted) {
          dispose = listen_dev(div, "click", click_handler_6, false, false, false);
          mounted = true;
        }
      },
      p: function update(new_ctx, dirty) {
        ctx = new_ctx;

        if (
        /*visible*/
        ctx[2][
        /*i*/
        ctx[26]]) {
          if (if_block) {
            if_block.p(ctx, dirty);

            if (dirty[0] &
            /*visible*/
            4) {
              transition_in(if_block, 1);
            }
          } else {
            if_block = create_if_block_1$4(ctx);
            if_block.c();
            transition_in(if_block, 1);
            if_block.m(if_block_anchor.parentNode, if_block_anchor);
          }
        } else if (if_block) {
          group_outros();
          transition_out(if_block, 1, 1, function () {
            if_block = null;
          });
          check_outros();
        }
      },
      i: function intro(local) {
        if (current) return;
        transition_in(if_block);
        current = true;
      },
      o: function outro(local) {
        transition_out(if_block);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div);
        if (detaching) detach_dev(t2);
        if (if_block) if_block.d(detaching);
        if (detaching) detach_dev(if_block_anchor);
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block$4.name,
      type: "each",
      source: "(132:9) {#each nav_menus as { category, items, icon }",
      ctx: ctx
    });
    return block;
  }

  function create_fragment$b(ctx) {
    var header;
    var div3;
    var section0;
    var button0;
    var menu;
    var t0;
    var span0;
    var a0;
    var t2;
    var section1;
    var div2;
    var button1;
    var help0;
    var t3;
    var sidehelp;
    var t4;
    var button2;
    var morevert;
    var t5;
    var div1;
    var div0;
    var h2;
    var span1;
    var shoppingbasket0;
    var t6;
    var t7_value = user.shop + "";
    var t7;
    var t8;
    var button3;
    var cancel;
    var t9;
    var p0;
    var t12;
    var p1;
    var t15;
    var p2;
    var t18;
    var p3;
    var t21;
    var hr0;
    var t22;
    var ul;
    var li0;
    var t24;
    var li1;
    var t26;
    var li2;
    var t28;
    var hr1;
    var t29;
    var p4;
    var t30;
    var a1;
    var t31_value =
    /*creator*/
    ctx[0].name + "";
    var t31;
    var a1_href_value;
    var t32;
    var p5;
    var t33;
    var t34_value =
    /*creator*/
    ctx[0].mail + "";
    var t34;
    var t35;
    var aside;
    var div4;
    var a2;
    var h3;
    var shoppingbasket1;
    var t36;
    var t37_value = user.shop + "";
    var t37;
    var t38;
    var h6;
    var raw_value = user.email + "";
    var t39;
    var div6;
    var nav;
    var a3;
    var home;
    var t40;
    var t41;
    var div5;
    var help1;
    var t42;
    var t43;
    var t44;
    var t45;
    var div7;
    var current;
    var mounted;
    var dispose;
    menu = new Menu({
      $$inline: true
    });
    help0 = new Help({
      $$inline: true
    });
    sidehelp = new SideHelp({
      $$inline: true
    });
    morevert = new More_vert({
      $$inline: true
    });
    shoppingbasket0 = new Shopping_basket({
      $$inline: true
    });
    cancel = new Cancel({
      $$inline: true
    });
    shoppingbasket1 = new Shopping_basket({
      props: {
        color: "#255d00",
        size: "1.2em"
      },
      $$inline: true
    });
    home = new Home$1({
      props: {
        color: "#558b2f",
        size: "2em"
      },
      $$inline: true
    });
    help1 = new Help({
      props: {
        color: "red",
        size: "2em"
      },
      $$inline: true
    });
    var each_value_2 = user_pages;
    validate_each_argument(each_value_2);
    var each_blocks = [];

    for (var i = 0; i < each_value_2.length; i += 1) {
      each_blocks[i] = create_each_block_2$3(get_each_context_2$3(ctx, each_value_2, i));
    }

    var out = function out(i) {
      return transition_out(each_blocks[i], 1, 1, function () {
        each_blocks[i] = null;
      });
    };

    var if_block =
    /*administration*/
    ctx[1] === 1 && create_if_block$5(ctx);
    var block = {
      c: function create() {
        header = element("header");
        div3 = element("div");
        section0 = element("section");
        button0 = element("button");
        create_component(menu.$$.fragment);
        t0 = space();
        span0 = element("span");
        a0 = element("a");
        a0.textContent = "".concat(user.shop);
        t2 = space();
        section1 = element("section");
        div2 = element("div");
        button1 = element("button");
        create_component(help0.$$.fragment);
        t3 = space();
        create_component(sidehelp.$$.fragment);
        t4 = space();
        button2 = element("button");
        create_component(morevert.$$.fragment);
        t5 = space();
        div1 = element("div");
        div0 = element("div");
        h2 = element("h2");
        span1 = element("span");
        create_component(shoppingbasket0.$$.fragment);
        t6 = space();
        t7 = text(t7_value);
        t8 = space();
        button3 = element("button");
        create_component(cancel.$$.fragment);
        t9 = space();
        p0 = element("p");
        p0.textContent = "\u7BA1\u7406\u8CAC\u4EFB\u8005\uFF1A ".concat(user.admin);
        t12 = space();
        p1 = element("p");
        p1.textContent = "\u4F4F\u6240\uFF1A ".concat(user.address);
        t15 = space();
        p2 = element("p");
        p2.textContent = "\u96FB\u8A71\uFF1A ".concat(user.tell);
        t18 = space();
        p3 = element("p");
        p3.textContent = "e-mail\uFF1A".concat(user.email);
        t21 = space();
        hr0 = element("hr");
        t22 = space();
        ul = element("ul");
        li0 = element("li");
        li0.textContent = "・スマホ、タブレットに対応しています。";
        t24 = space();
        li1 = element("li");
        li1.textContent = "・IE11に対応しています。";
        t26 = space();
        li2 = element("li");
        li2.textContent = "・推奨環境： Firefox、Android 4.4-";
        t28 = space();
        hr1 = element("hr");
        t29 = space();
        p4 = element("p");
        t30 = text("制作：");
        a1 = element("a");
        t31 = text(t31_value);
        t32 = space();
        p5 = element("p");
        t33 = text("e-mail：");
        t34 = text(t34_value);
        t35 = space();
        aside = element("aside");
        div4 = element("div");
        a2 = element("a");
        h3 = element("h3");
        create_component(shoppingbasket1.$$.fragment);
        t36 = space();
        t37 = text(t37_value);
        t38 = space();
        h6 = element("h6");
        t39 = space();
        div6 = element("div");
        nav = element("nav");
        a3 = element("a");
        create_component(home.$$.fragment);
        t40 = text("  HOME");
        t41 = space();
        div5 = element("div");
        create_component(help1.$$.fragment);
        t42 = text("\n                注文の仕方");
        t43 = space();

        for (var _i11 = 0; _i11 < each_blocks.length; _i11 += 1) {
          each_blocks[_i11].c();
        }

        t44 = space();
        if (if_block) if_block.c();
        t45 = space();
        div7 = element("div");
        attr_dev(button0, "class", "material-icons mdc-top-app-bar__navigation-icon mdc-icon-button");
        attr_dev(button0, "aria-label", "Open navigation menu");
        add_location(button0, file$b, 8, 6, 247);
        attr_dev(a0, "href", "#/home");
        attr_dev(a0, "class", "svelte-ik3kxg");
        add_location(a0, file$b, 16, 9, 563);
        attr_dev(span0, "class", "mdc-top-app-bar__title title svelte-ik3kxg");
        add_location(span0, file$b, 15, 6, 510);
        attr_dev(section0, "class", "mdc-top-app-bar__section mdc-top-app-bar__section--align-start");
        add_location(section0, file$b, 5, 4, 134);
        attr_dev(button1, "class", "material-icons mdc-top-app-bar__action-item mdc-icon-button");
        attr_dev(button1, "aria-label", "Search");
        set_style(button1, "background-color", "#005005");
        set_style(button1, "border-color", "#005005");
        attr_dev(button1, "title", "categoryヘルプ");
        add_location(button1, file$b, 26, 9, 840);
        attr_dev(button2, "class", "material-icons mdc-top-app-bar__action-item mdc-icon-button");
        set_style(button2, "background-color", "#005005");
        set_style(button2, "border-color", "#005005");
        attr_dev(button2, "aria-label", "Options");
        attr_dev(button2, "title", "インフォメーション");
        add_location(button2, file$b, 38, 9, 1242);
        attr_dev(span1, "class", "material-icons v-align");
        add_location(span1, file$b, 52, 18, 1745);
        attr_dev(button3, "class", "mdc-icon-button material-icons btn-close svelte-ik3kxg");
        add_location(button3, file$b, 57, 18, 1952);
        add_location(h2, file$b, 51, 15, 1722);
        add_location(p0, file$b, 65, 15, 2248);
        add_location(p1, file$b, 66, 15, 2290);
        add_location(p2, file$b, 67, 15, 2331);
        add_location(p3, file$b, 68, 15, 2369);
        attr_dev(hr0, "class", "divider svelte-ik3kxg");
        add_location(hr0, file$b, 71, 15, 2443);
        add_location(li0, file$b, 73, 18, 2517);
        add_location(li1, file$b, 74, 18, 2564);
        add_location(li2, file$b, 75, 18, 2606);
        attr_dev(ul, "class", "detail svelte-ik3kxg");
        add_location(ul, file$b, 72, 15, 2479);
        attr_dev(hr1, "class", "divider svelte-ik3kxg");
        add_location(hr1, file$b, 78, 15, 2695);
        attr_dev(a1, "href", a1_href_value =
        /*creator*/
        ctx[0].url);
        attr_dev(a1, "target", "_blank");
        attr_dev(a1, "class", "svelte-ik3kxg");
        add_location(a1, file$b, 79, 21, 2737);
        add_location(p4, file$b, 79, 15, 2731);
        add_location(p5, file$b, 83, 15, 2887);
        attr_dev(div0, "class", "info-content svelte-ik3kxg");
        add_location(div0, file$b, 50, 12, 1680);
        attr_dev(div1, "class", "mdc-menu mdc-menu-surface menu-info svelte-ik3kxg");
        add_location(div1, file$b, 48, 9, 1617);
        attr_dev(div2, "class", "toolbar mdc-menu-surface--anchor menu-ex svelte-ik3kxg");
        add_location(div2, file$b, 24, 6, 769);
        attr_dev(section1, "class", "mdc-top-app-bar__section mdc-top-app-bar__section--align-end");
        attr_dev(section1, "role", "toolbar");
        add_location(section1, file$b, 21, 4, 635);
        attr_dev(div3, "class", "mdc-top-app-bar__row");
        add_location(div3, file$b, 3, 2, 94);
        attr_dev(header, "class", "mdc-top-app-bar mdc-top-app-bar--fixed dark svelte-ik3kxg");
        attr_dev(header, "id", "app-bar");
        add_location(header, file$b, 2, 0, 18);
        attr_dev(h3, "class", "mdc-drawer__title");
        add_location(h3, file$b, 99, 9, 3196);
        attr_dev(a2, "href", "#/home");
        attr_dev(a2, "class", "nofocus svelte-ik3kxg");
        add_location(a2, file$b, 98, 6, 3129);
        attr_dev(h6, "class", "mdc-drawer__subtitle");
        add_location(h6, file$b, 103, 6, 3329);
        attr_dev(div4, "class", "mdc-drawer__header");
        add_location(div4, file$b, 97, 3, 3090);
        attr_dev(a3, "href", "#/home");
        attr_dev(a3, "class", "mdc-list-item svelte-ik3kxg");
        add_location(a3, file$b, 109, 9, 3476);
        attr_dev(div5, "class", "mdc-list-item");
        add_location(div5, file$b, 113, 9, 3630);
        attr_dev(nav, "class", "mdc-list");
        add_location(nav, file$b, 108, 6, 3444);
        attr_dev(div6, "class", "mdc-drawer__content");
        add_location(div6, file$b, 106, 3, 3400);
        attr_dev(aside, "class", "mdc-drawer mdc-drawer--modal drawer-ex");
        add_location(aside, file$b, 95, 1, 3030);
        attr_dev(div7, "class", "mdc-drawer-scrim");
        add_location(div7, file$b, 181, 0, 5914);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, header, anchor);
        append_dev(header, div3);
        append_dev(div3, section0);
        append_dev(section0, button0);
        mount_component(menu, button0, null);
        append_dev(section0, t0);
        append_dev(section0, span0);
        append_dev(span0, a0);
        append_dev(div3, t2);
        append_dev(div3, section1);
        append_dev(section1, div2);
        append_dev(div2, button1);
        mount_component(help0, button1, null);
        append_dev(div2, t3);
        mount_component(sidehelp, div2, null);
        append_dev(div2, t4);
        append_dev(div2, button2);
        mount_component(morevert, button2, null);
        append_dev(div2, t5);
        append_dev(div2, div1);
        append_dev(div1, div0);
        append_dev(div0, h2);
        append_dev(h2, span1);
        mount_component(shoppingbasket0, span1, null);
        append_dev(h2, t6);
        append_dev(h2, t7);
        append_dev(h2, t8);
        append_dev(h2, button3);
        mount_component(cancel, button3, null);
        append_dev(div0, t9);
        append_dev(div0, p0);
        append_dev(div0, t12);
        append_dev(div0, p1);
        append_dev(div0, t15);
        append_dev(div0, p2);
        append_dev(div0, t18);
        append_dev(div0, p3);
        append_dev(div0, t21);
        append_dev(div0, hr0);
        append_dev(div0, t22);
        append_dev(div0, ul);
        append_dev(ul, li0);
        append_dev(ul, t24);
        append_dev(ul, li1);
        append_dev(ul, t26);
        append_dev(ul, li2);
        append_dev(div0, t28);
        append_dev(div0, hr1);
        append_dev(div0, t29);
        append_dev(div0, p4);
        append_dev(p4, t30);
        append_dev(p4, a1);
        append_dev(a1, t31);
        append_dev(div0, t32);
        append_dev(div0, p5);
        append_dev(p5, t33);
        append_dev(p5, t34);
        insert_dev(target, t35, anchor);
        insert_dev(target, aside, anchor);
        append_dev(aside, div4);
        append_dev(div4, a2);
        append_dev(a2, h3);
        mount_component(shoppingbasket1, h3, null);
        append_dev(h3, t36);
        append_dev(h3, t37);
        append_dev(div4, t38);
        append_dev(div4, h6);
        h6.innerHTML = raw_value;
        append_dev(aside, t39);
        append_dev(aside, div6);
        append_dev(div6, nav);
        append_dev(nav, a3);
        mount_component(home, a3, null);
        append_dev(a3, t40);
        append_dev(nav, t41);
        append_dev(nav, div5);
        mount_component(help1, div5, null);
        append_dev(div5, t42);
        append_dev(nav, t43);

        for (var _i12 = 0; _i12 < each_blocks.length; _i12 += 1) {
          each_blocks[_i12].m(nav, null);
        }

        append_dev(nav, t44);
        if (if_block) if_block.m(nav, null);
        insert_dev(target, t45, anchor);
        insert_dev(target, div7, anchor);
        current = true;

        if (!mounted) {
          dispose = [listen_dev(button0, "click",
          /*click_handler*/
          ctx[8], false, false, false), listen_dev(button1, "click",
          /*click_handler_1*/
          ctx[9], false, false, false), listen_dev(button2, "click",
          /*click_handler_2*/
          ctx[10], false, false, false), listen_dev(button3, "click",
          /*click_handler_3*/
          ctx[11], false, false, false), listen_dev(a2, "click",
          /*asideClose*/
          ctx[4], false, false, false), listen_dev(a3, "click",
          /*asideClose*/
          ctx[4], false, false, false), listen_dev(div5, "click",
          /*click_handler_4*/
          ctx[12], false, false, false)];
          mounted = true;
        }
      },
      p: function update(ctx, dirty) {
        if ((!current || dirty[0] &
        /*creator*/
        1) && t31_value !== (t31_value =
        /*creator*/
        ctx[0].name + "")) set_data_dev(t31, t31_value);

        if (!current || dirty[0] &
        /*creator*/
        1 && a1_href_value !== (a1_href_value =
        /*creator*/
        ctx[0].url)) {
          attr_dev(a1, "href", a1_href_value);
        }

        if ((!current || dirty[0] &
        /*creator*/
        1) && t34_value !== (t34_value =
        /*creator*/
        ctx[0].mail + "")) set_data_dev(t34, t34_value);

        if (dirty[0] &
        /*visible, $pageNum, asideClose*/
        28) {
          each_value_2 = user_pages;
          validate_each_argument(each_value_2);

          var _i13;

          for (_i13 = 0; _i13 < each_value_2.length; _i13 += 1) {
            var child_ctx = get_each_context_2$3(ctx, each_value_2, _i13);

            if (each_blocks[_i13]) {
              each_blocks[_i13].p(child_ctx, dirty);

              transition_in(each_blocks[_i13], 1);
            } else {
              each_blocks[_i13] = create_each_block_2$3(child_ctx);

              each_blocks[_i13].c();

              transition_in(each_blocks[_i13], 1);

              each_blocks[_i13].m(nav, t44);
            }
          }

          group_outros();

          for (_i13 = each_value_2.length; _i13 < each_blocks.length; _i13 += 1) {
            out(_i13);
          }

          check_outros();
        }

        if (
        /*administration*/
        ctx[1] === 1) {
          if (if_block) {
            if_block.p(ctx, dirty);

            if (dirty[0] &
            /*administration*/
            2) {
              transition_in(if_block, 1);
            }
          } else {
            if_block = create_if_block$5(ctx);
            if_block.c();
            transition_in(if_block, 1);
            if_block.m(nav, null);
          }
        } else if (if_block) {
          group_outros();
          transition_out(if_block, 1, 1, function () {
            if_block = null;
          });
          check_outros();
        }
      },
      i: function intro(local) {
        if (current) return;
        transition_in(menu.$$.fragment, local);
        transition_in(help0.$$.fragment, local);
        transition_in(sidehelp.$$.fragment, local);
        transition_in(morevert.$$.fragment, local);
        transition_in(shoppingbasket0.$$.fragment, local);
        transition_in(cancel.$$.fragment, local);
        transition_in(shoppingbasket1.$$.fragment, local);
        transition_in(home.$$.fragment, local);
        transition_in(help1.$$.fragment, local);

        for (var _i14 = 0; _i14 < each_value_2.length; _i14 += 1) {
          transition_in(each_blocks[_i14]);
        }

        transition_in(if_block);
        current = true;
      },
      o: function outro(local) {
        transition_out(menu.$$.fragment, local);
        transition_out(help0.$$.fragment, local);
        transition_out(sidehelp.$$.fragment, local);
        transition_out(morevert.$$.fragment, local);
        transition_out(shoppingbasket0.$$.fragment, local);
        transition_out(cancel.$$.fragment, local);
        transition_out(shoppingbasket1.$$.fragment, local);
        transition_out(home.$$.fragment, local);
        transition_out(help1.$$.fragment, local);
        each_blocks = each_blocks.filter(Boolean);

        for (var _i15 = 0; _i15 < each_blocks.length; _i15 += 1) {
          transition_out(each_blocks[_i15]);
        }

        transition_out(if_block);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(header);
        destroy_component(menu);
        destroy_component(help0);
        destroy_component(sidehelp);
        destroy_component(morevert);
        destroy_component(shoppingbasket0);
        destroy_component(cancel);
        if (detaching) detach_dev(t35);
        if (detaching) detach_dev(aside);
        destroy_component(shoppingbasket1);
        destroy_component(home);
        destroy_component(help1);
        destroy_each(each_blocks, detaching);
        if (if_block) if_block.d();
        if (detaching) detach_dev(t45);
        if (detaching) detach_dev(div7);
        mounted = false;
        run_all(dispose);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$b.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$b($$self, $$props, $$invalidate) {
    var $pageNum;
    validate_store(pageNum, 'pageNum');
    component_subscribe($$self, pageNum, function ($$value) {
      return $$invalidate(3, $pageNum = $$value);
    });
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Navbar', slots, []);
    var creator = $$props.creator;
    var administration = $$props.administration;
    var topAppBar;
    var drawer; // SIDE-MENU

    var menus = []; // MENU 表示

    var visible = []; // SIDE-MENU 表示

    var menuItems = 0; // BUTTON 表示

    onMount(function () {
      window.mdc.autoInit(); // MDC コンポーネント設定

      menuItems = nav_menus.length; // MENU 設定

      drawer = new mdc.drawer.MDCDrawer(document.querySelector('.mdc-drawer'));
      var list = new mdc.list.MDCList.attachTo(document.querySelector('.mdc-list'));
      list.wrapFocus = true;
      topAppBar = new mdc.topAppBar.MDCTopAppBar.attachTo(document.getElementById('app-bar'));
      topAppBar.listen('MDCTopAppBar:nav', function (e) {
        drawer.open = !drawer.open;
      });
      getElements(); // Elements (BUTTON) 初期設定

      [].forEach.call(nav_menus, function (value, i) {
        $$invalidate(2, visible[i] = false, visible);
      });
    }); // Elements (BUTTON) 初期設定

    function getElements() {
      menus = [].map.call(document.getElementsByClassName('mdc-menu'), function (el) {
        return new mdc.menu.MDCMenu(el);
      });
    } // ASIDE MENU を閉じる


    function asideClose() {
      // alert("asideClose");
      drawer.open = !drawer.open;

      for (var i = 0; i < nav_menus.length; i++) {
        $$invalidate(2, visible[i] = false, visible);
      }
    } // MENU 表示 


    function openMenu(n) {
      getElements(); // Elements (BUTTON) 初期化

      menus[n].open = !menus[n].open;
    } // SIDE-MENU 表示 


    function visible_panel(n) {
      $$invalidate(2, visible[n] = !visible[n], visible);
    } // MENU データ


    var nav_menus = [{
      category: "管理者用設定",
      icon: '<svg fill="blue" width="2em" height="2em" viewBox="0 0 24 24"><g><path d="M0,0h24v24H0V0z" fill="none"/><path d="M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z"/></g></svg>',
      items: [{
        name: 'Svelte-Cart について',
        ref: 'about'
      }, {
        name: '基本設定',
        ref: 'settings'
      }, {
        name: 'データエディター',
        ref: 'data-editor'
      }]
    }];
    var writable_props = ['creator', 'administration'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Navbar> was created with unknown prop '".concat(key, "'"));
    });

    var click_handler = function click_handler() {
      return asideClose();
    };

    var click_handler_1 = function click_handler_1() {
      return openMenu(0);
    };

    var click_handler_2 = function click_handler_2() {
      return openMenu(1);
    };

    var click_handler_3 = function click_handler_3() {
      return openMenu(1);
    };

    var click_handler_4 = function click_handler_4() {
      openMenu(0);
      asideClose();
    };

    var click_handler_5 = function click_handler_5(i) {
      $$invalidate(2, visible[i] = false, visible);
      set_store_value(pageNum, $pageNum = i + 1, $pageNum);
      asideClose();
    };

    var click_handler_6 = function click_handler_6(i) {
      return visible_panel(i);
    };

    var click_handler_7 = function click_handler_7() {
      return openMenu(0);
    };

    var click_handler_8 = function click_handler_8(i) {
      return $$invalidate(2, visible[i] = false, visible);
    };

    $$self.$$set = function ($$props) {
      if ('creator' in $$props) $$invalidate(0, creator = $$props.creator);
      if ('administration' in $$props) $$invalidate(1, administration = $$props.administration);
    };

    $$self.$capture_state = function () {
      return {
        pageNum: pageNum,
        creator: creator,
        administration: administration,
        Cancel: Cancel,
        Help: Help,
        Home: Home$1,
        Menu: Menu,
        MoreVert: More_vert,
        PlayCircleFilled: Play_circle_filled,
        ShoppingBasket: Shopping_basket,
        fade: fade,
        SideHelp: SideHelp,
        topAppBar: topAppBar,
        drawer: drawer,
        menus: menus,
        visible: visible,
        menuItems: menuItems,
        getElements: getElements,
        asideClose: asideClose,
        openMenu: openMenu,
        visible_panel: visible_panel,
        nav_menus: nav_menus,
        $pageNum: $pageNum
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('creator' in $$props) $$invalidate(0, creator = $$props.creator);
      if ('administration' in $$props) $$invalidate(1, administration = $$props.administration);
      if ('topAppBar' in $$props) topAppBar = $$props.topAppBar;
      if ('drawer' in $$props) drawer = $$props.drawer;
      if ('menus' in $$props) menus = $$props.menus;
      if ('visible' in $$props) $$invalidate(2, visible = $$props.visible);
      if ('menuItems' in $$props) menuItems = $$props.menuItems;
      if ('nav_menus' in $$props) $$invalidate(7, nav_menus = $$props.nav_menus);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [creator, administration, visible, $pageNum, asideClose, openMenu, visible_panel, nav_menus, click_handler, click_handler_1, click_handler_2, click_handler_3, click_handler_4, click_handler_5, click_handler_6, click_handler_7, click_handler_8];
  }

  var Navbar = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Navbar, _SvelteComponentDev);

    var _super = _createSuper$b(Navbar);

    function Navbar(options) {
      var _this;

      _classCallCheck(this, Navbar);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$b, create_fragment$b, safe_not_equal, {
        creator: 0,
        administration: 1
      }, null, [-1, -1]);
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Navbar",
        options: options,
        id: create_fragment$b.name
      });
      var ctx = _this.$$.ctx;
      var props = options.props || {};

      if (
      /*creator*/
      ctx[0] === undefined && !('creator' in props)) {
        console.warn("<Navbar> was created without expected prop 'creator'");
      }

      if (
      /*administration*/
      ctx[1] === undefined && !('administration' in props)) {
        console.warn("<Navbar> was created without expected prop 'administration'");
      }

      return _this;
    }

    _createClass(Navbar, [{
      key: "creator",
      get: function get() {
        throw new Error("<Navbar>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Navbar>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "administration",
      get: function get() {
        throw new Error("<Navbar>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Navbar>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Navbar;
  }(SvelteComponentDev);

  function _createSuper$a(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$a(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$a() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$a = "src/components/Footer.svelte";

  function get_each_context$3(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[3] = list[i].code;
    child_ctx[4] = list[i].title;
    child_ctx[5] = list[i].name;
    child_ctx[6] = list[i].image;
    child_ctx[7] = list[i].icon;
    child_ctx[8] = list[i].url;
    return child_ctx;
  }

  function get_each_context_1$3(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[5] = list[i].name;
    child_ctx[8] = list[i].url;
    child_ctx[6] = list[i].image;
    return child_ctx;
  } // (65:3) {#if footer.info === 1}


  function create_if_block_2$3(ctx) {
    var div7;
    var div6;
    var div3;
    var div0;
    var t0;
    var div2;
    var h2;
    var raw0_value = user.shop + "";
    var t1;
    var div1;
    var t2_value = user.postage + "";
    var t2;
    var br;
    var html_tag;
    var raw1_value = user.address + "";
    var t3;
    var div5;
    var div4;
    var each_value_1 = sns;
    validate_each_argument(each_value_1);
    var each_blocks = [];

    for (var i = 0; i < each_value_1.length; i += 1) {
      each_blocks[i] = create_each_block_1$3(get_each_context_1$3(ctx, each_value_1, i));
    }

    var block = {
      c: function create() {
        div7 = element("div");
        div6 = element("div");
        div3 = element("div");
        div0 = element("div");
        t0 = space();
        div2 = element("div");
        h2 = element("h2");
        t1 = space();
        div1 = element("div");
        t2 = text(t2_value);
        br = element("br");
        html_tag = new HtmlTag();
        t3 = space();
        div5 = element("div");
        div4 = element("div");

        for (var _i = 0; _i < each_blocks.length; _i += 1) {
          each_blocks[_i].c();
        }

        attr_dev(div0, "class", "mdc-card__media mdc-card__media--square demo-card__media card-image-ex svelte-i31uee");
        set_style(div0, "background-image", "url(\"./images/" + footer.image + "\")");
        add_location(div0, file$a, 70, 10, 1269);
        attr_dev(h2, "class", "mdc-card__title mdc-typography mdc-typography--headline6");
        add_location(h2, file$a, 73, 12, 1519);
        add_location(br, file$a, 77, 28, 1744);
        html_tag.a = null;
        set_style(div1, "text-align", "left");
        set_style(div1, "font-size", "0.6em");
        set_style(div1, "padding", "0px 4px");
        add_location(div1, file$a, 76, 12, 1653);
        attr_dev(div2, "class", "mdc-card__primary");
        set_style(div2, "color", "green");
        add_location(div2, file$a, 72, 10, 1454);
        attr_dev(div3, "class", "mdc-card__primary-action my-card__primary-action svelte-i31uee");
        attr_dev(div3, "tabindex", "0");
        add_location(div3, file$a, 69, 9, 1183);
        attr_dev(div4, "class", "mdc-card__action-icons");
        add_location(div4, file$a, 83, 10, 1873);
        attr_dev(div5, "class", "mdc-card__actions");
        add_location(div5, file$a, 82, 9, 1831);
        attr_dev(div6, "class", "mdc-card demo-card ui-control svelte-i31uee");
        add_location(div6, file$a, 67, 6, 1129);
        attr_dev(div7, "class", "mdc-layout-grid__cell");
        add_location(div7, file$a, 66, 4, 1087);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div7, anchor);
        append_dev(div7, div6);
        append_dev(div6, div3);
        append_dev(div3, div0);
        append_dev(div3, t0);
        append_dev(div3, div2);
        append_dev(div2, h2);
        h2.innerHTML = raw0_value;
        append_dev(div2, t1);
        append_dev(div2, div1);
        append_dev(div1, t2);
        append_dev(div1, br);
        html_tag.m(raw1_value, div1);
        append_dev(div6, t3);
        append_dev(div6, div5);
        append_dev(div5, div4);

        for (var _i2 = 0; _i2 < each_blocks.length; _i2 += 1) {
          each_blocks[_i2].m(div4, null);
        }
      },
      p: function update(ctx, dirty) {
        if (dirty &
        /*sns*/
        0) {
          each_value_1 = sns;
          validate_each_argument(each_value_1);

          var _i3;

          for (_i3 = 0; _i3 < each_value_1.length; _i3 += 1) {
            var child_ctx = get_each_context_1$3(ctx, each_value_1, _i3);

            if (each_blocks[_i3]) {
              each_blocks[_i3].p(child_ctx, dirty);
            } else {
              each_blocks[_i3] = create_each_block_1$3(child_ctx);

              each_blocks[_i3].c();

              each_blocks[_i3].m(div4, null);
            }
          }

          for (; _i3 < each_blocks.length; _i3 += 1) {
            each_blocks[_i3].d(1);
          }

          each_blocks.length = each_value_1.length;
        }
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div7);
        destroy_each(each_blocks, detaching);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_2$3.name,
      type: "if",
      source: "(65:3) {#if footer.info === 1}",
      ctx: ctx
    });
    return block;
  } // (86:14) {#each sns as {name, url, image}


  function create_each_block_1$3(ctx) {
    var a;
    var img;
    var img_src_value;
    var t;
    var block = {
      c: function create() {
        a = element("a");
        img = element("img");
        t = space();
        if (!src_url_equal(img.src, img_src_value = "./images/" +
        /*image*/
        ctx[6])) attr_dev(img, "src", img_src_value);
        attr_dev(img, "alt", /*name*/
        ctx[5]);
        attr_dev(img, "title", /*name*/
        ctx[5]);
        attr_dev(img, "width", "32");
        add_location(img, file$a, 87, 20, 2073);
        attr_dev(a, "href", /*url*/
        ctx[8]);
        attr_dev(a, "target", "_blank");
        attr_dev(a, "class", "sns svelte-i31uee");
        add_location(a, file$a, 86, 17, 2008);
      },
      m: function mount(target, anchor) {
        insert_dev(target, a, anchor);
        append_dev(a, img);
        append_dev(a, t);
      },
      p: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(a);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block_1$3.name,
      type: "each",
      source: "(86:14) {#each sns as {name, url, image}",
      ctx: ctx
    });
    return block;
  } // (102:3) {#if code === 1}


  function create_if_block_1$3(ctx) {
    var div6;
    var div5;
    var div2;
    var div0;
    var t0;
    var div1;
    var h2;
    var raw0_value =
    /*title*/
    ctx[4] + "";
    var t1;
    var h3;
    var raw1_value =
    /*name*/
    ctx[5] + "";
    var t2;
    var div4;
    var div3;
    var a;
    var img;
    var img_src_value;
    var block = {
      c: function create() {
        div6 = element("div");
        div5 = element("div");
        div2 = element("div");
        div0 = element("div");
        t0 = space();
        div1 = element("div");
        h2 = element("h2");
        t1 = space();
        h3 = element("h3");
        t2 = space();
        div4 = element("div");
        div3 = element("div");
        a = element("a");
        img = element("img");
        attr_dev(div0, "class", "mdc-card__media mdc-card__media--square demo-card__media card-image svelte-i31uee");
        set_style(div0, "background-image", "url(\"./images/" +
        /*image*/
        ctx[6] + "\")");
        add_location(div0, file$a, 107, 10, 2518);
        attr_dev(h2, "class", "mdc-card__title mdc-typography mdc-typography--headline6");
        add_location(h2, file$a, 110, 12, 2758);
        attr_dev(h3, "class", "mdc-card__subtitle mdc-typography mdc-typography--subtitle2");
        add_location(h3, file$a, 113, 12, 2888);
        attr_dev(div1, "class", "mdc-card__primary");
        set_style(div1, "color", "green");
        add_location(div1, file$a, 109, 10, 2693);
        attr_dev(div2, "class", "mdc-card__primary-action my-card__primary-action svelte-i31uee");
        attr_dev(div2, "tabindex", "0");
        add_location(div2, file$a, 106, 8, 2432);
        if (!src_url_equal(img.src, img_src_value = "./images/" +
        /*icon*/
        ctx[7])) attr_dev(img, "src", img_src_value);
        attr_dev(img, "alt", /*name*/
        ctx[5]);
        attr_dev(img, "title", /*name*/
        ctx[5]);
        attr_dev(img, "width", "32");
        add_location(img, file$a, 122, 17, 3203);
        attr_dev(a, "href", /*url*/
        ctx[8]);
        attr_dev(a, "target", "_blank");
        attr_dev(a, "class", "sns svelte-i31uee");
        add_location(a, file$a, 121, 14, 3141);
        attr_dev(div3, "class", "mdc-card__action-icons");
        add_location(div3, file$a, 120, 10, 3090);
        attr_dev(div4, "class", "mdc-card__actions");
        add_location(div4, file$a, 118, 8, 3047);
        attr_dev(div5, "class", "mdc-card demo-card ui-control svelte-i31uee");
        add_location(div5, file$a, 105, 6, 2380);
        attr_dev(div6, "class", "mdc-layout-grid__cell");
        add_location(div6, file$a, 103, 4, 2337);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div6, anchor);
        append_dev(div6, div5);
        append_dev(div5, div2);
        append_dev(div2, div0);
        append_dev(div2, t0);
        append_dev(div2, div1);
        append_dev(div1, h2);
        h2.innerHTML = raw0_value;
        append_dev(div1, t1);
        append_dev(div1, h3);
        h3.innerHTML = raw1_value;
        append_dev(div5, t2);
        append_dev(div5, div4);
        append_dev(div4, div3);
        append_dev(div3, a);
        append_dev(a, img);
      },
      p: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(div6);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_1$3.name,
      type: "if",
      source: "(102:3) {#if code === 1}",
      ctx: ctx
    });
    return block;
  } // (100:0) {#each qr as {code, title, name, image, icon, url}


  function create_each_block$3(ctx) {
    var if_block_anchor;
    var if_block =
    /*code*/
    ctx[3] === 1 && create_if_block_1$3(ctx);
    var block = {
      c: function create() {
        if (if_block) if_block.c();
        if_block_anchor = empty();
      },
      m: function mount(target, anchor) {
        if (if_block) if_block.m(target, anchor);
        insert_dev(target, if_block_anchor, anchor);
      },
      p: function update(ctx, dirty) {
        if (
        /*code*/
        ctx[3] === 1) if_block.p(ctx, dirty);
      },
      d: function destroy(detaching) {
        if (if_block) if_block.d(detaching);
        if (detaching) detach_dev(if_block_anchor);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block$3.name,
      type: "each",
      source: "(100:0) {#each qr as {code, title, name, image, icon, url}",
      ctx: ctx
    });
    return block;
  } // (135:5) {#if map.map === 1}


  function create_if_block$4(ctx) {
    var div2;
    var div1;
    var div0;
    var iframe;
    var iframe_src_value;
    var block = {
      c: function create() {
        div2 = element("div");
        div1 = element("div");
        div0 = element("div");
        iframe = element("iframe");
        if (!src_url_equal(iframe.src, iframe_src_value = "https://maps.google.co.jp/maps?&output=embed&q=loc:" + map.geocode + "&q=" + map.name + "&z=" + map.zoom)) attr_dev(iframe, "src", iframe_src_value);
        attr_dev(iframe, "frameborder", "0");
        set_style(iframe, "border", "0");
        set_style(iframe, "width", map.width + "%");
        set_style(iframe, "height", map.height + "px");
        iframe.allowFullscreen = "";
        attr_dev(iframe, "aria-hidden", "false");
        attr_dev(iframe, "tabindex", "0");
        add_location(iframe, file$a, 141, 17, 3631);
        attr_dev(div0, "class", "mdc-card__primary-action my-card__primary-action");
        attr_dev(div0, "tabindex", "0");
        add_location(div0, file$a, 139, 14, 3518);
        attr_dev(div1, "class", "mdc-card my-ui-control");
        add_location(div1, file$a, 138, 12, 3467);
        attr_dev(div2, "class", "mdc-layout-grid__cell");
        add_location(div2, file$a, 136, 9, 3402);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div2, anchor);
        append_dev(div2, div1);
        append_dev(div1, div0);
        append_dev(div0, iframe);
      },
      p: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(div2);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block$4.name,
      type: "if",
      source: "(135:5) {#if map.map === 1}",
      ctx: ctx
    });
    return block;
  }

  function create_fragment$a(ctx) {
    var div3;
    var div1;
    var div0;
    var t0;
    var t1;
    var t2;
    var h2;
    var a;
    var shoppingbasket;
    var t3;
    var t4_value = user.shop + "";
    var t4;
    var t5;
    var p;
    var t6_value = user.email + "";
    var t6;
    var br;
    var t7;
    var t8;
    var t9;
    var div2;
    var t10_value =
    /*creator*/
    ctx[1].app_name + "";
    var t10;
    var t11;
    var t12;
    var current;
    var if_block0 = footer.info === 1 && create_if_block_2$3(ctx);
    var each_value = qr;
    validate_each_argument(each_value);
    var each_blocks = [];

    for (var i = 0; i < each_value.length; i += 1) {
      each_blocks[i] = create_each_block$3(get_each_context$3(ctx, each_value, i));
    }

    var if_block1 = map.map === 1 && create_if_block$4(ctx);
    shoppingbasket = new Shopping_basket({
      $$inline: true
    });
    var block = {
      c: function create() {
        div3 = element("div");
        div1 = element("div");
        div0 = element("div");
        if (if_block0) if_block0.c();
        t0 = space();

        for (var _i4 = 0; _i4 < each_blocks.length; _i4 += 1) {
          each_blocks[_i4].c();
        }

        t1 = space();
        if (if_block1) if_block1.c();
        t2 = space();
        h2 = element("h2");
        a = element("a");
        create_component(shoppingbasket.$$.fragment);
        t3 = text(" ");
        t4 = text(t4_value);
        t5 = space();
        p = element("p");
        t6 = text(t6_value);
        br = element("br");
        t7 = text("\n\t\t© 2020 - ");
        t8 = text(
        /*year*/
        ctx[0]);
        t9 = space();
        div2 = element("div");
        t10 = text(t10_value);
        t11 = text("  v. ");
        t12 = text(
        /*$version*/
        ctx[2]);
        attr_dev(div0, "class", "mdc-layout-grid__inner");
        add_location(div0, file$a, 62, 2, 1014);
        attr_dev(div1, "class", "mdc-layout-grid");
        add_location(div1, file$a, 61, 0, 982);
        attr_dev(a, "href", "index.html");
        attr_dev(a, "class", "svelte-i31uee");
        add_location(a, file$a, 160, 4, 4122);
        add_location(h2, file$a, 159, 3, 4113);
        add_location(br, file$a, 165, 14, 4226);
        add_location(p, file$a, 164, 1, 4208);
        attr_dev(div2, "class", "version svelte-i31uee");
        add_location(div2, file$a, 169, 3, 4265);
        attr_dev(div3, "class", "footer svelte-i31uee");
        add_location(div3, file$a, 59, 0, 960);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, div3, anchor);
        append_dev(div3, div1);
        append_dev(div1, div0);
        if (if_block0) if_block0.m(div0, null);
        append_dev(div0, t0);

        for (var _i5 = 0; _i5 < each_blocks.length; _i5 += 1) {
          each_blocks[_i5].m(div0, null);
        }

        append_dev(div0, t1);
        if (if_block1) if_block1.m(div0, null);
        append_dev(div3, t2);
        append_dev(div3, h2);
        append_dev(h2, a);
        mount_component(shoppingbasket, a, null);
        append_dev(a, t3);
        append_dev(a, t4);
        append_dev(div3, t5);
        append_dev(div3, p);
        append_dev(p, t6);
        append_dev(p, br);
        append_dev(p, t7);
        append_dev(p, t8);
        append_dev(div3, t9);
        append_dev(div3, div2);
        append_dev(div2, t10);
        append_dev(div2, t11);
        append_dev(div2, t12);
        current = true;
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (footer.info === 1) if_block0.p(ctx, dirty);

        if (dirty &
        /*qr*/
        0) {
          each_value = qr;
          validate_each_argument(each_value);

          var _i6;

          for (_i6 = 0; _i6 < each_value.length; _i6 += 1) {
            var child_ctx = get_each_context$3(ctx, each_value, _i6);

            if (each_blocks[_i6]) {
              each_blocks[_i6].p(child_ctx, dirty);
            } else {
              each_blocks[_i6] = create_each_block$3(child_ctx);

              each_blocks[_i6].c();

              each_blocks[_i6].m(div0, t1);
            }
          }

          for (; _i6 < each_blocks.length; _i6 += 1) {
            each_blocks[_i6].d(1);
          }

          each_blocks.length = each_value.length;
        }

        if (map.map === 1) if_block1.p(ctx, dirty);
        if (!current || dirty &
        /*year*/
        1) set_data_dev(t8,
        /*year*/
        ctx[0]);
        if ((!current || dirty &
        /*creator*/
        2) && t10_value !== (t10_value =
        /*creator*/
        ctx[1].app_name + "")) set_data_dev(t10, t10_value);
        if (!current || dirty &
        /*$version*/
        4) set_data_dev(t12,
        /*$version*/
        ctx[2]);
      },
      i: function intro(local) {
        if (current) return;
        transition_in(shoppingbasket.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        transition_out(shoppingbasket.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div3);
        if (if_block0) if_block0.d();
        destroy_each(each_blocks, detaching);
        if (if_block1) if_block1.d();
        destroy_component(shoppingbasket);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$a.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$a($$self, $$props, $$invalidate) {
    var $version;
    validate_store(version, 'version');
    component_subscribe($$self, version, function ($$value) {
      return $$invalidate(2, $version = $$value);
    });
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Footer', slots, []);
    var year = $$props.year;
    var creator = $$props.creator;
    var writable_props = ['year', 'creator'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Footer> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('year' in $$props) $$invalidate(0, year = $$props.year);
      if ('creator' in $$props) $$invalidate(1, creator = $$props.creator);
    };

    $$self.$capture_state = function () {
      return {
        year: year,
        creator: creator,
        version: version,
        ShoppingBasket: Shopping_basket,
        $version: $version
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('year' in $$props) $$invalidate(0, year = $$props.year);
      if ('creator' in $$props) $$invalidate(1, creator = $$props.creator);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [year, creator, $version];
  }

  var Footer = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Footer, _SvelteComponentDev);

    var _super = _createSuper$a(Footer);

    function Footer(options) {
      var _this;

      _classCallCheck(this, Footer);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$a, create_fragment$a, safe_not_equal, {
        year: 0,
        creator: 1
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Footer",
        options: options,
        id: create_fragment$a.name
      });
      var ctx = _this.$$.ctx;
      var props = options.props || {};

      if (
      /*year*/
      ctx[0] === undefined && !('year' in props)) {
        console.warn("<Footer> was created without expected prop 'year'");
      }

      if (
      /*creator*/
      ctx[1] === undefined && !('creator' in props)) {
        console.warn("<Footer> was created without expected prop 'creator'");
      }

      return _this;
    }

    _createClass(Footer, [{
      key: "year",
      get: function get() {
        throw new Error("<Footer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Footer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "creator",
      get: function get() {
        throw new Error("<Footer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Footer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Footer;
  }(SvelteComponentDev);

  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
      var info = gen[key](arg);
      var value = info.value;
    } catch (error) {
      reject(error);
      return;
    }

    if (info.done) {
      resolve(value);
    } else {
      Promise.resolve(value).then(_next, _throw);
    }
  }

  function _asyncToGenerator(fn) {
    return function () {
      var self = this,
          args = arguments;
      return new Promise(function (resolve, reject) {
        var gen = fn.apply(self, args);

        function _next(value) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
        }

        function _throw(err) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
        }

        _next(undefined);
      });
    };
  }

  var defineWellKnownSymbol$1 = defineWellKnownSymbol$4;

  // `Symbol.asyncIterator` well-known symbol
  // https://tc39.es/ecma262/#sec-symbol.asynciterator
  defineWellKnownSymbol$1('asyncIterator');

  var defineWellKnownSymbol = defineWellKnownSymbol$4;

  // `Symbol.toStringTag` well-known symbol
  // https://tc39.es/ecma262/#sec-symbol.tostringtag
  defineWellKnownSymbol('toStringTag');

  var global$3 = global$17;
  var setToStringTag$1 = setToStringTag$8;

  // JSON[@@toStringTag] property
  // https://tc39.es/ecma262/#sec-json-@@tostringtag
  setToStringTag$1(global$3.JSON, 'JSON', true);

  var setToStringTag = setToStringTag$8;

  // Math[@@toStringTag] property
  // https://tc39.es/ecma262/#sec-math-@@tostringtag
  setToStringTag(Math, 'Math', true);

  var $$6 = _export;
  var fails$2 = fails$D;
  var toObject = toObject$h;
  var nativeGetPrototypeOf = objectGetPrototypeOf;
  var CORRECT_PROTOTYPE_GETTER = correctPrototypeGetter;

  var FAILS_ON_PRIMITIVES = fails$2(function () { nativeGetPrototypeOf(1); });

  // `Object.getPrototypeOf` method
  // https://tc39.es/ecma262/#sec-object.getprototypeof
  $$6({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER }, {
    getPrototypeOf: function getPrototypeOf(it) {
      return nativeGetPrototypeOf(toObject(it));
    }
  });

  var runtime = {exports: {}};

  (function (module) {
    var runtime = function (exports) {

      var Op = Object.prototype;
      var hasOwn = Op.hasOwnProperty;
      var undefined$1; // More compressible than void 0.

      var $Symbol = typeof Symbol === "function" ? Symbol : {};
      var iteratorSymbol = $Symbol.iterator || "@@iterator";
      var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
      var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

      function define(obj, key, value) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
        return obj[key];
      }

      try {
        // IE 8 has a broken Object.defineProperty that only works on DOM objects.
        define({}, "");
      } catch (err) {
        define = function define(obj, key, value) {
          return obj[key] = value;
        };
      }

      function wrap(innerFn, outerFn, self, tryLocsList) {
        // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
        var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
        var generator = Object.create(protoGenerator.prototype);
        var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,
        // .throw, and .return methods.

        generator._invoke = makeInvokeMethod(innerFn, self, context);
        return generator;
      }

      exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion
      // record like context.tryEntries[i].completion. This interface could
      // have been (and was previously) designed to take a closure to be
      // invoked without arguments, but in all the cases we care about we
      // already have an existing method we want to call, so there's no need
      // to create a new function object. We can even get away with assuming
      // the method takes exactly one argument, since that happens to be true
      // in every case, so we don't have to touch the arguments object. The
      // only additional allocation required is the completion record, which
      // has a stable shape and so hopefully should be cheap to allocate.

      function tryCatch(fn, obj, arg) {
        try {
          return {
            type: "normal",
            arg: fn.call(obj, arg)
          };
        } catch (err) {
          return {
            type: "throw",
            arg: err
          };
        }
      }

      var GenStateSuspendedStart = "suspendedStart";
      var GenStateSuspendedYield = "suspendedYield";
      var GenStateExecuting = "executing";
      var GenStateCompleted = "completed"; // Returning this object from the innerFn has the same effect as
      // breaking out of the dispatch switch statement.

      var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and
      // .constructor.prototype properties for functions that return Generator
      // objects. For full spec compliance, you may wish to configure your
      // minifier not to mangle the names of these two functions.

      function Generator() {}

      function GeneratorFunction() {}

      function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that
      // don't natively support it.


      var IteratorPrototype = {};
      define(IteratorPrototype, iteratorSymbol, function () {
        return this;
      });
      var getProto = Object.getPrototypeOf;
      var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

      if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
        // This environment has a native %IteratorPrototype%; use it instead
        // of the polyfill.
        IteratorPrototype = NativeIteratorPrototype;
      }

      var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
      GeneratorFunction.prototype = GeneratorFunctionPrototype;
      define(Gp, "constructor", GeneratorFunctionPrototype);
      define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
      GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"); // Helper for defining the .next, .throw, and .return methods of the
      // Iterator interface in terms of a single ._invoke method.

      function defineIteratorMethods(prototype) {
        ["next", "throw", "return"].forEach(function (method) {
          define(prototype, method, function (arg) {
            return this._invoke(method, arg);
          });
        });
      }

      exports.isGeneratorFunction = function (genFun) {
        var ctor = typeof genFun === "function" && genFun.constructor;
        return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
      };

      exports.mark = function (genFun) {
        if (Object.setPrototypeOf) {
          Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
        } else {
          genFun.__proto__ = GeneratorFunctionPrototype;
          define(genFun, toStringTagSymbol, "GeneratorFunction");
        }

        genFun.prototype = Object.create(Gp);
        return genFun;
      }; // Within the body of any async function, `await x` is transformed to
      // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
      // `hasOwn.call(value, "__await")` to determine if the yielded value is
      // meant to be awaited.


      exports.awrap = function (arg) {
        return {
          __await: arg
        };
      };

      function AsyncIterator(generator, PromiseImpl) {
        function invoke(method, arg, resolve, reject) {
          var record = tryCatch(generator[method], generator, arg);

          if (record.type === "throw") {
            reject(record.arg);
          } else {
            var result = record.arg;
            var value = result.value;

            if (value && _typeof(value) === "object" && hasOwn.call(value, "__await")) {
              return PromiseImpl.resolve(value.__await).then(function (value) {
                invoke("next", value, resolve, reject);
              }, function (err) {
                invoke("throw", err, resolve, reject);
              });
            }

            return PromiseImpl.resolve(value).then(function (unwrapped) {
              // When a yielded Promise is resolved, its final value becomes
              // the .value of the Promise<{value,done}> result for the
              // current iteration.
              result.value = unwrapped;
              resolve(result);
            }, function (error) {
              // If a rejected Promise was yielded, throw the rejection back
              // into the async generator function so it can be handled there.
              return invoke("throw", error, resolve, reject);
            });
          }
        }

        var previousPromise;

        function enqueue(method, arg) {
          function callInvokeWithMethodAndArg() {
            return new PromiseImpl(function (resolve, reject) {
              invoke(method, arg, resolve, reject);
            });
          }

          return previousPromise = // If enqueue has been called before, then we want to wait until
          // all previous Promises have been resolved before calling invoke,
          // so that results are always delivered in the correct order. If
          // enqueue has not been called before, then it is important to
          // call invoke immediately, without waiting on a callback to fire,
          // so that the async generator function has the opportunity to do
          // any necessary setup in a predictable way. This predictability
          // is why the Promise constructor synchronously invokes its
          // executor callback, and why async functions synchronously
          // execute code before the first await. Since we implement simple
          // async functions in terms of async generators, it is especially
          // important to get this right, even though it requires care.
          previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
        } // Define the unified helper method that is used to implement .next,
        // .throw, and .return (see defineIteratorMethods).


        this._invoke = enqueue;
      }

      defineIteratorMethods(AsyncIterator.prototype);
      define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
        return this;
      });
      exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of
      // AsyncIterator objects; they just return a Promise for the value of
      // the final result produced by the iterator.

      exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
        if (PromiseImpl === void 0) PromiseImpl = Promise;
        var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
        return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
        : iter.next().then(function (result) {
          return result.done ? result.value : iter.next();
        });
      };

      function makeInvokeMethod(innerFn, self, context) {
        var state = GenStateSuspendedStart;
        return function invoke(method, arg) {
          if (state === GenStateExecuting) {
            throw new Error("Generator is already running");
          }

          if (state === GenStateCompleted) {
            if (method === "throw") {
              throw arg;
            } // Be forgiving, per 25.3.3.3.3 of the spec:
            // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume


            return doneResult();
          }

          context.method = method;
          context.arg = arg;

          while (true) {
            var delegate = context.delegate;

            if (delegate) {
              var delegateResult = maybeInvokeDelegate(delegate, context);

              if (delegateResult) {
                if (delegateResult === ContinueSentinel) continue;
                return delegateResult;
              }
            }

            if (context.method === "next") {
              // Setting context._sent for legacy support of Babel's
              // function.sent implementation.
              context.sent = context._sent = context.arg;
            } else if (context.method === "throw") {
              if (state === GenStateSuspendedStart) {
                state = GenStateCompleted;
                throw context.arg;
              }

              context.dispatchException(context.arg);
            } else if (context.method === "return") {
              context.abrupt("return", context.arg);
            }

            state = GenStateExecuting;
            var record = tryCatch(innerFn, self, context);

            if (record.type === "normal") {
              // If an exception is thrown from innerFn, we leave state ===
              // GenStateExecuting and loop back for another invocation.
              state = context.done ? GenStateCompleted : GenStateSuspendedYield;

              if (record.arg === ContinueSentinel) {
                continue;
              }

              return {
                value: record.arg,
                done: context.done
              };
            } else if (record.type === "throw") {
              state = GenStateCompleted; // Dispatch the exception by looping back around to the
              // context.dispatchException(context.arg) call above.

              context.method = "throw";
              context.arg = record.arg;
            }
          }
        };
      } // Call delegate.iterator[context.method](context.arg) and handle the
      // result, either by returning a { value, done } result from the
      // delegate iterator, or by modifying context.method and context.arg,
      // setting context.delegate to null, and returning the ContinueSentinel.


      function maybeInvokeDelegate(delegate, context) {
        var method = delegate.iterator[context.method];

        if (method === undefined$1) {
          // A .throw or .return when the delegate iterator has no .throw
          // method always terminates the yield* loop.
          context.delegate = null;

          if (context.method === "throw") {
            // Note: ["return"] must be used for ES3 parsing compatibility.
            if (delegate.iterator["return"]) {
              // If the delegate iterator has a return method, give it a
              // chance to clean up.
              context.method = "return";
              context.arg = undefined$1;
              maybeInvokeDelegate(delegate, context);

              if (context.method === "throw") {
                // If maybeInvokeDelegate(context) changed context.method from
                // "return" to "throw", let that override the TypeError below.
                return ContinueSentinel;
              }
            }

            context.method = "throw";
            context.arg = new TypeError("The iterator does not provide a 'throw' method");
          }

          return ContinueSentinel;
        }

        var record = tryCatch(method, delegate.iterator, context.arg);

        if (record.type === "throw") {
          context.method = "throw";
          context.arg = record.arg;
          context.delegate = null;
          return ContinueSentinel;
        }

        var info = record.arg;

        if (!info) {
          context.method = "throw";
          context.arg = new TypeError("iterator result is not an object");
          context.delegate = null;
          return ContinueSentinel;
        }

        if (info.done) {
          // Assign the result of the finished delegate to the temporary
          // variable specified by delegate.resultName (see delegateYield).
          context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).

          context.next = delegate.nextLoc; // If context.method was "throw" but the delegate handled the
          // exception, let the outer generator proceed normally. If
          // context.method was "next", forget context.arg since it has been
          // "consumed" by the delegate iterator. If context.method was
          // "return", allow the original .return call to continue in the
          // outer generator.

          if (context.method !== "return") {
            context.method = "next";
            context.arg = undefined$1;
          }
        } else {
          // Re-yield the result returned by the delegate method.
          return info;
        } // The delegate iterator is finished, so forget it and continue with
        // the outer generator.


        context.delegate = null;
        return ContinueSentinel;
      } // Define Generator.prototype.{next,throw,return} in terms of the
      // unified ._invoke helper method.


      defineIteratorMethods(Gp);
      define(Gp, toStringTagSymbol, "Generator"); // A Generator should always return itself as the iterator object when the
      // @@iterator function is called on it. Some browsers' implementations of the
      // iterator prototype chain incorrectly implement this, causing the Generator
      // object to not be returned from this call. This ensures that doesn't happen.
      // See https://github.com/facebook/regenerator/issues/274 for more details.

      define(Gp, iteratorSymbol, function () {
        return this;
      });
      define(Gp, "toString", function () {
        return "[object Generator]";
      });

      function pushTryEntry(locs) {
        var entry = {
          tryLoc: locs[0]
        };

        if (1 in locs) {
          entry.catchLoc = locs[1];
        }

        if (2 in locs) {
          entry.finallyLoc = locs[2];
          entry.afterLoc = locs[3];
        }

        this.tryEntries.push(entry);
      }

      function resetTryEntry(entry) {
        var record = entry.completion || {};
        record.type = "normal";
        delete record.arg;
        entry.completion = record;
      }

      function Context(tryLocsList) {
        // The root entry object (effectively a try statement without a catch
        // or a finally block) gives us a place to store values thrown from
        // locations where there is no enclosing try statement.
        this.tryEntries = [{
          tryLoc: "root"
        }];
        tryLocsList.forEach(pushTryEntry, this);
        this.reset(true);
      }

      exports.keys = function (object) {
        var keys = [];

        for (var key in object) {
          keys.push(key);
        }

        keys.reverse(); // Rather than returning an object with a next method, we keep
        // things simple and return the next function itself.

        return function next() {
          while (keys.length) {
            var key = keys.pop();

            if (key in object) {
              next.value = key;
              next.done = false;
              return next;
            }
          } // To avoid creating an additional object, we just hang the .value
          // and .done properties off the next function object itself. This
          // also ensures that the minifier will not anonymize the function.


          next.done = true;
          return next;
        };
      };

      function values(iterable) {
        if (iterable) {
          var iteratorMethod = iterable[iteratorSymbol];

          if (iteratorMethod) {
            return iteratorMethod.call(iterable);
          }

          if (typeof iterable.next === "function") {
            return iterable;
          }

          if (!isNaN(iterable.length)) {
            var i = -1,
                next = function next() {
              while (++i < iterable.length) {
                if (hasOwn.call(iterable, i)) {
                  next.value = iterable[i];
                  next.done = false;
                  return next;
                }
              }

              next.value = undefined$1;
              next.done = true;
              return next;
            };

            return next.next = next;
          }
        } // Return an iterator with no values.


        return {
          next: doneResult
        };
      }

      exports.values = values;

      function doneResult() {
        return {
          value: undefined$1,
          done: true
        };
      }

      Context.prototype = {
        constructor: Context,
        reset: function reset(skipTempReset) {
          this.prev = 0;
          this.next = 0; // Resetting context._sent for legacy support of Babel's
          // function.sent implementation.

          this.sent = this._sent = undefined$1;
          this.done = false;
          this.delegate = null;
          this.method = "next";
          this.arg = undefined$1;
          this.tryEntries.forEach(resetTryEntry);

          if (!skipTempReset) {
            for (var name in this) {
              // Not sure about the optimal order of these conditions:
              if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
                this[name] = undefined$1;
              }
            }
          }
        },
        stop: function stop() {
          this.done = true;
          var rootEntry = this.tryEntries[0];
          var rootRecord = rootEntry.completion;

          if (rootRecord.type === "throw") {
            throw rootRecord.arg;
          }

          return this.rval;
        },
        dispatchException: function dispatchException(exception) {
          if (this.done) {
            throw exception;
          }

          var context = this;

          function handle(loc, caught) {
            record.type = "throw";
            record.arg = exception;
            context.next = loc;

            if (caught) {
              // If the dispatched exception was caught by a catch block,
              // then let that catch block handle the exception normally.
              context.method = "next";
              context.arg = undefined$1;
            }

            return !!caught;
          }

          for (var i = this.tryEntries.length - 1; i >= 0; --i) {
            var entry = this.tryEntries[i];
            var record = entry.completion;

            if (entry.tryLoc === "root") {
              // Exception thrown outside of any try block that could handle
              // it, so set the completion value of the entire function to
              // throw the exception.
              return handle("end");
            }

            if (entry.tryLoc <= this.prev) {
              var hasCatch = hasOwn.call(entry, "catchLoc");
              var hasFinally = hasOwn.call(entry, "finallyLoc");

              if (hasCatch && hasFinally) {
                if (this.prev < entry.catchLoc) {
                  return handle(entry.catchLoc, true);
                } else if (this.prev < entry.finallyLoc) {
                  return handle(entry.finallyLoc);
                }
              } else if (hasCatch) {
                if (this.prev < entry.catchLoc) {
                  return handle(entry.catchLoc, true);
                }
              } else if (hasFinally) {
                if (this.prev < entry.finallyLoc) {
                  return handle(entry.finallyLoc);
                }
              } else {
                throw new Error("try statement without catch or finally");
              }
            }
          }
        },
        abrupt: function abrupt(type, arg) {
          for (var i = this.tryEntries.length - 1; i >= 0; --i) {
            var entry = this.tryEntries[i];

            if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
              var finallyEntry = entry;
              break;
            }
          }

          if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
            // Ignore the finally entry if control is not jumping to a
            // location outside the try/catch block.
            finallyEntry = null;
          }

          var record = finallyEntry ? finallyEntry.completion : {};
          record.type = type;
          record.arg = arg;

          if (finallyEntry) {
            this.method = "next";
            this.next = finallyEntry.finallyLoc;
            return ContinueSentinel;
          }

          return this.complete(record);
        },
        complete: function complete(record, afterLoc) {
          if (record.type === "throw") {
            throw record.arg;
          }

          if (record.type === "break" || record.type === "continue") {
            this.next = record.arg;
          } else if (record.type === "return") {
            this.rval = this.arg = record.arg;
            this.method = "return";
            this.next = "end";
          } else if (record.type === "normal" && afterLoc) {
            this.next = afterLoc;
          }

          return ContinueSentinel;
        },
        finish: function finish(finallyLoc) {
          for (var i = this.tryEntries.length - 1; i >= 0; --i) {
            var entry = this.tryEntries[i];

            if (entry.finallyLoc === finallyLoc) {
              this.complete(entry.completion, entry.afterLoc);
              resetTryEntry(entry);
              return ContinueSentinel;
            }
          }
        },
        "catch": function _catch(tryLoc) {
          for (var i = this.tryEntries.length - 1; i >= 0; --i) {
            var entry = this.tryEntries[i];

            if (entry.tryLoc === tryLoc) {
              var record = entry.completion;

              if (record.type === "throw") {
                var thrown = record.arg;
                resetTryEntry(entry);
              }

              return thrown;
            }
          } // The context.catch method must only be called with a location
          // argument that corresponds to a known catch block.


          throw new Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(iterable, resultName, nextLoc) {
          this.delegate = {
            iterator: values(iterable),
            resultName: resultName,
            nextLoc: nextLoc
          };

          if (this.method === "next") {
            // Deliberately forget the last sent value so that we don't
            // accidentally pass it on to the delegate.
            this.arg = undefined$1;
          }

          return ContinueSentinel;
        }
      }; // Regardless of whether this script is executing as a CommonJS module
      // or not, return the runtime object so that we can declare the variable
      // regeneratorRuntime in the outer scope, which allows this module to be
      // injected easily by `bin/regenerator --include-runtime script.js`.

      return exports;
    }( // If this script is executing as a CommonJS module, use module.exports
    // as the regeneratorRuntime namespace. Otherwise create a new empty
    // object. Either way, the resulting object will be used to initialize
    // the regeneratorRuntime variable at the top of this file.
    module.exports );

    try {
      regeneratorRuntime = runtime;
    } catch (accidentalStrictMode) {
      // This module should not be running in strict mode, so the above
      // assignment should always work unless something is misconfigured. Just
      // in case runtime.js accidentally runs in strict mode, in modern engines
      // we can explicitly access globalThis. In older engines we can escape
      // strict mode using a global Function call. This could conceivably fail
      // if a Content Security Policy forbids using Function, but in that case
      // the proper solution is to fix the accidental strict mode problem. If
      // you've misconfigured your bundler to force strict mode and applied a
      // CSP to forbid Function, and you're not willing to fix either of those
      // problems, please detail your unique predicament in a GitHub issue.
      if ((typeof globalThis === "undefined" ? "undefined" : _typeof(globalThis)) === "object") {
        globalThis.regeneratorRuntime = runtime;
      } else {
        Function("r", "regeneratorRuntime = r")(runtime);
      }
    }
  })(runtime);

  var regenerator = runtime.exports;

  var DESCRIPTORS = descriptors;
  var global$2 = global$17;
  var uncurryThis$3 = functionUncurryThis;
  var isForced = isForced_1;
  var inheritIfRequired = inheritIfRequired$3;
  var createNonEnumerableProperty = createNonEnumerableProperty$b;
  var defineProperty = objectDefineProperty.f;
  var getOwnPropertyNames = objectGetOwnPropertyNames.f;
  var isPrototypeOf$1 = objectIsPrototypeOf;
  var isRegExp$1 = isRegexp;
  var toString$4 = toString$f;
  var regExpFlags$2 = regexpFlags$1;
  var stickyHelpers = regexpStickyHelpers;
  var redefine$1 = redefine$c.exports;
  var fails$1 = fails$D;
  var hasOwn = hasOwnProperty_1;
  var enforceInternalState = internalState.enforce;
  var setSpecies = setSpecies$4;
  var wellKnownSymbol$1 = wellKnownSymbol$s;
  var UNSUPPORTED_DOT_ALL = regexpUnsupportedDotAll;
  var UNSUPPORTED_NCG = regexpUnsupportedNcg;

  var MATCH = wellKnownSymbol$1('match');
  var NativeRegExp = global$2.RegExp;
  var RegExpPrototype$2 = NativeRegExp.prototype;
  var SyntaxError = global$2.SyntaxError;
  var getFlags$2 = uncurryThis$3(regExpFlags$2);
  var exec = uncurryThis$3(RegExpPrototype$2.exec);
  var charAt = uncurryThis$3(''.charAt);
  var replace = uncurryThis$3(''.replace);
  var stringIndexOf$2 = uncurryThis$3(''.indexOf);
  var stringSlice$1 = uncurryThis$3(''.slice);
  // TODO: Use only propper RegExpIdentifierName
  var IS_NCG = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/;
  var re1 = /a/g;
  var re2 = /a/g;

  // "new" should create a new object, old webkit bug
  var CORRECT_NEW = new NativeRegExp(re1) !== re1;

  var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;

  var BASE_FORCED = DESCRIPTORS &&
    (!CORRECT_NEW || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG || fails$1(function () {
      re2[MATCH] = false;
      // RegExp constructor can alter flags and IsRegExp works correct with @@match
      return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';
    }));

  var handleDotAll = function (string) {
    var length = string.length;
    var index = 0;
    var result = '';
    var brackets = false;
    var chr;
    for (; index <= length; index++) {
      chr = charAt(string, index);
      if (chr === '\\') {
        result += chr + charAt(string, ++index);
        continue;
      }
      if (!brackets && chr === '.') {
        result += '[\\s\\S]';
      } else {
        if (chr === '[') {
          brackets = true;
        } else if (chr === ']') {
          brackets = false;
        } result += chr;
      }
    } return result;
  };

  var handleNCG = function (string) {
    var length = string.length;
    var index = 0;
    var result = '';
    var named = [];
    var names = {};
    var brackets = false;
    var ncg = false;
    var groupid = 0;
    var groupname = '';
    var chr;
    for (; index <= length; index++) {
      chr = charAt(string, index);
      if (chr === '\\') {
        chr = chr + charAt(string, ++index);
      } else if (chr === ']') {
        brackets = false;
      } else if (!brackets) switch (true) {
        case chr === '[':
          brackets = true;
          break;
        case chr === '(':
          if (exec(IS_NCG, stringSlice$1(string, index + 1))) {
            index += 2;
            ncg = true;
          }
          result += chr;
          groupid++;
          continue;
        case chr === '>' && ncg:
          if (groupname === '' || hasOwn(names, groupname)) {
            throw new SyntaxError('Invalid capture group name');
          }
          names[groupname] = true;
          named[named.length] = [groupname, groupid];
          ncg = false;
          groupname = '';
          continue;
      }
      if (ncg) groupname += chr;
      else result += chr;
    } return [result, named];
  };

  // `RegExp` constructor
  // https://tc39.es/ecma262/#sec-regexp-constructor
  if (isForced('RegExp', BASE_FORCED)) {
    var RegExpWrapper = function RegExp(pattern, flags) {
      var thisIsRegExp = isPrototypeOf$1(RegExpPrototype$2, this);
      var patternIsRegExp = isRegExp$1(pattern);
      var flagsAreUndefined = flags === undefined;
      var groups = [];
      var rawPattern = pattern;
      var rawFlags, dotAll, sticky, handled, result, state;

      if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {
        return pattern;
      }

      if (patternIsRegExp || isPrototypeOf$1(RegExpPrototype$2, pattern)) {
        pattern = pattern.source;
        if (flagsAreUndefined) flags = 'flags' in rawPattern ? rawPattern.flags : getFlags$2(rawPattern);
      }

      pattern = pattern === undefined ? '' : toString$4(pattern);
      flags = flags === undefined ? '' : toString$4(flags);
      rawPattern = pattern;

      if (UNSUPPORTED_DOT_ALL && 'dotAll' in re1) {
        dotAll = !!flags && stringIndexOf$2(flags, 's') > -1;
        if (dotAll) flags = replace(flags, /s/g, '');
      }

      rawFlags = flags;

      if (UNSUPPORTED_Y && 'sticky' in re1) {
        sticky = !!flags && stringIndexOf$2(flags, 'y') > -1;
        if (sticky) flags = replace(flags, /y/g, '');
      }

      if (UNSUPPORTED_NCG) {
        handled = handleNCG(pattern);
        pattern = handled[0];
        groups = handled[1];
      }

      result = inheritIfRequired(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype$2, RegExpWrapper);

      if (dotAll || sticky || groups.length) {
        state = enforceInternalState(result);
        if (dotAll) {
          state.dotAll = true;
          state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);
        }
        if (sticky) state.sticky = true;
        if (groups.length) state.groups = groups;
      }

      if (pattern !== rawPattern) try {
        // fails in old engines, but we have no alternatives for unsupported regex syntax
        createNonEnumerableProperty(result, 'source', rawPattern === '' ? '(?:)' : rawPattern);
      } catch (error) { /* empty */ }

      return result;
    };

    var proxy = function (key) {
      key in RegExpWrapper || defineProperty(RegExpWrapper, key, {
        configurable: true,
        get: function () { return NativeRegExp[key]; },
        set: function (it) { NativeRegExp[key] = it; }
      });
    };

    for (var keys = getOwnPropertyNames(NativeRegExp), index = 0; keys.length > index;) {
      proxy(keys[index++]);
    }

    RegExpPrototype$2.constructor = RegExpWrapper;
    RegExpWrapper.prototype = RegExpPrototype$2;
    redefine$1(global$2, 'RegExp', RegExpWrapper);
  }

  // https://tc39.es/ecma262/#sec-get-regexp-@@species
  setSpecies('RegExp');

  var uncurryThis$2 = functionUncurryThis;
  var PROPER_FUNCTION_NAME = functionName.PROPER;
  var redefine = redefine$c.exports;
  var anObject$2 = anObject$k;
  var isPrototypeOf = objectIsPrototypeOf;
  var $toString = toString$f;
  var fails = fails$D;
  var regExpFlags$1 = regexpFlags$1;

  var TO_STRING = 'toString';
  var RegExpPrototype$1 = RegExp.prototype;
  var n$ToString = RegExpPrototype$1[TO_STRING];
  var getFlags$1 = uncurryThis$2(regExpFlags$1);

  var NOT_GENERIC = fails(function () { return n$ToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });
  // FF44- RegExp#toString has a wrong name
  var INCORRECT_NAME = PROPER_FUNCTION_NAME && n$ToString.name != TO_STRING;

  // `RegExp.prototype.toString` method
  // https://tc39.es/ecma262/#sec-regexp.prototype.tostring
  if (NOT_GENERIC || INCORRECT_NAME) {
    redefine(RegExp.prototype, TO_STRING, function toString() {
      var R = anObject$2(this);
      var p = $toString(R.source);
      var rf = R.flags;
      var f = $toString(rf === undefined && isPrototypeOf(RegExpPrototype$1, R) && !('flags' in RegExpPrototype$1) ? getFlags$1(R) : rf);
      return '/' + p + '/' + f;
    }, { unsafe: true });
  }

  var call$2 = functionCall;
  var fixRegExpWellKnownSymbolLogic$1 = fixRegexpWellKnownSymbolLogic;
  var anObject$1 = anObject$k;
  var toLength = toLength$9;
  var toString$3 = toString$f;
  var requireObjectCoercible$3 = requireObjectCoercible$c;
  var getMethod$2 = getMethod$8;
  var advanceStringIndex = advanceStringIndex$3;
  var regExpExec$1 = regexpExecAbstract;

  // @@match logic
  fixRegExpWellKnownSymbolLogic$1('match', function (MATCH, nativeMatch, maybeCallNative) {
    return [
      // `String.prototype.match` method
      // https://tc39.es/ecma262/#sec-string.prototype.match
      function match(regexp) {
        var O = requireObjectCoercible$3(this);
        var matcher = regexp == undefined ? undefined : getMethod$2(regexp, MATCH);
        return matcher ? call$2(matcher, regexp, O) : new RegExp(regexp)[MATCH](toString$3(O));
      },
      // `RegExp.prototype[@@match]` method
      // https://tc39.es/ecma262/#sec-regexp.prototype-@@match
      function (string) {
        var rx = anObject$1(this);
        var S = toString$3(string);
        var res = maybeCallNative(nativeMatch, rx, S);

        if (res.done) return res.value;

        if (!rx.global) return regExpExec$1(rx, S);

        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
        var A = [];
        var n = 0;
        var result;
        while ((result = regExpExec$1(rx, S)) !== null) {
          var matchStr = toString$3(result[0]);
          A[n] = matchStr;
          if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
          n++;
        }
        return n === 0 ? null : A;
      }
    ];
  });

  var $$5 = _export;
  var $trimStart = stringTrim.start;
  var forcedStringTrimMethod$1 = stringTrimForced;

  var FORCED$1 = forcedStringTrimMethod$1('trimStart');

  var trimStart = FORCED$1 ? function trimStart() {
    return $trimStart(this);
  // eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe
  } : ''.trimStart;

  // `String.prototype.{ trimStart, trimLeft }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
  // https://tc39.es/ecma262/#String.prototype.trimleft
  $$5({ target: 'String', proto: true, name: 'trimStart', forced: FORCED$1 }, {
    trimStart: trimStart,
    trimLeft: trimStart
  });

  // `SameValue` abstract operation
  // https://tc39.es/ecma262/#sec-samevalue
  // eslint-disable-next-line es/no-object-is -- safe
  var sameValue$1 = Object.is || function is(x, y) {
    // eslint-disable-next-line no-self-compare -- NaN check
    return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
  };

  var call$1 = functionCall;
  var fixRegExpWellKnownSymbolLogic = fixRegexpWellKnownSymbolLogic;
  var anObject = anObject$k;
  var requireObjectCoercible$2 = requireObjectCoercible$c;
  var sameValue = sameValue$1;
  var toString$2 = toString$f;
  var getMethod$1 = getMethod$8;
  var regExpExec = regexpExecAbstract;

  // @@search logic
  fixRegExpWellKnownSymbolLogic('search', function (SEARCH, nativeSearch, maybeCallNative) {
    return [
      // `String.prototype.search` method
      // https://tc39.es/ecma262/#sec-string.prototype.search
      function search(regexp) {
        var O = requireObjectCoercible$2(this);
        var searcher = regexp == undefined ? undefined : getMethod$1(regexp, SEARCH);
        return searcher ? call$1(searcher, regexp, O) : new RegExp(regexp)[SEARCH](toString$2(O));
      },
      // `RegExp.prototype[@@search]` method
      // https://tc39.es/ecma262/#sec-regexp.prototype-@@search
      function (string) {
        var rx = anObject(this);
        var S = toString$2(string);
        var res = maybeCallNative(nativeSearch, rx, S);

        if (res.done) return res.value;

        var previousLastIndex = rx.lastIndex;
        if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
        var result = regExpExec(rx, S);
        if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
        return result === null ? -1 : result.index;
      }
    ];
  });

  var $$4 = _export;
  var $trimEnd = stringTrim.end;
  var forcedStringTrimMethod = stringTrimForced;

  var FORCED = forcedStringTrimMethod('trimEnd');

  var trimEnd = FORCED ? function trimEnd() {
    return $trimEnd(this);
  // eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe
  } : ''.trimEnd;

  // `String.prototype.{ trimEnd, trimRight }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimend
  // https://tc39.es/ecma262/#String.prototype.trimright
  $$4({ target: 'String', proto: true, name: 'trimEnd', forced: FORCED }, {
    trimEnd: trimEnd,
    trimRight: trimEnd
  });

  var $$3 = _export;
  var createHTML = createHtml;
  var forcedStringHTMLMethod = stringHtmlForced;

  // `String.prototype.link` method
  // https://tc39.es/ecma262/#sec-string.prototype.link
  $$3({ target: 'String', proto: true, forced: forcedStringHTMLMethod('link') }, {
    link: function link(url) {
      return createHTML(this, 'a', 'href', url);
    }
  });

  var $$2 = _export;
  var $includes = arrayIncludes.includes;
  var addToUnscopables = addToUnscopables$3;

  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  $$2({ target: 'Array', proto: true }, {
    includes: function includes(el /* , fromIndex = 0 */) {
      return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
    }
  });

  // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
  addToUnscopables('includes');

  var $$1 = _export;
  var uncurryThis$1 = functionUncurryThis;
  var notARegExp = notARegexp;
  var requireObjectCoercible$1 = requireObjectCoercible$c;
  var toString$1 = toString$f;
  var correctIsRegExpLogic = correctIsRegexpLogic;

  var stringIndexOf$1 = uncurryThis$1(''.indexOf);

  // `String.prototype.includes` method
  // https://tc39.es/ecma262/#sec-string.prototype.includes
  $$1({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {
    includes: function includes(searchString /* , position = 0 */) {
      return !!~stringIndexOf$1(
        toString$1(requireObjectCoercible$1(this)),
        toString$1(notARegExp(searchString)),
        arguments.length > 1 ? arguments[1] : undefined
      );
    }
  });

  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  /**
   * marked - a markdown parser
   * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)
   * https://github.com/markedjs/marked
   */

  /**
   * DO NOT EDIT THIS FILE
   * The code in this file is generated from files in ./src/
   */
  function getDefaults() {
    return {
      baseUrl: null,
      breaks: false,
      extensions: null,
      gfm: true,
      headerIds: true,
      headerPrefix: '',
      highlight: null,
      langPrefix: 'language-',
      mangle: true,
      pedantic: false,
      renderer: null,
      sanitize: false,
      sanitizer: null,
      silent: false,
      smartLists: false,
      smartypants: false,
      tokenizer: null,
      walkTokens: null,
      xhtml: false
    };
  }

  var defaults = getDefaults();

  function changeDefaults(newDefaults) {
    defaults = newDefaults;
  }
  /**
   * Helpers
   */


  var escapeTest = /[&<>"']/;
  var escapeReplace = /[&<>"']/g;
  var escapeTestNoEncode = /[<>"']|&(?!#?\w+;)/;
  var escapeReplaceNoEncode = /[<>"']|&(?!#?\w+;)/g;
  var escapeReplacements = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  var getEscapeReplacement = function getEscapeReplacement(ch) {
    return escapeReplacements[ch];
  };

  function _escape(html, encode) {
    if (encode) {
      if (escapeTest.test(html)) {
        return html.replace(escapeReplace, getEscapeReplacement);
      }
    } else {
      if (escapeTestNoEncode.test(html)) {
        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);
      }
    }

    return html;
  }

  var unescapeTest = /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;

  function unescape(html) {
    // explicitly match decimal, hex, and named HTML entities
    return html.replace(unescapeTest, function (_, n) {
      n = n.toLowerCase();
      if (n === 'colon') return ':';

      if (n.charAt(0) === '#') {
        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));
      }

      return '';
    });
  }

  var caret = /(^|[^\[])\^/g;

  function edit(regex, opt) {
    regex = regex.source || regex;
    opt = opt || '';
    var obj = {
      replace: function replace(name, val) {
        val = val.source || val;
        val = val.replace(caret, '$1');
        regex = regex.replace(name, val);
        return obj;
      },
      getRegex: function getRegex() {
        return new RegExp(regex, opt);
      }
    };
    return obj;
  }

  var nonWordAndColonTest = /[^\w:]/g;
  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;

  function cleanUrl(sanitize, base, href) {
    if (sanitize) {
      var prot;

      try {
        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();
      } catch (e) {
        return null;
      }

      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {
        return null;
      }
    }

    if (base && !originIndependentUrl.test(href)) {
      href = resolveUrl(base, href);
    }

    try {
      href = encodeURI(href).replace(/%25/g, '%');
    } catch (e) {
      return null;
    }

    return href;
  }

  var baseUrls = {};
  var justDomain = /^[^:]+:\/*[^/]*$/;
  var protocol = /^([^:]+:)[\s\S]*$/;
  var domain = /^([^:]+:\/*[^/]*)[\s\S]*$/;

  function resolveUrl(base, href) {
    if (!baseUrls[' ' + base]) {
      // we can ignore everything in base after the last slash of its path component,
      // but we might need to add _that_
      // https://tools.ietf.org/html/rfc3986#section-3
      if (justDomain.test(base)) {
        baseUrls[' ' + base] = base + '/';
      } else {
        baseUrls[' ' + base] = rtrim(base, '/', true);
      }
    }

    base = baseUrls[' ' + base];
    var relativeBase = base.indexOf(':') === -1;

    if (href.substring(0, 2) === '//') {
      if (relativeBase) {
        return href;
      }

      return base.replace(protocol, '$1') + href;
    } else if (href.charAt(0) === '/') {
      if (relativeBase) {
        return href;
      }

      return base.replace(domain, '$1') + href;
    } else {
      return base + href;
    }
  }

  var noopTest = {
    exec: function noopTest() {}
  };

  function merge(obj) {
    var i = 1,
        target,
        key;

    for (; i < arguments.length; i++) {
      target = arguments[i];

      for (key in target) {
        if (Object.prototype.hasOwnProperty.call(target, key)) {
          obj[key] = target[key];
        }
      }
    }

    return obj;
  }

  function splitCells(tableRow, count) {
    // ensure that every cell-delimiting pipe has a space
    // before it to distinguish it from an escaped pipe
    var row = tableRow.replace(/\|/g, function (match, offset, str) {
      var escaped = false,
          curr = offset;

      while (--curr >= 0 && str[curr] === '\\') {
        escaped = !escaped;
      }

      if (escaped) {
        // odd number of slashes means | is escaped
        // so we leave it alone
        return '|';
      } else {
        // add space before unescaped |
        return ' |';
      }
    }),
        cells = row.split(/ \|/);
    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe

    if (!cells[0].trim()) {
      cells.shift();
    }

    if (!cells[cells.length - 1].trim()) {
      cells.pop();
    }

    if (cells.length > count) {
      cells.splice(count);
    } else {
      while (cells.length < count) {
        cells.push('');
      }
    }

    for (; i < cells.length; i++) {
      // leading or trailing whitespace is ignored per the gfm spec
      cells[i] = cells[i].trim().replace(/\\\|/g, '|');
    }

    return cells;
  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').
  // /c*$/ is vulnerable to REDOS.
  // invert: Remove suffix of non-c chars instead. Default falsey.


  function rtrim(str, c, invert) {
    var l = str.length;

    if (l === 0) {
      return '';
    } // Length of suffix matching the invert condition.


    var suffLen = 0; // Step left until we fail to match the invert condition.

    while (suffLen < l) {
      var currChar = str.charAt(l - suffLen - 1);

      if (currChar === c && !invert) {
        suffLen++;
      } else if (currChar !== c && invert) {
        suffLen++;
      } else {
        break;
      }
    }

    return str.substr(0, l - suffLen);
  }

  function findClosingBracket(str, b) {
    if (str.indexOf(b[1]) === -1) {
      return -1;
    }

    var l = str.length;
    var level = 0,
        i = 0;

    for (; i < l; i++) {
      if (str[i] === '\\') {
        i++;
      } else if (str[i] === b[0]) {
        level++;
      } else if (str[i] === b[1]) {
        level--;

        if (level < 0) {
          return i;
        }
      }
    }

    return -1;
  }

  function checkSanitizeDeprecation(opt) {
    if (opt && opt.sanitize && !opt.silent) {
      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');
    }
  } // copied from https://stackoverflow.com/a/5450113/806777


  function repeatString(pattern, count) {
    if (count < 1) {
      return '';
    }

    var result = '';

    while (count > 1) {
      if (count & 1) {
        result += pattern;
      }

      count >>= 1;
      pattern += pattern;
    }

    return result + pattern;
  }

  function outputLink(cap, link, raw, lexer) {
    var href = link.href;
    var title = link.title ? _escape(link.title) : null;
    var text = cap[1].replace(/\\([\[\]])/g, '$1');

    if (cap[0].charAt(0) !== '!') {
      lexer.state.inLink = true;
      var token = {
        type: 'link',
        raw: raw,
        href: href,
        title: title,
        text: text,
        tokens: lexer.inlineTokens(text, [])
      };
      lexer.state.inLink = false;
      return token;
    } else {
      return {
        type: 'image',
        raw: raw,
        href: href,
        title: title,
        text: _escape(text)
      };
    }
  }

  function indentCodeCompensation(raw, text) {
    var matchIndentToCode = raw.match(/^(\s+)(?:```)/);

    if (matchIndentToCode === null) {
      return text;
    }

    var indentToCode = matchIndentToCode[1];
    return text.split('\n').map(function (node) {
      var matchIndentInNode = node.match(/^\s+/);

      if (matchIndentInNode === null) {
        return node;
      }

      var _matchIndentInNode = _slicedToArray(matchIndentInNode, 1),
          indentInNode = _matchIndentInNode[0];

      if (indentInNode.length >= indentToCode.length) {
        return node.slice(indentToCode.length);
      }

      return node;
    }).join('\n');
  }
  /**
   * Tokenizer
   */


  var Tokenizer = /*#__PURE__*/function () {
    function Tokenizer(options) {
      _classCallCheck(this, Tokenizer);

      this.options = options || defaults;
    }

    _createClass(Tokenizer, [{
      key: "space",
      value: function space(src) {
        var cap = this.rules.block.newline.exec(src);

        if (cap) {
          if (cap[0].length > 1) {
            return {
              type: 'space',
              raw: cap[0]
            };
          }

          return {
            raw: '\n'
          };
        }
      }
    }, {
      key: "code",
      value: function code(src) {
        var cap = this.rules.block.code.exec(src);

        if (cap) {
          var text = cap[0].replace(/^ {1,4}/gm, '');
          return {
            type: 'code',
            raw: cap[0],
            codeBlockStyle: 'indented',
            text: !this.options.pedantic ? rtrim(text, '\n') : text
          };
        }
      }
    }, {
      key: "fences",
      value: function fences(src) {
        var cap = this.rules.block.fences.exec(src);

        if (cap) {
          var raw = cap[0];
          var text = indentCodeCompensation(raw, cap[3] || '');
          return {
            type: 'code',
            raw: raw,
            lang: cap[2] ? cap[2].trim() : cap[2],
            text: text
          };
        }
      }
    }, {
      key: "heading",
      value: function heading(src) {
        var cap = this.rules.block.heading.exec(src);

        if (cap) {
          var text = cap[2].trim(); // remove trailing #s

          if (/#$/.test(text)) {
            var trimmed = rtrim(text, '#');

            if (this.options.pedantic) {
              text = trimmed.trim();
            } else if (!trimmed || / $/.test(trimmed)) {
              // CommonMark requires space before trailing #s
              text = trimmed.trim();
            }
          }

          var token = {
            type: 'heading',
            raw: cap[0],
            depth: cap[1].length,
            text: text,
            tokens: []
          };
          this.lexer.inline(token.text, token.tokens);
          return token;
        }
      }
    }, {
      key: "hr",
      value: function hr(src) {
        var cap = this.rules.block.hr.exec(src);

        if (cap) {
          return {
            type: 'hr',
            raw: cap[0]
          };
        }
      }
    }, {
      key: "blockquote",
      value: function blockquote(src) {
        var cap = this.rules.block.blockquote.exec(src);

        if (cap) {
          var text = cap[0].replace(/^ *> ?/gm, '');
          return {
            type: 'blockquote',
            raw: cap[0],
            tokens: this.lexer.blockTokens(text, []),
            text: text
          };
        }
      }
    }, {
      key: "list",
      value: function list(src) {
        var cap = this.rules.block.list.exec(src);

        if (cap) {
          var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, lines, itemContents;
          var bull = cap[1].trim();
          var isordered = bull.length > 1;
          var list = {
            type: 'list',
            raw: '',
            ordered: isordered,
            start: isordered ? +bull.slice(0, -1) : '',
            loose: false,
            items: []
          };
          bull = isordered ? "\\d{1,9}\\".concat(bull.slice(-1)) : "\\".concat(bull);

          if (this.options.pedantic) {
            bull = isordered ? bull : '[*+-]';
          } // Get next list item


          var itemRegex = new RegExp("^( {0,3}".concat(bull, ")((?: [^\\n]*| *)(?:\\n[^\\n]*)*(?:\\n|$))")); // Get each top-level item

          while (src) {
            if (this.rules.block.hr.test(src)) {
              // End list if we encounter an HR (possibly move into itemRegex?)
              break;
            }

            if (!(cap = itemRegex.exec(src))) {
              break;
            }

            lines = cap[2].split('\n');

            if (this.options.pedantic) {
              indent = 2;
              itemContents = lines[0].trimLeft();
            } else {
              indent = cap[2].search(/[^ ]/); // Find first non-space char

              indent = cap[1].length + (indent > 4 ? 1 : indent); // intented code blocks after 4 spaces; indent is always 1

              itemContents = lines[0].slice(indent - cap[1].length);
            }

            blankLine = false;
            raw = cap[0];

            if (!lines[0] && /^ *$/.test(lines[1])) {
              // items begin with at most one blank line
              raw = cap[1] + lines.slice(0, 2).join('\n') + '\n';
              list.loose = true;
              lines = [];
            }

            var nextBulletRegex = new RegExp("^ {0,".concat(Math.min(3, indent - 1), "}(?:[*+-]|\\d{1,9}[.)])"));

            for (i = 1; i < lines.length; i++) {
              line = lines[i];

              if (this.options.pedantic) {
                // Re-align to follow commonmark nesting rules
                line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');
              } // End list item if found start of new bullet


              if (nextBulletRegex.test(line)) {
                raw = cap[1] + lines.slice(0, i).join('\n') + '\n';
                break;
              } // Until we encounter a blank line, item contents do not need indentation


              if (!blankLine) {
                if (!line.trim()) {
                  // Check if current line is empty
                  blankLine = true;
                } // Dedent if possible


                if (line.search(/[^ ]/) >= indent) {
                  itemContents += '\n' + line.slice(indent);
                } else {
                  itemContents += '\n' + line;
                }

                continue;
              } // Dedent this line


              if (line.search(/[^ ]/) >= indent || !line.trim()) {
                itemContents += '\n' + line.slice(indent);
                continue;
              } else {
                // Line was not properly indented; end of this item
                raw = cap[1] + lines.slice(0, i).join('\n') + '\n';
                break;
              }
            }

            if (!list.loose) {
              // If the previous item ended with a blank line, the list is loose
              if (endsWithBlankLine) {
                list.loose = true;
              } else if (/\n *\n *$/.test(raw)) {
                endsWithBlankLine = true;
              }
            } // Check for task list items


            if (this.options.gfm) {
              istask = /^\[[ xX]\] /.exec(itemContents);

              if (istask) {
                ischecked = istask[0] !== '[ ] ';
                itemContents = itemContents.replace(/^\[[ xX]\] +/, '');
              }
            }

            list.items.push({
              type: 'list_item',
              raw: raw,
              task: !!istask,
              checked: ischecked,
              loose: false,
              text: itemContents
            });
            list.raw += raw;
            src = src.slice(raw.length);
          } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic


          list.items[list.items.length - 1].raw = raw.trimRight();
          list.items[list.items.length - 1].text = itemContents.trimRight();
          list.raw = list.raw.trimRight();
          var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first

          for (i = 0; i < l; i++) {
            this.lexer.state.top = false;
            list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);

            if (list.items[i].tokens.some(function (t) {
              return t.type === 'space';
            })) {
              list.loose = true;
              list.items[i].loose = true;
            }
          }

          return list;
        }
      }
    }, {
      key: "html",
      value: function html(src) {
        var cap = this.rules.block.html.exec(src);

        if (cap) {
          var token = {
            type: 'html',
            raw: cap[0],
            pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),
            text: cap[0]
          };

          if (this.options.sanitize) {
            token.type = 'paragraph';
            token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]);
            token.tokens = [];
            this.lexer.inline(token.text, token.tokens);
          }

          return token;
        }
      }
    }, {
      key: "def",
      value: function def(src) {
        var cap = this.rules.block.def.exec(src);

        if (cap) {
          if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);
          var tag = cap[1].toLowerCase().replace(/\s+/g, ' ');
          return {
            type: 'def',
            tag: tag,
            raw: cap[0],
            href: cap[2],
            title: cap[3]
          };
        }
      }
    }, {
      key: "table",
      value: function table(src) {
        var cap = this.rules.block.table.exec(src);

        if (cap) {
          var item = {
            type: 'table',
            header: splitCells(cap[1]).map(function (c) {
              return {
                text: c
              };
            }),
            align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
            rows: cap[3] ? cap[3].replace(/\n$/, '').split('\n') : []
          };

          if (item.header.length === item.align.length) {
            item.raw = cap[0];
            var l = item.align.length;
            var i, j, k, row;

            for (i = 0; i < l; i++) {
              if (/^ *-+: *$/.test(item.align[i])) {
                item.align[i] = 'right';
              } else if (/^ *:-+: *$/.test(item.align[i])) {
                item.align[i] = 'center';
              } else if (/^ *:-+ *$/.test(item.align[i])) {
                item.align[i] = 'left';
              } else {
                item.align[i] = null;
              }
            }

            l = item.rows.length;

            for (i = 0; i < l; i++) {
              item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {
                return {
                  text: c
                };
              });
            } // parse child tokens inside headers and cells
            // header child tokens


            l = item.header.length;

            for (j = 0; j < l; j++) {
              item.header[j].tokens = [];
              this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);
            } // cell child tokens


            l = item.rows.length;

            for (j = 0; j < l; j++) {
              row = item.rows[j];

              for (k = 0; k < row.length; k++) {
                row[k].tokens = [];
                this.lexer.inlineTokens(row[k].text, row[k].tokens);
              }
            }

            return item;
          }
        }
      }
    }, {
      key: "lheading",
      value: function lheading(src) {
        var cap = this.rules.block.lheading.exec(src);

        if (cap) {
          var token = {
            type: 'heading',
            raw: cap[0],
            depth: cap[2].charAt(0) === '=' ? 1 : 2,
            text: cap[1],
            tokens: []
          };
          this.lexer.inline(token.text, token.tokens);
          return token;
        }
      }
    }, {
      key: "paragraph",
      value: function paragraph(src) {
        var cap = this.rules.block.paragraph.exec(src);

        if (cap) {
          var token = {
            type: 'paragraph',
            raw: cap[0],
            text: cap[1].charAt(cap[1].length - 1) === '\n' ? cap[1].slice(0, -1) : cap[1],
            tokens: []
          };
          this.lexer.inline(token.text, token.tokens);
          return token;
        }
      }
    }, {
      key: "text",
      value: function text(src) {
        var cap = this.rules.block.text.exec(src);

        if (cap) {
          var token = {
            type: 'text',
            raw: cap[0],
            text: cap[0],
            tokens: []
          };
          this.lexer.inline(token.text, token.tokens);
          return token;
        }
      }
    }, {
      key: "escape",
      value: function escape(src) {
        var cap = this.rules.inline.escape.exec(src);

        if (cap) {
          return {
            type: 'escape',
            raw: cap[0],
            text: _escape(cap[1])
          };
        }
      }
    }, {
      key: "tag",
      value: function tag(src) {
        var cap = this.rules.inline.tag.exec(src);

        if (cap) {
          if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {
            this.lexer.state.inLink = true;
          } else if (this.lexer.state.inLink && /^<\/a>/i.test(cap[0])) {
            this.lexer.state.inLink = false;
          }

          if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\s|>)/i.test(cap[0])) {
            this.lexer.state.inRawBlock = true;
          } else if (this.lexer.state.inRawBlock && /^<\/(pre|code|kbd|script)(\s|>)/i.test(cap[0])) {
            this.lexer.state.inRawBlock = false;
          }

          return {
            type: this.options.sanitize ? 'text' : 'html',
            raw: cap[0],
            inLink: this.lexer.state.inLink,
            inRawBlock: this.lexer.state.inRawBlock,
            text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]
          };
        }
      }
    }, {
      key: "link",
      value: function link(src) {
        var cap = this.rules.inline.link.exec(src);

        if (cap) {
          var trimmedUrl = cap[2].trim();

          if (!this.options.pedantic && /^</.test(trimmedUrl)) {
            // commonmark requires matching angle brackets
            if (!/>$/.test(trimmedUrl)) {
              return;
            } // ending angle bracket cannot be escaped


            var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\');

            if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {
              return;
            }
          } else {
            // find closing parenthesis
            var lastParenIndex = findClosingBracket(cap[2], '()');

            if (lastParenIndex > -1) {
              var start = cap[0].indexOf('!') === 0 ? 5 : 4;
              var linkLen = start + cap[1].length + lastParenIndex;
              cap[2] = cap[2].substring(0, lastParenIndex);
              cap[0] = cap[0].substring(0, linkLen).trim();
              cap[3] = '';
            }
          }

          var href = cap[2];
          var title = '';

          if (this.options.pedantic) {
            // split pedantic href and title
            var link = /^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(href);

            if (link) {
              href = link[1];
              title = link[3];
            }
          } else {
            title = cap[3] ? cap[3].slice(1, -1) : '';
          }

          href = href.trim();

          if (/^</.test(href)) {
            if (this.options.pedantic && !/>$/.test(trimmedUrl)) {
              // pedantic allows starting angle bracket without ending angle bracket
              href = href.slice(1);
            } else {
              href = href.slice(1, -1);
            }
          }

          return outputLink(cap, {
            href: href ? href.replace(this.rules.inline._escapes, '$1') : href,
            title: title ? title.replace(this.rules.inline._escapes, '$1') : title
          }, cap[0], this.lexer);
        }
      }
    }, {
      key: "reflink",
      value: function reflink(src, links) {
        var cap;

        if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {
          var link = (cap[2] || cap[1]).replace(/\s+/g, ' ');
          link = links[link.toLowerCase()];

          if (!link || !link.href) {
            var text = cap[0].charAt(0);
            return {
              type: 'text',
              raw: text,
              text: text
            };
          }

          return outputLink(cap, link, cap[0], this.lexer);
        }
      }
    }, {
      key: "emStrong",
      value: function emStrong(src, maskedSrc) {
        var prevChar = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
        var match = this.rules.inline.emStrong.lDelim.exec(src);
        if (!match) return; // _ can't be between two alphanumerics. \p{L}\p{N} includes non-english alphabet/numbers as well

        if (match[3] && prevChar.match(/(?:[0-9A-Za-z\xAA\xB2\xB3\xB5\xB9\xBA\xBC-\xBE\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u0660-\u0669\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07C0-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0966-\u096F\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09E6-\u09F1\u09F4-\u09F9\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A66-\u0A6F\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AE6-\u0AEF\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B66-\u0B6F\u0B71-\u0B77\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0BE6-\u0BF2\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C66-\u0C6F\u0C78-\u0C7E\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CE6-\u0CEF\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D58-\u0D61\u0D66-\u0D78\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DE6-\u0DEF\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F20-\u0F33\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F-\u1049\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u1090-\u1099\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1369-\u137C\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A16\u1A20-\u1A54\u1A80-\u1A89\u1A90-\u1A99\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B50-\u1B59\u1B83-\u1BA0\u1BAE-\u1BE5\u1C00-\u1C23\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2070\u2071\u2074-\u2079\u207F-\u2089\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2150-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2CFD\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u3192-\u3195\u31A0-\u31BF\u31F0-\u31FF\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA830-\uA835\uA840-\uA873\uA882-\uA8B3\uA8D0-\uA8D9\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA900-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF-\uA9D9\uA9E0-\uA9E4\uA9E6-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA50-\uAA59\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDD8B\uDE80-\uDE9C\uDEA0-\uDED0\uDEE1-\uDEFB\uDF00-\uDF23\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC58-\uDC76\uDC79-\uDC9E\uDCA7-\uDCAF\uDCE0-\uDCF2\uDCF4\uDCF5\uDCFB-\uDD1B\uDD20-\uDD39\uDD80-\uDDB7\uDDBC-\uDDCF\uDDD2-\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE40-\uDE48\uDE60-\uDE7E\uDE80-\uDE9F\uDEC0-\uDEC7\uDEC9-\uDEE4\uDEEB-\uDEEF\uDF00-\uDF35\uDF40-\uDF55\uDF58-\uDF72\uDF78-\uDF91\uDFA9-\uDFAF]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDCFA-\uDD23\uDD30-\uDD39\uDE60-\uDE7E\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF27\uDF30-\uDF45\uDF51-\uDF54\uDF70-\uDF81\uDFB0-\uDFCB\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC52-\uDC6F\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD03-\uDD26\uDD36-\uDD3F\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDD0-\uDDDA\uDDDC\uDDE1-\uDDF4\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDEF0-\uDEF9\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC50-\uDC59\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE50-\uDE59\uDE80-\uDEAA\uDEB8\uDEC0-\uDEC9\uDF00-\uDF1A\uDF30-\uDF3B\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCF2\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDD50-\uDD59\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC50-\uDC6C\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD50-\uDD59\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDDA0-\uDDA9\uDEE0-\uDEF2\uDFB0\uDFC0-\uDFD4]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDE70-\uDEBE\uDEC0-\uDEC9\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF50-\uDF59\uDF5B-\uDF61\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE96\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD834[\uDEE0-\uDEF3\uDF60-\uDF78]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD40-\uDD49\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB\uDEF0-\uDEF9]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDCC7-\uDCCF\uDD00-\uDD43\uDD4B\uDD50-\uDD59]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD83C[\uDD00-\uDD0C]|\uD83E[\uDFF0-\uDFF9]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])/)) return;
        var nextChar = match[1] || match[2] || '';

        if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {
          var lLength = match[0].length - 1;
          var rDelim,
              rLength,
              delimTotal = lLength,
              midDelimTotal = 0;
          var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;
          endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)

          maskedSrc = maskedSrc.slice(-1 * src.length + lLength);

          while ((match = endReg.exec(maskedSrc)) != null) {
            rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];
            if (!rDelim) continue; // skip single * in __abc*abc__

            rLength = rDelim.length;

            if (match[3] || match[4]) {
              // found another Left Delim
              delimTotal += rLength;
              continue;
            } else if (match[5] || match[6]) {
              // either Left or Right Delim
              if (lLength % 3 && !((lLength + rLength) % 3)) {
                midDelimTotal += rLength;
                continue; // CommonMark Emphasis Rules 9-10
              }
            }

            delimTotal -= rLength;
            if (delimTotal > 0) continue; // Haven't found enough closing delimiters
            // Remove extra characters. *a*** -> *a*

            rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***

            if (Math.min(lLength, rLength) % 2) {
              var _text = src.slice(1, lLength + match.index + rLength);

              return {
                type: 'em',
                raw: src.slice(0, lLength + match.index + rLength + 1),
                text: _text,
                tokens: this.lexer.inlineTokens(_text, [])
              };
            } // Create 'strong' if smallest delimiter has even char count. **a***


            var text = src.slice(2, lLength + match.index + rLength - 1);
            return {
              type: 'strong',
              raw: src.slice(0, lLength + match.index + rLength + 1),
              text: text,
              tokens: this.lexer.inlineTokens(text, [])
            };
          }
        }
      }
    }, {
      key: "codespan",
      value: function codespan(src) {
        var cap = this.rules.inline.code.exec(src);

        if (cap) {
          var text = cap[2].replace(/\n/g, ' ');
          var hasNonSpaceChars = /[^ ]/.test(text);
          var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);

          if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {
            text = text.substring(1, text.length - 1);
          }

          text = _escape(text, true);
          return {
            type: 'codespan',
            raw: cap[0],
            text: text
          };
        }
      }
    }, {
      key: "br",
      value: function br(src) {
        var cap = this.rules.inline.br.exec(src);

        if (cap) {
          return {
            type: 'br',
            raw: cap[0]
          };
        }
      }
    }, {
      key: "del",
      value: function del(src) {
        var cap = this.rules.inline.del.exec(src);

        if (cap) {
          return {
            type: 'del',
            raw: cap[0],
            text: cap[2],
            tokens: this.lexer.inlineTokens(cap[2], [])
          };
        }
      }
    }, {
      key: "autolink",
      value: function autolink(src, mangle) {
        var cap = this.rules.inline.autolink.exec(src);

        if (cap) {
          var text, href;

          if (cap[2] === '@') {
            text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);
            href = 'mailto:' + text;
          } else {
            text = _escape(cap[1]);
            href = text;
          }

          return {
            type: 'link',
            raw: cap[0],
            text: text,
            href: href,
            tokens: [{
              type: 'text',
              raw: text,
              text: text
            }]
          };
        }
      }
    }, {
      key: "url",
      value: function url(src, mangle) {
        var cap;

        if (cap = this.rules.inline.url.exec(src)) {
          var text, href;

          if (cap[2] === '@') {
            text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);
            href = 'mailto:' + text;
          } else {
            // do extended autolink path validation
            var prevCapZero;

            do {
              prevCapZero = cap[0];
              cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];
            } while (prevCapZero !== cap[0]);

            text = _escape(cap[0]);

            if (cap[1] === 'www.') {
              href = 'http://' + text;
            } else {
              href = text;
            }
          }

          return {
            type: 'link',
            raw: cap[0],
            text: text,
            href: href,
            tokens: [{
              type: 'text',
              raw: text,
              text: text
            }]
          };
        }
      }
    }, {
      key: "inlineText",
      value: function inlineText(src, smartypants) {
        var cap = this.rules.inline.text.exec(src);

        if (cap) {
          var text;

          if (this.lexer.state.inRawBlock) {
            text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];
          } else {
            text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);
          }

          return {
            type: 'text',
            raw: cap[0],
            text: text
          };
        }
      }
    }]);

    return Tokenizer;
  }();
  /**
   * Block-Level Grammar
   */


  var block = {
    newline: /^(?: *(?:\n|$))+/,
    code: /^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,
    fences: /^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?=\n|$)|$)/,
    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,
    heading: /^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,
    blockquote: /^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,
    list: /^( {0,3}bull)( [^\n]+?)?(?:\n|$)/,
    html: '^ {0,3}(?:' // optional indentation
    + '<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)' // (1)
    + '|comment[^\\n]*(\\n+|$)' // (2)
    + '|<\\?[\\s\\S]*?(?:\\?>\\n*|$)' // (3)
    + '|<![A-Z][\\s\\S]*?(?:>\\n*|$)' // (4)
    + '|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)' // (5)
    + '|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)' // (6)
    + '|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)' // (7) open tag
    + '|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)' // (7) closing tag
    + ')',
    def: /^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,
    table: noopTest,
    lheading: /^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,
    // regex template, placeholders will be replaced according to different paragraph
    // interruption rules of commonmark and the original markdown spec:
    _paragraph: /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,
    text: /^[^\n]+/
  };
  block._label = /(?!\s*\])(?:\\[\[\]]|[^\[\]])+/;
  block._title = /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/;
  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();
  block.bullet = /(?:[*+-]|\d{1,9}[.)])/;
  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();
  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))').replace('def', '\\n+(?=' + block.def.source + ')').getRegex();
  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';
  block._comment = /<!--(?!-?>)[\s\S]*?(?:-->|$)/;
  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex();
  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs
  .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt
  .replace('html', '</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks
  .getRegex();
  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();
  /**
   * Normal Block Grammar
   */

  block.normal = merge({}, block);
  /**
   * GFM Block Grammar
   */

  block.gfm = merge({}, block.normal, {
    table: '^ *([^\\n ].*\\|.*)\\n' // Header
    + ' {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?' // Align
    + '(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)' // Cells

  });
  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt
  .replace('html', '</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks
  .getRegex();
  block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs
  .replace('table', block.gfm.table) // interrupt paragraphs with table
  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt
  .replace('html', '</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks
  .getRegex();
  /**
   * Pedantic grammar (original John Gruber's loose markdown specification)
   */

  block.pedantic = merge({}, block.normal, {
    html: edit('^ *(?:comment *(?:\\n|\\s*$)' + '|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)' // closed tag
    + '|<tag(?:"[^"]*"|\'[^\']*\'|\\s[^\'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\b)\\w+(?!:|[^\\w\\s@]*@)\\b').getRegex(),
    def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
    heading: /^(#{1,6})(.*)(?:\n+|$)/,
    fences: noopTest,
    // fences not supported
    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()
  });
  /**
   * Inline-Level Grammar
   */

  var inline = {
    escape: /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,
    autolink: /^<(scheme:[^\s\x00-\x1f<>]*|email)>/,
    url: noopTest,
    tag: '^comment' + '|^</[a-zA-Z][\\w:-]*\\s*>' // self-closing tag
    + '|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>' // open tag
    + '|^<\\?[\\s\\S]*?\\?>' // processing instruction, e.g. <?php ?>
    + '|^<![a-zA-Z]+\\s[\\s\\S]*?>' // declaration, e.g. <!DOCTYPE html>
    + '|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>',
    // CDATA section
    link: /^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,
    reflink: /^!?\[(label)\]\[(?!\s*\])((?:\\[\[\]]?|[^\[\]\\])+)\]/,
    nolink: /^!?\[(?!\s*\])((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\](?:\[\])?/,
    reflinkSearch: 'reflink|nolink(?!\\()',
    emStrong: {
      lDelim: /^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,
      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.
      //        () Skip orphan delim inside strong    (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a
      rDelimAst: /^[^_*]*?\_\_[^_*]*?\*[^_*]*?(?=\_\_)|[punct_](\*+)(?=[\s]|$)|[^punct*_\s](\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|[^punct*_\s](\*+)(?=[^punct*_\s])/,
      rDelimUnd: /^[^_*]*?\*\*[^_*]*?\_[^_*]*?(?=\*\*)|[punct*](\_+)(?=[\s]|$)|[^punct*_\s](\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/ // ^- Not allowed for _

    },
    code: /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,
    br: /^( {2,}|\\)\n(?!\s*$)/,
    del: noopTest,
    text: /^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,
    punctuation: /^([\spunctuation])/
  }; // list of punctuation marks from CommonMark spec
  // without * and _ to handle the different emphasis markers * and _

  inline._punctuation = '!"#$%&\'()+\\-.,/:;<=>?@\\[\\]`^{|}~';
  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>

  inline.blockSkip = /\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g;
  inline.escapedEmSt = /\\\*|\\_/g;
  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();
  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();
  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();
  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();
  inline._escapes = /\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g;
  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;
  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;
  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();
  inline._attribute = /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/;
  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();
  inline._label = /(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/;
  inline._href = /<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/;
  inline._title = /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/;
  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();
  inline.reflink = edit(inline.reflink).replace('label', inline._label).getRegex();
  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();
  /**
   * Normal Inline Grammar
   */

  inline.normal = merge({}, inline);
  /**
   * Pedantic Inline Grammar
   */

  inline.pedantic = merge({}, inline.normal, {
    strong: {
      start: /^__|\*\*/,
      middle: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,
      endAst: /\*\*(?!\*)/g,
      endUnd: /__(?!_)/g
    },
    em: {
      start: /^_|\*/,
      middle: /^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,
      endAst: /\*(?!\*)/g,
      endUnd: /_(?!_)/g
    },
    link: edit(/^!?\[(label)\]\((.*?)\)/).replace('label', inline._label).getRegex(),
    reflink: edit(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace('label', inline._label).getRegex()
  });
  /**
   * GFM Inline Grammar
   */

  inline.gfm = merge({}, inline.normal, {
    escape: edit(inline.escape).replace('])', '~|])').getRegex(),
    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,
    url: /^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,
    _backpedal: /(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,
    del: /^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,
    text: /^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/
  });
  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();
  /**
   * GFM + Line Breaks Inline Grammar
   */

  inline.breaks = merge({}, inline.gfm, {
    br: edit(inline.br).replace('{2,}', '*').getRegex(),
    text: edit(inline.gfm.text).replace('\\b_', '\\b_| {2,}\\n').replace(/\{2,\}/g, '*').getRegex()
  });
  /**
   * smartypants text replacement
   */

  function smartypants(text) {
    return text // em-dashes
    .replace(/---/g, "\u2014") // en-dashes
    .replace(/--/g, "\u2013") // opening singles
    .replace(/(^|[-\u2014/(\[{"\s])'/g, "$1\u2018") // closing singles & apostrophes
    .replace(/'/g, "\u2019") // opening doubles
    .replace(/(^|[-\u2014/(\[{\u2018\s])"/g, "$1\u201C") // closing doubles
    .replace(/"/g, "\u201D") // ellipses
    .replace(/\.{3}/g, "\u2026");
  }
  /**
   * mangle email addresses
   */


  function mangle(text) {
    var out = '',
        i,
        ch;
    var l = text.length;

    for (i = 0; i < l; i++) {
      ch = text.charCodeAt(i);

      if (Math.random() > 0.5) {
        ch = 'x' + ch.toString(16);
      }

      out += '&#' + ch + ';';
    }

    return out;
  }
  /**
   * Block Lexer
   */


  var Lexer = /*#__PURE__*/function () {
    function Lexer(options) {
      _classCallCheck(this, Lexer);

      this.tokens = [];
      this.tokens.links = Object.create(null);
      this.options = options || defaults;
      this.options.tokenizer = this.options.tokenizer || new Tokenizer();
      this.tokenizer = this.options.tokenizer;
      this.tokenizer.options = this.options;
      this.tokenizer.lexer = this;
      this.inlineQueue = [];
      this.state = {
        inLink: false,
        inRawBlock: false,
        top: true
      };
      var rules = {
        block: block.normal,
        inline: inline.normal
      };

      if (this.options.pedantic) {
        rules.block = block.pedantic;
        rules.inline = inline.pedantic;
      } else if (this.options.gfm) {
        rules.block = block.gfm;

        if (this.options.breaks) {
          rules.inline = inline.breaks;
        } else {
          rules.inline = inline.gfm;
        }
      }

      this.tokenizer.rules = rules;
    }
    /**
     * Expose Rules
     */


    _createClass(Lexer, [{
      key: "lex",
      value:
      /**
       * Preprocessing
       */
      function lex(src) {
        src = src.replace(/\r\n|\r/g, '\n').replace(/\t/g, '    ');
        this.blockTokens(src, this.tokens);
        var next;

        while (next = this.inlineQueue.shift()) {
          this.inlineTokens(next.src, next.tokens);
        }

        return this.tokens;
      }
      /**
       * Lexing
       */

    }, {
      key: "blockTokens",
      value: function blockTokens(src) {
        var _this = this;

        var tokens = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

        if (this.options.pedantic) {
          src = src.replace(/^ +$/gm, '');
        }

        var token, lastToken, cutSrc, lastParagraphClipped;

        while (src) {
          if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {
            if (token = extTokenizer.call({
              lexer: _this
            }, src, tokens)) {
              src = src.substring(token.raw.length);
              tokens.push(token);
              return true;
            }

            return false;
          })) {
            continue;
          } // newline


          if (token = this.tokenizer.space(src)) {
            src = src.substring(token.raw.length);

            if (token.type) {
              tokens.push(token);
            }

            continue;
          } // code


          if (token = this.tokenizer.code(src)) {
            src = src.substring(token.raw.length);
            lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.

            if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {
              lastToken.raw += '\n' + token.raw;
              lastToken.text += '\n' + token.text;
              this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
            } else {
              tokens.push(token);
            }

            continue;
          } // fences


          if (token = this.tokenizer.fences(src)) {
            src = src.substring(token.raw.length);
            tokens.push(token);
            continue;
          } // heading


          if (token = this.tokenizer.heading(src)) {
            src = src.substring(token.raw.length);
            tokens.push(token);
            continue;
          } // hr


          if (token = this.tokenizer.hr(src)) {
            src = src.substring(token.raw.length);
            tokens.push(token);
            continue;
          } // blockquote


          if (token = this.tokenizer.blockquote(src)) {
            src = src.substring(token.raw.length);
            tokens.push(token);
            continue;
          } // list


          if (token = this.tokenizer.list(src)) {
            src = src.substring(token.raw.length);
            tokens.push(token);
            continue;
          } // html


          if (token = this.tokenizer.html(src)) {
            src = src.substring(token.raw.length);
            tokens.push(token);
            continue;
          } // def


          if (token = this.tokenizer.def(src)) {
            src = src.substring(token.raw.length);
            lastToken = tokens[tokens.length - 1];

            if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {
              lastToken.raw += '\n' + token.raw;
              lastToken.text += '\n' + token.raw;
              this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
            } else if (!this.tokens.links[token.tag]) {
              this.tokens.links[token.tag] = {
                href: token.href,
                title: token.title
              };
            }

            continue;
          } // table (gfm)


          if (token = this.tokenizer.table(src)) {
            src = src.substring(token.raw.length);
            tokens.push(token);
            continue;
          } // lheading


          if (token = this.tokenizer.lheading(src)) {
            src = src.substring(token.raw.length);
            tokens.push(token);
            continue;
          } // top-level paragraph
          // prevent paragraph consuming extensions by clipping 'src' to extension start


          cutSrc = src;

          if (this.options.extensions && this.options.extensions.startBlock) {
            (function () {
              var startIndex = Infinity;
              var tempSrc = src.slice(1);
              var tempStart = void 0;

              _this.options.extensions.startBlock.forEach(function (getStartIndex) {
                tempStart = getStartIndex.call({
                  lexer: this
                }, tempSrc);

                if (typeof tempStart === 'number' && tempStart >= 0) {
                  startIndex = Math.min(startIndex, tempStart);
                }
              });

              if (startIndex < Infinity && startIndex >= 0) {
                cutSrc = src.substring(0, startIndex + 1);
              }
            })();
          }

          if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {
            lastToken = tokens[tokens.length - 1];

            if (lastParagraphClipped && lastToken.type === 'paragraph') {
              lastToken.raw += '\n' + token.raw;
              lastToken.text += '\n' + token.text;
              this.inlineQueue.pop();
              this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
            } else {
              tokens.push(token);
            }

            lastParagraphClipped = cutSrc.length !== src.length;
            src = src.substring(token.raw.length);
            continue;
          } // text


          if (token = this.tokenizer.text(src)) {
            src = src.substring(token.raw.length);
            lastToken = tokens[tokens.length - 1];

            if (lastToken && lastToken.type === 'text') {
              lastToken.raw += '\n' + token.raw;
              lastToken.text += '\n' + token.text;
              this.inlineQueue.pop();
              this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
            } else {
              tokens.push(token);
            }

            continue;
          }

          if (src) {
            var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);

            if (this.options.silent) {
              console.error(errMsg);
              break;
            } else {
              throw new Error(errMsg);
            }
          }
        }

        this.state.top = true;
        return tokens;
      }
    }, {
      key: "inline",
      value: function inline(src, tokens) {
        this.inlineQueue.push({
          src: src,
          tokens: tokens
        });
      }
      /**
       * Lexing/Compiling
       */

    }, {
      key: "inlineTokens",
      value: function inlineTokens(src) {
        var _this2 = this;

        var tokens = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong

        var maskedSrc = src;
        var match;
        var keepPrevChar, prevChar; // Mask out reflinks

        if (this.tokens.links) {
          var links = Object.keys(this.tokens.links);

          if (links.length > 0) {
            while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {
              if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {
                maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);
              }
            }
          }
        } // Mask out other blocks


        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {
          maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);
        } // Mask out escaped em & strong delimiters


        while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {
          maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);
        }

        while (src) {
          if (!keepPrevChar) {
            prevChar = '';
          }

          keepPrevChar = false; // extensions

          if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {
            if (token = extTokenizer.call({
              lexer: _this2
            }, src, tokens)) {
              src = src.substring(token.raw.length);
              tokens.push(token);
              return true;
            }

            return false;
          })) {
            continue;
          } // escape


          if (token = this.tokenizer.escape(src)) {
            src = src.substring(token.raw.length);
            tokens.push(token);
            continue;
          } // tag


          if (token = this.tokenizer.tag(src)) {
            src = src.substring(token.raw.length);
            lastToken = tokens[tokens.length - 1];

            if (lastToken && token.type === 'text' && lastToken.type === 'text') {
              lastToken.raw += token.raw;
              lastToken.text += token.text;
            } else {
              tokens.push(token);
            }

            continue;
          } // link


          if (token = this.tokenizer.link(src)) {
            src = src.substring(token.raw.length);
            tokens.push(token);
            continue;
          } // reflink, nolink


          if (token = this.tokenizer.reflink(src, this.tokens.links)) {
            src = src.substring(token.raw.length);
            lastToken = tokens[tokens.length - 1];

            if (lastToken && token.type === 'text' && lastToken.type === 'text') {
              lastToken.raw += token.raw;
              lastToken.text += token.text;
            } else {
              tokens.push(token);
            }

            continue;
          } // em & strong


          if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {
            src = src.substring(token.raw.length);
            tokens.push(token);
            continue;
          } // code


          if (token = this.tokenizer.codespan(src)) {
            src = src.substring(token.raw.length);
            tokens.push(token);
            continue;
          } // br


          if (token = this.tokenizer.br(src)) {
            src = src.substring(token.raw.length);
            tokens.push(token);
            continue;
          } // del (gfm)


          if (token = this.tokenizer.del(src)) {
            src = src.substring(token.raw.length);
            tokens.push(token);
            continue;
          } // autolink


          if (token = this.tokenizer.autolink(src, mangle)) {
            src = src.substring(token.raw.length);
            tokens.push(token);
            continue;
          } // url (gfm)


          if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {
            src = src.substring(token.raw.length);
            tokens.push(token);
            continue;
          } // text
          // prevent inlineText consuming extensions by clipping 'src' to extension start


          cutSrc = src;

          if (this.options.extensions && this.options.extensions.startInline) {
            (function () {
              var startIndex = Infinity;
              var tempSrc = src.slice(1);
              var tempStart = void 0;

              _this2.options.extensions.startInline.forEach(function (getStartIndex) {
                tempStart = getStartIndex.call({
                  lexer: this
                }, tempSrc);

                if (typeof tempStart === 'number' && tempStart >= 0) {
                  startIndex = Math.min(startIndex, tempStart);
                }
              });

              if (startIndex < Infinity && startIndex >= 0) {
                cutSrc = src.substring(0, startIndex + 1);
              }
            })();
          }

          if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {
            src = src.substring(token.raw.length);

            if (token.raw.slice(-1) !== '_') {
              // Track prevChar before string of ____ started
              prevChar = token.raw.slice(-1);
            }

            keepPrevChar = true;
            lastToken = tokens[tokens.length - 1];

            if (lastToken && lastToken.type === 'text') {
              lastToken.raw += token.raw;
              lastToken.text += token.text;
            } else {
              tokens.push(token);
            }

            continue;
          }

          if (src) {
            var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);

            if (this.options.silent) {
              console.error(errMsg);
              break;
            } else {
              throw new Error(errMsg);
            }
          }
        }

        return tokens;
      }
    }], [{
      key: "rules",
      get: function get() {
        return {
          block: block,
          inline: inline
        };
      }
      /**
       * Static Lex Method
       */

    }, {
      key: "lex",
      value: function lex(src, options) {
        var lexer = new Lexer(options);
        return lexer.lex(src);
      }
      /**
       * Static Lex Inline Method
       */

    }, {
      key: "lexInline",
      value: function lexInline(src, options) {
        var lexer = new Lexer(options);
        return lexer.inlineTokens(src);
      }
    }]);

    return Lexer;
  }();
  /**
   * Renderer
   */


  var Renderer = /*#__PURE__*/function () {
    function Renderer(options) {
      _classCallCheck(this, Renderer);

      this.options = options || defaults;
    }

    _createClass(Renderer, [{
      key: "code",
      value: function code(_code, infostring, escaped) {
        var lang = (infostring || '').match(/\S*/)[0];

        if (this.options.highlight) {
          var out = this.options.highlight(_code, lang);

          if (out != null && out !== _code) {
            escaped = true;
            _code = out;
          }
        }

        _code = _code.replace(/\n$/, '') + '\n';

        if (!lang) {
          return '<pre><code>' + (escaped ? _code : _escape(_code, true)) + '</code></pre>\n';
        }

        return '<pre><code class="' + this.options.langPrefix + _escape(lang, true) + '">' + (escaped ? _code : _escape(_code, true)) + '</code></pre>\n';
      }
    }, {
      key: "blockquote",
      value: function blockquote(quote) {
        return '<blockquote>\n' + quote + '</blockquote>\n';
      }
    }, {
      key: "html",
      value: function html(_html) {
        return _html;
      }
    }, {
      key: "heading",
      value: function heading(text, level, raw, slugger) {
        if (this.options.headerIds) {
          return '<h' + level + ' id="' + this.options.headerPrefix + slugger.slug(raw) + '">' + text + '</h' + level + '>\n';
        } // ignore IDs


        return '<h' + level + '>' + text + '</h' + level + '>\n';
      }
    }, {
      key: "hr",
      value: function hr() {
        return this.options.xhtml ? '<hr/>\n' : '<hr>\n';
      }
    }, {
      key: "list",
      value: function list(body, ordered, start) {
        var type = ordered ? 'ol' : 'ul',
            startatt = ordered && start !== 1 ? ' start="' + start + '"' : '';
        return '<' + type + startatt + '>\n' + body + '</' + type + '>\n';
      }
    }, {
      key: "listitem",
      value: function listitem(text) {
        return '<li>' + text + '</li>\n';
      }
    }, {
      key: "checkbox",
      value: function checkbox(checked) {
        return '<input ' + (checked ? 'checked="" ' : '') + 'disabled="" type="checkbox"' + (this.options.xhtml ? ' /' : '') + '> ';
      }
    }, {
      key: "paragraph",
      value: function paragraph(text) {
        return '<p>' + text + '</p>\n';
      }
    }, {
      key: "table",
      value: function table(header, body) {
        if (body) body = '<tbody>' + body + '</tbody>';
        return '<table>\n' + '<thead>\n' + header + '</thead>\n' + body + '</table>\n';
      }
    }, {
      key: "tablerow",
      value: function tablerow(content) {
        return '<tr>\n' + content + '</tr>\n';
      }
    }, {
      key: "tablecell",
      value: function tablecell(content, flags) {
        var type = flags.header ? 'th' : 'td';
        var tag = flags.align ? '<' + type + ' align="' + flags.align + '">' : '<' + type + '>';
        return tag + content + '</' + type + '>\n';
      } // span level renderer

    }, {
      key: "strong",
      value: function strong(text) {
        return '<strong>' + text + '</strong>';
      }
    }, {
      key: "em",
      value: function em(text) {
        return '<em>' + text + '</em>';
      }
    }, {
      key: "codespan",
      value: function codespan(text) {
        return '<code>' + text + '</code>';
      }
    }, {
      key: "br",
      value: function br() {
        return this.options.xhtml ? '<br/>' : '<br>';
      }
    }, {
      key: "del",
      value: function del(text) {
        return '<del>' + text + '</del>';
      }
    }, {
      key: "link",
      value: function link(href, title, text) {
        href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);

        if (href === null) {
          return text;
        }

        var out = '<a href="' + _escape(href) + '"';

        if (title) {
          out += ' title="' + title + '"';
        }

        out += '>' + text + '</a>';
        return out;
      }
    }, {
      key: "image",
      value: function image(href, title, text) {
        href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);

        if (href === null) {
          return text;
        }

        var out = '<img src="' + href + '" alt="' + text + '"';

        if (title) {
          out += ' title="' + title + '"';
        }

        out += this.options.xhtml ? '/>' : '>';
        return out;
      }
    }, {
      key: "text",
      value: function text(_text2) {
        return _text2;
      }
    }]);

    return Renderer;
  }();
  /**
   * TextRenderer
   * returns only the textual part of the token
   */


  var TextRenderer = /*#__PURE__*/function () {
    function TextRenderer() {
      _classCallCheck(this, TextRenderer);
    }

    _createClass(TextRenderer, [{
      key: "strong",
      value: // no need for block level renderers
      function strong(text) {
        return text;
      }
    }, {
      key: "em",
      value: function em(text) {
        return text;
      }
    }, {
      key: "codespan",
      value: function codespan(text) {
        return text;
      }
    }, {
      key: "del",
      value: function del(text) {
        return text;
      }
    }, {
      key: "html",
      value: function html(text) {
        return text;
      }
    }, {
      key: "text",
      value: function text(_text3) {
        return _text3;
      }
    }, {
      key: "link",
      value: function link(href, title, text) {
        return '' + text;
      }
    }, {
      key: "image",
      value: function image(href, title, text) {
        return '' + text;
      }
    }, {
      key: "br",
      value: function br() {
        return '';
      }
    }]);

    return TextRenderer;
  }();
  /**
   * Slugger generates header id
   */


  var Slugger = /*#__PURE__*/function () {
    function Slugger() {
      _classCallCheck(this, Slugger);

      this.seen = {};
    }

    _createClass(Slugger, [{
      key: "serialize",
      value: function serialize(value) {
        return value.toLowerCase().trim() // remove html tags
        .replace(/<[!\/a-z].*?>/ig, '') // remove unwanted chars
        .replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g, '').replace(/\s/g, '-');
      }
      /**
       * Finds the next safe (unique) slug to use
       */

    }, {
      key: "getNextSafeSlug",
      value: function getNextSafeSlug(originalSlug, isDryRun) {
        var slug = originalSlug;
        var occurenceAccumulator = 0;

        if (this.seen.hasOwnProperty(slug)) {
          occurenceAccumulator = this.seen[originalSlug];

          do {
            occurenceAccumulator++;
            slug = originalSlug + '-' + occurenceAccumulator;
          } while (this.seen.hasOwnProperty(slug));
        }

        if (!isDryRun) {
          this.seen[originalSlug] = occurenceAccumulator;
          this.seen[slug] = 0;
        }

        return slug;
      }
      /**
       * Convert string to unique id
       * @param {object} options
       * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.
       */

    }, {
      key: "slug",
      value: function slug(value) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var slug = this.serialize(value);
        return this.getNextSafeSlug(slug, options.dryrun);
      }
    }]);

    return Slugger;
  }();
  /**
   * Parsing & Compiling
   */


  var Parser = /*#__PURE__*/function () {
    function Parser(options) {
      _classCallCheck(this, Parser);

      this.options = options || defaults;
      this.options.renderer = this.options.renderer || new Renderer();
      this.renderer = this.options.renderer;
      this.renderer.options = this.options;
      this.textRenderer = new TextRenderer();
      this.slugger = new Slugger();
    }
    /**
     * Static Parse Method
     */


    _createClass(Parser, [{
      key: "parse",
      value:
      /**
       * Parse Loop
       */
      function parse(tokens) {
        var top = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        var out = '',
            i,
            j,
            k,
            l2,
            l3,
            row,
            cell,
            header,
            body,
            token,
            ordered,
            start,
            loose,
            itemBody,
            item,
            checked,
            task,
            checkbox,
            ret;
        var l = tokens.length;

        for (i = 0; i < l; i++) {
          token = tokens[i]; // Run any renderer extensions

          if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {
            ret = this.options.extensions.renderers[token.type].call({
              parser: this
            }, token);

            if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {
              out += ret || '';
              continue;
            }
          }

          switch (token.type) {
            case 'space':
              {
                continue;
              }

            case 'hr':
              {
                out += this.renderer.hr();
                continue;
              }

            case 'heading':
              {
                out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);
                continue;
              }

            case 'code':
              {
                out += this.renderer.code(token.text, token.lang, token.escaped);
                continue;
              }

            case 'table':
              {
                header = ''; // header

                cell = '';
                l2 = token.header.length;

                for (j = 0; j < l2; j++) {
                  cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {
                    header: true,
                    align: token.align[j]
                  });
                }

                header += this.renderer.tablerow(cell);
                body = '';
                l2 = token.rows.length;

                for (j = 0; j < l2; j++) {
                  row = token.rows[j];
                  cell = '';
                  l3 = row.length;

                  for (k = 0; k < l3; k++) {
                    cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {
                      header: false,
                      align: token.align[k]
                    });
                  }

                  body += this.renderer.tablerow(cell);
                }

                out += this.renderer.table(header, body);
                continue;
              }

            case 'blockquote':
              {
                body = this.parse(token.tokens);
                out += this.renderer.blockquote(body);
                continue;
              }

            case 'list':
              {
                ordered = token.ordered;
                start = token.start;
                loose = token.loose;
                l2 = token.items.length;
                body = '';

                for (j = 0; j < l2; j++) {
                  item = token.items[j];
                  checked = item.checked;
                  task = item.task;
                  itemBody = '';

                  if (item.task) {
                    checkbox = this.renderer.checkbox(checked);

                    if (loose) {
                      if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {
                        item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;

                        if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {
                          item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;
                        }
                      } else {
                        item.tokens.unshift({
                          type: 'text',
                          text: checkbox
                        });
                      }
                    } else {
                      itemBody += checkbox;
                    }
                  }

                  itemBody += this.parse(item.tokens, loose);
                  body += this.renderer.listitem(itemBody, task, checked);
                }

                out += this.renderer.list(body, ordered, start);
                continue;
              }

            case 'html':
              {
                // TODO parse inline content if parameter markdown=1
                out += this.renderer.html(token.text);
                continue;
              }

            case 'paragraph':
              {
                out += this.renderer.paragraph(this.parseInline(token.tokens));
                continue;
              }

            case 'text':
              {
                body = token.tokens ? this.parseInline(token.tokens) : token.text;

                while (i + 1 < l && tokens[i + 1].type === 'text') {
                  token = tokens[++i];
                  body += '\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);
                }

                out += top ? this.renderer.paragraph(body) : body;
                continue;
              }

            default:
              {
                var errMsg = 'Token with "' + token.type + '" type was not found.';

                if (this.options.silent) {
                  console.error(errMsg);
                  return;
                } else {
                  throw new Error(errMsg);
                }
              }
          }
        }

        return out;
      }
      /**
       * Parse Inline Tokens
       */

    }, {
      key: "parseInline",
      value: function parseInline(tokens, renderer) {
        renderer = renderer || this.renderer;
        var out = '',
            i,
            token,
            ret;
        var l = tokens.length;

        for (i = 0; i < l; i++) {
          token = tokens[i]; // Run any renderer extensions

          if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {
            ret = this.options.extensions.renderers[token.type].call({
              parser: this
            }, token);

            if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {
              out += ret || '';
              continue;
            }
          }

          switch (token.type) {
            case 'escape':
              {
                out += renderer.text(token.text);
                break;
              }

            case 'html':
              {
                out += renderer.html(token.text);
                break;
              }

            case 'link':
              {
                out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));
                break;
              }

            case 'image':
              {
                out += renderer.image(token.href, token.title, token.text);
                break;
              }

            case 'strong':
              {
                out += renderer.strong(this.parseInline(token.tokens, renderer));
                break;
              }

            case 'em':
              {
                out += renderer.em(this.parseInline(token.tokens, renderer));
                break;
              }

            case 'codespan':
              {
                out += renderer.codespan(token.text);
                break;
              }

            case 'br':
              {
                out += renderer.br();
                break;
              }

            case 'del':
              {
                out += renderer.del(this.parseInline(token.tokens, renderer));
                break;
              }

            case 'text':
              {
                out += renderer.text(token.text);
                break;
              }

            default:
              {
                var errMsg = 'Token with "' + token.type + '" type was not found.';

                if (this.options.silent) {
                  console.error(errMsg);
                  return;
                } else {
                  throw new Error(errMsg);
                }
              }
          }
        }

        return out;
      }
    }], [{
      key: "parse",
      value: function parse(tokens, options) {
        var parser = new Parser(options);
        return parser.parse(tokens);
      }
      /**
       * Static Parse Inline Method
       */

    }, {
      key: "parseInline",
      value: function parseInline(tokens, options) {
        var parser = new Parser(options);
        return parser.parseInline(tokens);
      }
    }]);

    return Parser;
  }();
  /**
   * Marked
   */


  function marked(src, opt, callback) {
    // throw error in case of non string input
    if (typeof src === 'undefined' || src === null) {
      throw new Error('marked(): input parameter is undefined or null');
    }

    if (typeof src !== 'string') {
      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');
    }

    if (typeof opt === 'function') {
      callback = opt;
      opt = null;
    }

    opt = merge({}, marked.defaults, opt || {});
    checkSanitizeDeprecation(opt);

    if (callback) {
      var highlight = opt.highlight;
      var tokens;

      try {
        tokens = Lexer.lex(src, opt);
      } catch (e) {
        return callback(e);
      }

      var done = function done(err) {
        var out;

        if (!err) {
          try {
            if (opt.walkTokens) {
              marked.walkTokens(tokens, opt.walkTokens);
            }

            out = Parser.parse(tokens, opt);
          } catch (e) {
            err = e;
          }
        }

        opt.highlight = highlight;
        return err ? callback(err) : callback(null, out);
      };

      if (!highlight || highlight.length < 3) {
        return done();
      }

      delete opt.highlight;
      if (!tokens.length) return done();
      var pending = 0;
      marked.walkTokens(tokens, function (token) {
        if (token.type === 'code') {
          pending++;
          setTimeout(function () {
            highlight(token.text, token.lang, function (err, code) {
              if (err) {
                return done(err);
              }

              if (code != null && code !== token.text) {
                token.text = code;
                token.escaped = true;
              }

              pending--;

              if (pending === 0) {
                done();
              }
            });
          }, 0);
        }
      });

      if (pending === 0) {
        done();
      }

      return;
    }

    try {
      var _tokens = Lexer.lex(src, opt);

      if (opt.walkTokens) {
        marked.walkTokens(_tokens, opt.walkTokens);
      }

      return Parser.parse(_tokens, opt);
    } catch (e) {
      e.message += '\nPlease report this to https://github.com/markedjs/marked.';

      if (opt.silent) {
        return '<p>An error occurred:</p><pre>' + _escape(e.message + '', true) + '</pre>';
      }

      throw e;
    }
  }
  /**
   * Options
   */


  marked.options = marked.setOptions = function (opt) {
    merge(marked.defaults, opt);
    changeDefaults(marked.defaults);
    return marked;
  };

  marked.getDefaults = getDefaults;
  marked.defaults = defaults;
  /**
   * Use Extension
   */

  marked.use = function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var opts = merge.apply(void 0, [{}].concat(args));
    var extensions = marked.defaults.extensions || {
      renderers: {},
      childTokens: {}
    };
    var hasExtensions;
    args.forEach(function (pack) {
      // ==-- Parse "addon" extensions --== //
      if (pack.extensions) {
        hasExtensions = true;
        pack.extensions.forEach(function (ext) {
          if (!ext.name) {
            throw new Error('extension name required');
          }

          if (ext.renderer) {
            // Renderer extensions
            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;

            if (prevRenderer) {
              // Replace extension with func to run new extension but fall back if false
              extensions.renderers[ext.name] = function () {
                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                  args[_key2] = arguments[_key2];
                }

                var ret = ext.renderer.apply(this, args);

                if (ret === false) {
                  ret = prevRenderer.apply(this, args);
                }

                return ret;
              };
            } else {
              extensions.renderers[ext.name] = ext.renderer;
            }
          }

          if (ext.tokenizer) {
            // Tokenizer Extensions
            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {
              throw new Error("extension level must be 'block' or 'inline'");
            }

            if (extensions[ext.level]) {
              extensions[ext.level].unshift(ext.tokenizer);
            } else {
              extensions[ext.level] = [ext.tokenizer];
            }

            if (ext.start) {
              // Function to check for start of token
              if (ext.level === 'block') {
                if (extensions.startBlock) {
                  extensions.startBlock.push(ext.start);
                } else {
                  extensions.startBlock = [ext.start];
                }
              } else if (ext.level === 'inline') {
                if (extensions.startInline) {
                  extensions.startInline.push(ext.start);
                } else {
                  extensions.startInline = [ext.start];
                }
              }
            }
          }

          if (ext.childTokens) {
            // Child tokens to be visited by walkTokens
            extensions.childTokens[ext.name] = ext.childTokens;
          }
        });
      } // ==-- Parse "overwrite" extensions --== //


      if (pack.renderer) {
        (function () {
          var renderer = marked.defaults.renderer || new Renderer();

          var _loop = function _loop(prop) {
            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false

            renderer[prop] = function () {
              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
                args[_key3] = arguments[_key3];
              }

              var ret = pack.renderer[prop].apply(renderer, args);

              if (ret === false) {
                ret = prevRenderer.apply(renderer, args);
              }

              return ret;
            };
          };

          for (var prop in pack.renderer) {
            _loop(prop);
          }

          opts.renderer = renderer;
        })();
      }

      if (pack.tokenizer) {
        (function () {
          var tokenizer = marked.defaults.tokenizer || new Tokenizer();

          var _loop2 = function _loop2(prop) {
            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false

            tokenizer[prop] = function () {
              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
                args[_key4] = arguments[_key4];
              }

              var ret = pack.tokenizer[prop].apply(tokenizer, args);

              if (ret === false) {
                ret = prevTokenizer.apply(tokenizer, args);
              }

              return ret;
            };
          };

          for (var prop in pack.tokenizer) {
            _loop2(prop);
          }

          opts.tokenizer = tokenizer;
        })();
      } // ==-- Parse WalkTokens extensions --== //


      if (pack.walkTokens) {
        var _walkTokens = marked.defaults.walkTokens;

        opts.walkTokens = function (token) {
          pack.walkTokens.call(this, token);

          if (_walkTokens) {
            _walkTokens.call(this, token);
          }
        };
      }

      if (hasExtensions) {
        opts.extensions = extensions;
      }

      marked.setOptions(opts);
    });
  };
  /**
   * Run callback for every token
   */


  marked.walkTokens = function (tokens, callback) {
    var _iterator = _createForOfIteratorHelper(tokens),
        _step;

    try {
      var _loop3 = function _loop3() {
        var token = _step.value;
        callback.call(marked, token);

        switch (token.type) {
          case 'table':
            {
              var _iterator2 = _createForOfIteratorHelper(token.header),
                  _step2;

              try {
                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                  var cell = _step2.value;
                  marked.walkTokens(cell.tokens, callback);
                }
              } catch (err) {
                _iterator2.e(err);
              } finally {
                _iterator2.f();
              }

              var _iterator3 = _createForOfIteratorHelper(token.rows),
                  _step3;

              try {
                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
                  var row = _step3.value;

                  var _iterator4 = _createForOfIteratorHelper(row),
                      _step4;

                  try {
                    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                      var _cell = _step4.value;
                      marked.walkTokens(_cell.tokens, callback);
                    }
                  } catch (err) {
                    _iterator4.e(err);
                  } finally {
                    _iterator4.f();
                  }
                }
              } catch (err) {
                _iterator3.e(err);
              } finally {
                _iterator3.f();
              }

              break;
            }

          case 'list':
            {
              marked.walkTokens(token.items, callback);
              break;
            }

          default:
            {
              if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {
                // Walk any extensions
                marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {
                  marked.walkTokens(token[childTokens], callback);
                });
              } else if (token.tokens) {
                marked.walkTokens(token.tokens, callback);
              }
            }
        }
      };

      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        _loop3();
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  };
  /**
   * Parse Inline
   */


  marked.parseInline = function (src, opt) {
    // throw error in case of non string input
    if (typeof src === 'undefined' || src === null) {
      throw new Error('marked.parseInline(): input parameter is undefined or null');
    }

    if (typeof src !== 'string') {
      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');
    }

    opt = merge({}, marked.defaults, opt || {});
    checkSanitizeDeprecation(opt);

    try {
      var tokens = Lexer.lexInline(src, opt);

      if (opt.walkTokens) {
        marked.walkTokens(tokens, opt.walkTokens);
      }

      return Parser.parseInline(tokens, opt);
    } catch (e) {
      e.message += '\nPlease report this to https://github.com/markedjs/marked.';

      if (opt.silent) {
        return '<p>An error occurred:</p><pre>' + _escape(e.message + '', true) + '</pre>';
      }

      throw e;
    }
  };
  /**
   * Expose
   */


  marked.Parser = Parser;
  marked.parser = Parser.parse;
  marked.Renderer = Renderer;
  marked.TextRenderer = TextRenderer;
  marked.Lexer = Lexer;
  marked.lexer = Lexer.lex;
  marked.Tokenizer = Tokenizer;
  marked.Slugger = Slugger;
  marked.parse = marked;

  function _createSuper$9(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$9(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$9() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$9 = "src/components/Loading.svelte";

  function create_fragment$9(ctx) {
    var div1;
    var h5;
    var t1;
    var div0;
    var spinner;
    var current;
    spinner = new Spinner({
      props: {
        color: "#9ccc65",
        size: "3em"
      },
      $$inline: true
    });
    var block = {
      c: function create() {
        div1 = element("div");
        h5 = element("h5");
        h5.textContent = "データを読込んでいます";
        t1 = space();
        div0 = element("div");
        create_component(spinner.$$.fragment);
        add_location(h5, file$9, 2, 3, 26);
        attr_dev(div0, "class", "spinner svelte-u2hvg6");
        add_location(div0, file$9, 3, 3, 50);
        attr_dev(div1, "class", "loading svelte-u2hvg6");
        add_location(div1, file$9, 0, 0, 0);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, div1, anchor);
        append_dev(div1, h5);
        append_dev(div1, t1);
        append_dev(div1, div0);
        mount_component(spinner, div0, null);
        current = true;
      },
      p: noop,
      i: function intro(local) {
        if (current) return;
        transition_in(spinner.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        transition_out(spinner.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div1);
        destroy_component(spinner);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$9.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$9($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Loading', slots, []);
    var writable_props = [];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Loading> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$capture_state = function () {
      return {
        Spinner: Spinner
      };
    };

    return [];
  }

  var Loading = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Loading, _SvelteComponentDev);

    var _super = _createSuper$9(Loading);

    function Loading(options) {
      var _this;

      _classCallCheck(this, Loading);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$9, create_fragment$9, safe_not_equal, {});
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Loading",
        options: options,
        id: create_fragment$9.name
      });
      return _this;
    }

    return Loading;
  }(SvelteComponentDev);

  function flip(node, _ref) {
    var from = _ref.from,
        to = _ref.to;
    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var style = getComputedStyle(node);
    var transform = style.transform === 'none' ? '' : style.transform;

    var _style$transformOrigi = style.transformOrigin.split(' ').map(parseFloat),
        _style$transformOrigi2 = _slicedToArray(_style$transformOrigi, 2),
        ox = _style$transformOrigi2[0],
        oy = _style$transformOrigi2[1];

    var dx = from.left + from.width * ox / to.width - (to.left + ox);
    var dy = from.top + from.height * oy / to.height - (to.top + oy);
    var _params$delay = params.delay,
        delay = _params$delay === void 0 ? 0 : _params$delay,
        _params$duration = params.duration,
        duration = _params$duration === void 0 ? function (d) {
      return Math.sqrt(d) * 120;
    } : _params$duration,
        _params$easing = params.easing,
        easing = _params$easing === void 0 ? cubicOut : _params$easing;
    return {
      delay: delay,
      duration: is_function(duration) ? duration(Math.sqrt(dx * dx + dy * dy)) : duration,
      easing: easing,
      css: function css(t, u) {
        var x = u * dx;
        var y = u * dy;
        var sx = t + u * from.width / to.width;
        var sy = t + u * from.height / to.height;
        return "transform: ".concat(transform, " translate(").concat(x, "px, ").concat(y, "px) scale(").concat(sx, ", ").concat(sy, ");");
      }
    };
  }

  function _createSuper$8(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$8(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$8() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$8 = "src/pages/OrderLists.svelte";

  function get_each_context$2(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[20] = list[i].item;
    child_ctx[21] = list[i].width;
    child_ctx[22] = list[i].holder;
    child_ctx[23] = list[i].required;
    child_ctx[24] = list[i].helper;
    child_ctx[25] = list[i].color;
    child_ctx[27] = i;
    return child_ctx;
  }

  function get_each_context_1$2(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[28] = list[i];
    child_ctx[30] = i;
    return child_ctx;
  }

  function get_each_context_2$2(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[31] = list[i];
    child_ctx[32] = list;
    child_ctx[33] = i;
    return child_ctx;
  }

  function get_each_context_3$1(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[31] = list[i];
    child_ctx[34] = list;
    child_ctx[35] = i;
    return child_ctx;
  } // (216:22) {#if p.shipping === 1}


  function create_if_block_2$2(ctx) {
    var span2;
    var span1;
    var span0;
    var block = {
      c: function create() {
        span2 = element("span");
        span1 = element("span");
        span0 = element("span");
        span0.textContent = "送";
        attr_dev(span0, "class", "mdc-chip__text");
        add_location(span0, file$8, 218, 29, 6078);
        attr_dev(span1, "role", "button");
        attr_dev(span1, "tabindex", "0");
        attr_dev(span1, "class", "mdc-chip__primary-action");
        add_location(span1, file$8, 217, 27, 5982);
        attr_dev(span2, "class", "chip-shipping");
        add_location(span2, file$8, 216, 25, 5926);
      },
      m: function mount(target, anchor) {
        insert_dev(target, span2, anchor);
        append_dev(span2, span1);
        append_dev(span1, span0);
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(span2);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_2$2.name,
      type: "if",
      source: "(216:22) {#if p.shipping === 1}",
      ctx: ctx
    });
    return block;
  } // (207:8) {#each cartlist.filter(t => t.done) as p (p.id)}


  function create_each_block_3$1(key_1, ctx) {
    var label;
    var div0;
    var input;
    var t0;
    var t1_value =
    /*p*/
    ctx[31].id + "";
    var t1;
    var t2;
    var t3_value =
    /*p*/
    ctx[31].title + "";
    var t3;
    var t4;
    var div3;
    var t5;
    var span2;
    var span1;
    var span0;
    var t6;
    var t7_value =
    /*p*/
    ctx[31].price + "";
    var t7;
    var t8;
    var t9;
    var span5;
    var span4;
    var span3;
    var t10;
    var t11_value =
    /*p*/
    ctx[31].pack + "";
    var t11;
    var t12;
    var div2;
    var div1;
    var t13;
    var span8;
    var span7;
    var span6;
    var t14;
    var strong;
    var t15_value =
    /*p*/
    ctx[31].subtotal + "";
    var t15;
    var t16;
    var label_intro;
    var label_outro;
    var rect;
    var stop_animation = noop;
    var current;
    var mounted;
    var dispose;

    function input_change_handler() {
      /*input_change_handler*/
      ctx[12].call(input,
      /*each_value_3*/
      ctx[34],
      /*p_index_1*/
      ctx[35]);
    }

    var if_block =
    /*p*/
    ctx[31].shipping === 1 && create_if_block_2$2(ctx);
    var block = {
      key: key_1,
      first: null,
      c: function create() {
        label = element("label");
        div0 = element("div");
        input = element("input");
        t0 = space();
        t1 = text(t1_value);
        t2 = text(":");
        t3 = text(t3_value);
        t4 = space();
        div3 = element("div");
        if (if_block) if_block.c();
        t5 = space();
        span2 = element("span");
        span1 = element("span");
        span0 = element("span");
        t6 = text("単価：");
        t7 = text(t7_value);
        t8 = text("円");
        t9 = space();
        span5 = element("span");
        span4 = element("span");
        span3 = element("span");
        t10 = text("個数：");
        t11 = text(t11_value);
        t12 = space();
        div2 = element("div");
        div1 = element("div");
        t13 = space();
        span8 = element("span");
        span7 = element("span");
        span6 = element("span");
        t14 = text("小計:");
        strong = element("strong");
        t15 = text(t15_value);
        t16 = text("円");
        attr_dev(input, "type", "checkbox");
        attr_dev(input, "class", "svelte-8sbib6");
        add_location(input, file$8, 211, 13, 5719);
        attr_dev(div0, "class", "list-item svelte-8sbib6");
        add_location(div0, file$8, 210, 10, 5682);
        attr_dev(span0, "class", "mdc-chip__text");
        add_location(span0, file$8, 225, 26, 6376);
        attr_dev(span1, "role", "button");
        attr_dev(span1, "tabindex", "0");
        attr_dev(span1, "class", "mdc-chip__primary-action");
        add_location(span1, file$8, 224, 24, 6283);
        attr_dev(span2, "class", "chip-left svelte-8sbib6");
        add_location(span2, file$8, 223, 21, 6234);
        attr_dev(span3, "class", "mdc-chip__text");
        add_location(span3, file$8, 229, 26, 6630);
        attr_dev(span4, "role", "button");
        attr_dev(span4, "tabindex", "0");
        attr_dev(span4, "class", "mdc-chip__primary-action");
        add_location(span4, file$8, 228, 24, 6537);
        attr_dev(span5, "class", "chip-right svelte-8sbib6");
        add_location(span5, file$8, 227, 29, 6487);
        attr_dev(div1, "class", "mdc-chip__ripple");
        add_location(div1, file$8, 234, 25, 6847);
        add_location(strong, file$8, 240, 36, 7189);
        attr_dev(span6, "class", "mdc-chip__text");
        add_location(span6, file$8, 239, 29, 7123);
        attr_dev(span7, "role", "button");
        attr_dev(span7, "tabindex", "-1");
        attr_dev(span7, "class", "mdc-chip__primary-action");
        add_location(span7, file$8, 236, 27, 6959);
        attr_dev(span8, "role", "gridcell");
        add_location(span8, file$8, 235, 25, 6909);
        attr_dev(div2, "class", "mdc-chip chip-subtotal svelte-8sbib6");
        attr_dev(div2, "role", "row");
        add_location(div2, file$8, 233, 23, 6774);
        attr_dev(div3, "class", "clips svelte-8sbib6");
        add_location(div3, file$8, 214, 10, 5836);
        attr_dev(label, "class", "svelte-8sbib6");
        add_location(label, file$8, 207, 9, 5571);
        this.first = label;
      },
      m: function mount(target, anchor) {
        insert_dev(target, label, anchor);
        append_dev(label, div0);
        append_dev(div0, input);
        input.checked =
        /*p*/
        ctx[31].done;
        append_dev(div0, t0);
        append_dev(div0, t1);
        append_dev(div0, t2);
        append_dev(div0, t3);
        append_dev(label, t4);
        append_dev(label, div3);
        if (if_block) if_block.m(div3, null);
        append_dev(div3, t5);
        append_dev(div3, span2);
        append_dev(span2, span1);
        append_dev(span1, span0);
        append_dev(span0, t6);
        append_dev(span0, t7);
        append_dev(span0, t8);
        append_dev(span2, t9);
        append_dev(div3, span5);
        append_dev(span5, span4);
        append_dev(span4, span3);
        append_dev(span3, t10);
        append_dev(span3, t11);
        append_dev(div3, t12);
        append_dev(div3, div2);
        append_dev(div2, div1);
        append_dev(div2, t13);
        append_dev(div2, span8);
        append_dev(span8, span7);
        append_dev(span7, span6);
        append_dev(span6, t14);
        append_dev(span6, strong);
        append_dev(strong, t15);
        append_dev(span6, t16);
        current = true;

        if (!mounted) {
          dispose = listen_dev(input, "change", input_change_handler);
          mounted = true;
        }
      },
      p: function update(new_ctx, dirty) {
        ctx = new_ctx;

        if (dirty[0] &
        /*cartlist*/
        1) {
          input.checked =
          /*p*/
          ctx[31].done;
        }

        if ((!current || dirty[0] &
        /*cartlist*/
        1) && t1_value !== (t1_value =
        /*p*/
        ctx[31].id + "")) set_data_dev(t1, t1_value);
        if ((!current || dirty[0] &
        /*cartlist*/
        1) && t3_value !== (t3_value =
        /*p*/
        ctx[31].title + "")) set_data_dev(t3, t3_value);

        if (
        /*p*/
        ctx[31].shipping === 1) {
          if (if_block) ; else {
            if_block = create_if_block_2$2(ctx);
            if_block.c();
            if_block.m(div3, t5);
          }
        } else if (if_block) {
          if_block.d(1);
          if_block = null;
        }

        if ((!current || dirty[0] &
        /*cartlist*/
        1) && t7_value !== (t7_value =
        /*p*/
        ctx[31].price + "")) set_data_dev(t7, t7_value);
        if ((!current || dirty[0] &
        /*cartlist*/
        1) && t11_value !== (t11_value =
        /*p*/
        ctx[31].pack + "")) set_data_dev(t11, t11_value);
        if ((!current || dirty[0] &
        /*cartlist*/
        1) && t15_value !== (t15_value =
        /*p*/
        ctx[31].subtotal + "")) set_data_dev(t15, t15_value);
      },
      r: function measure() {
        rect = label.getBoundingClientRect();
      },
      f: function fix() {
        fix_position(label);
        stop_animation();
        add_transform(label, rect);
      },
      a: function animate() {
        stop_animation();
        stop_animation = create_animation(label, rect, flip, {});
      },
      i: function intro(local) {
        if (current) return;
        add_render_callback(function () {
          if (label_outro) label_outro.end(1);
          label_intro = create_in_transition(label,
          /*receive*/
          ctx[5], {
            key:
            /*p*/
            ctx[31].id
          });
          label_intro.start();
        });
        current = true;
      },
      o: function outro(local) {
        if (label_intro) label_intro.invalidate();
        label_outro = create_out_transition(label,
        /*send*/
        ctx[4], {
          key:
          /*p*/
          ctx[31].id
        });
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(label);
        if (if_block) if_block.d();
        if (detaching && label_outro) label_outro.end();
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block_3$1.name,
      type: "each",
      source: "(207:8) {#each cartlist.filter(t => t.done) as p (p.id)}",
      ctx: ctx
    });
    return block;
  } // (303:16) {#if p.shipping === 1}


  function create_if_block_1$2(ctx) {
    var span2;
    var span1;
    var span0;
    var block = {
      c: function create() {
        span2 = element("span");
        span1 = element("span");
        span0 = element("span");
        span0.textContent = "送";
        attr_dev(span0, "class", "mdc-chip__text");
        add_location(span0, file$8, 306, 23, 9090);
        attr_dev(span1, "role", "button");
        attr_dev(span1, "tabindex", "0");
        attr_dev(span1, "class", "mdc-chip__primary-action");
        add_location(span1, file$8, 305, 21, 9000);
        attr_dev(span2, "class", "chip-shipping-ex svelte-8sbib6");
        add_location(span2, file$8, 304, 19, 8947);
      },
      m: function mount(target, anchor) {
        insert_dev(target, span2, anchor);
        append_dev(span2, span1);
        append_dev(span1, span0);
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(span2);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_1$2.name,
      type: "if",
      source: "(303:16) {#if p.shipping === 1}",
      ctx: ctx
    });
    return block;
  } // (291:5) {#each cartlist.filter(t => !t.done) as p (p.id)}


  function create_each_block_2$2(key_1, ctx) {
    var label;
    var div0;
    var input;
    var t0;
    var t1_value =
    /*p*/
    ctx[31].id + "";
    var t1;
    var t2;
    var t3_value =
    /*p*/
    ctx[31].title + "";
    var t3;
    var t4;
    var div3;
    var t5;
    var span2;
    var span1;
    var span0;
    var t6;
    var t7_value =
    /*p*/
    ctx[31].price + "";
    var t7;
    var t8;
    var t9;
    var span5;
    var span4;
    var span3;
    var t10;
    var t11_value =
    /*p*/
    ctx[31].pack + "";
    var t11;
    var t12;
    var div2;
    var div1;
    var t13;
    var span8;
    var span7;
    var span6;
    var t14;
    var strong;
    var t15_value =
    /*p*/
    ctx[31].subtotal + "";
    var t15;
    var t16;
    var t17;
    var label_intro;
    var label_outro;
    var rect;
    var stop_animation = noop;
    var current;
    var mounted;
    var dispose;

    function input_change_handler_1() {
      /*input_change_handler_1*/
      ctx[13].call(input,
      /*each_value_2*/
      ctx[32],
      /*p_index*/
      ctx[33]);
    }

    var if_block =
    /*p*/
    ctx[31].shipping === 1 && create_if_block_1$2(ctx);
    var block = {
      key: key_1,
      first: null,
      c: function create() {
        label = element("label");
        div0 = element("div");
        input = element("input");
        t0 = space();
        t1 = text(t1_value);
        t2 = text(":");
        t3 = text(t3_value);
        t4 = space();
        div3 = element("div");
        if (if_block) if_block.c();
        t5 = space();
        span2 = element("span");
        span1 = element("span");
        span0 = element("span");
        t6 = text("単価：");
        t7 = text(t7_value);
        t8 = text("円");
        t9 = space();
        span5 = element("span");
        span4 = element("span");
        span3 = element("span");
        t10 = text("個数：");
        t11 = text(t11_value);
        t12 = space();
        div2 = element("div");
        div1 = element("div");
        t13 = space();
        span8 = element("span");
        span7 = element("span");
        span6 = element("span");
        t14 = text("小計:");
        strong = element("strong");
        t15 = text(t15_value);
        t16 = text("円");
        t17 = space();
        attr_dev(input, "type", "checkbox");
        attr_dev(input, "class", "svelte-8sbib6");
        add_location(input, file$8, 296, 10, 8756);
        attr_dev(div0, "class", "list-item list-item-cancel svelte-8sbib6");
        add_location(div0, file$8, 295, 7, 8705);
        attr_dev(span0, "class", "mdc-chip__text");
        add_location(span0, file$8, 314, 20, 9356);
        attr_dev(span1, "role", "button");
        attr_dev(span1, "tabindex", "0");
        attr_dev(span1, "class", "mdc-chip__primary-action");
        add_location(span1, file$8, 313, 18, 9269);
        attr_dev(span2, "class", "chip-left-ex svelte-8sbib6");
        add_location(span2, file$8, 312, 15, 9223);
        attr_dev(span3, "class", "mdc-chip__text");
        add_location(span3, file$8, 318, 20, 9589);
        attr_dev(span4, "role", "button");
        attr_dev(span4, "tabindex", "0");
        attr_dev(span4, "class", "mdc-chip__primary-action");
        add_location(span4, file$8, 317, 18, 9502);
        attr_dev(span5, "class", "chip-right-ex svelte-8sbib6");
        add_location(span5, file$8, 316, 23, 9455);
        attr_dev(div1, "class", "mdc-chip__ripple");
        add_location(div1, file$8, 324, 19, 9775);
        add_location(strong, file$8, 328, 30, 10026);
        attr_dev(span6, "class", "mdc-chip__text");
        add_location(span6, file$8, 327, 23, 9966);
        attr_dev(span7, "role", "button");
        attr_dev(span7, "tabindex", "-1");
        attr_dev(span7, "class", "mdc-chip__primary-action");
        add_location(span7, file$8, 326, 21, 9875);
        attr_dev(span8, "role", "gridcell");
        add_location(span8, file$8, 325, 19, 9831);
        attr_dev(div2, "class", "mdc-chip chip-subtotal-ex svelte-8sbib6");
        add_location(div2, file$8, 323, 17, 9716);
        attr_dev(div3, "class", "clips svelte-8sbib6");
        add_location(div3, file$8, 300, 9, 8867);
        add_location(label, file$8, 291, 6, 8604);
        this.first = label;
      },
      m: function mount(target, anchor) {
        insert_dev(target, label, anchor);
        append_dev(label, div0);
        append_dev(div0, input);
        input.checked =
        /*p*/
        ctx[31].done;
        append_dev(div0, t0);
        append_dev(div0, t1);
        append_dev(div0, t2);
        append_dev(div0, t3);
        append_dev(label, t4);
        append_dev(label, div3);
        if (if_block) if_block.m(div3, null);
        append_dev(div3, t5);
        append_dev(div3, span2);
        append_dev(span2, span1);
        append_dev(span1, span0);
        append_dev(span0, t6);
        append_dev(span0, t7);
        append_dev(span0, t8);
        append_dev(span2, t9);
        append_dev(div3, span5);
        append_dev(span5, span4);
        append_dev(span4, span3);
        append_dev(span3, t10);
        append_dev(span3, t11);
        append_dev(div3, t12);
        append_dev(div3, div2);
        append_dev(div2, div1);
        append_dev(div2, t13);
        append_dev(div2, span8);
        append_dev(span8, span7);
        append_dev(span7, span6);
        append_dev(span6, t14);
        append_dev(span6, strong);
        append_dev(strong, t15);
        append_dev(span6, t16);
        append_dev(label, t17);
        current = true;

        if (!mounted) {
          dispose = listen_dev(input, "change", input_change_handler_1);
          mounted = true;
        }
      },
      p: function update(new_ctx, dirty) {
        ctx = new_ctx;

        if (dirty[0] &
        /*cartlist*/
        1) {
          input.checked =
          /*p*/
          ctx[31].done;
        }

        if ((!current || dirty[0] &
        /*cartlist*/
        1) && t1_value !== (t1_value =
        /*p*/
        ctx[31].id + "")) set_data_dev(t1, t1_value);
        if ((!current || dirty[0] &
        /*cartlist*/
        1) && t3_value !== (t3_value =
        /*p*/
        ctx[31].title + "")) set_data_dev(t3, t3_value);

        if (
        /*p*/
        ctx[31].shipping === 1) {
          if (if_block) ; else {
            if_block = create_if_block_1$2(ctx);
            if_block.c();
            if_block.m(div3, t5);
          }
        } else if (if_block) {
          if_block.d(1);
          if_block = null;
        }

        if ((!current || dirty[0] &
        /*cartlist*/
        1) && t7_value !== (t7_value =
        /*p*/
        ctx[31].price + "")) set_data_dev(t7, t7_value);
        if ((!current || dirty[0] &
        /*cartlist*/
        1) && t11_value !== (t11_value =
        /*p*/
        ctx[31].pack + "")) set_data_dev(t11, t11_value);
        if ((!current || dirty[0] &
        /*cartlist*/
        1) && t15_value !== (t15_value =
        /*p*/
        ctx[31].subtotal + "")) set_data_dev(t15, t15_value);
      },
      r: function measure() {
        rect = label.getBoundingClientRect();
      },
      f: function fix() {
        fix_position(label);
        stop_animation();
        add_transform(label, rect);
      },
      a: function animate() {
        stop_animation();
        stop_animation = create_animation(label, rect, flip, {});
      },
      i: function intro(local) {
        if (current) return;
        add_render_callback(function () {
          if (label_outro) label_outro.end(1);
          label_intro = create_in_transition(label,
          /*receive*/
          ctx[5], {
            key:
            /*p*/
            ctx[31].id
          });
          label_intro.start();
        });
        current = true;
      },
      o: function outro(local) {
        if (label_intro) label_intro.invalidate();
        label_outro = create_out_transition(label,
        /*send*/
        ctx[4], {
          key:
          /*p*/
          ctx[31].id
        });
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(label);
        if (if_block) if_block.d();
        if (detaching && label_outro) label_outro.end();
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block_2$2.name,
      type: "each",
      source: "(291:5) {#each cartlist.filter(t => !t.done) as p (p.id)}",
      ctx: ctx
    });
    return block;
  } // (349:9) {#each transfers as tr, i }


  function create_each_block_1$2(ctx) {
    var div5;
    var div4;
    var input;
    var t0;
    var div2;
    var div0;
    var t1;
    var div1;
    var t2;
    var div3;
    var t3;
    var label;
    var t4_value =
    /*tr*/
    ctx[28] + "";
    var t4;
    var mounted;
    var dispose;
    var block = {
      c: function create() {
        div5 = element("div");
        div4 = element("div");
        input = element("input");
        t0 = space();
        div2 = element("div");
        div0 = element("div");
        t1 = space();
        div1 = element("div");
        t2 = space();
        div3 = element("div");
        t3 = space();
        label = element("label");
        t4 = text(t4_value);
        attr_dev(input, "class", "mdc-radio__native-control svelte-8sbib6");
        attr_dev(input, "type", "radio");
        input.__value = /*tr*/
        ctx[28];
        input.value = input.__value;
        /*$$binding_groups*/

        ctx[15][0].push(input);
        add_location(input, file$8, 352, 19, 10443);
        attr_dev(div0, "class", "mdc-radio__outer-circle");
        add_location(div0, file$8, 357, 21, 10690);
        attr_dev(div1, "class", "mdc-radio__inner-circle");
        add_location(div1, file$8, 358, 21, 10755);
        attr_dev(div2, "class", "mdc-radio__background");
        add_location(div2, file$8, 356, 19, 10633);
        attr_dev(div3, "class", "mdc-radio__ripple");
        add_location(div3, file$8, 360, 19, 10844);
        attr_dev(div4, "class", "mdc-radio");
        add_location(div4, file$8, 351, 17, 10400);
        attr_dev(label, "class", "tr-title svelte-8sbib6");
        add_location(label, file$8, 362, 17, 10923);
        attr_dev(div5, "class", "mdc-form-field");
        add_location(div5, file$8, 349, 12, 10353);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div5, anchor);
        append_dev(div5, div4);
        append_dev(div4, input);
        input.checked = input.__value ===
        /*transfer*/
        ctx[2];
        append_dev(div4, t0);
        append_dev(div4, div2);
        append_dev(div2, div0);
        append_dev(div2, t1);
        append_dev(div2, div1);
        append_dev(div4, t2);
        append_dev(div4, div3);
        append_dev(div5, t3);
        append_dev(div5, label);
        append_dev(label, t4);

        if (!mounted) {
          dispose = listen_dev(input, "change",
          /*input_change_handler_2*/
          ctx[14]);
          mounted = true;
        }
      },
      p: function update(ctx, dirty) {
        if (dirty[0] &
        /*transfer*/
        4) {
          input.checked = input.__value ===
          /*transfer*/
          ctx[2];
        }
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div5);
        /*$$binding_groups*/

        ctx[15][0].splice(
        /*$$binding_groups*/
        ctx[15][0].indexOf(input), 1);
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block_1$2.name,
      type: "each",
      source: "(349:9) {#each transfers as tr, i }",
      ctx: ctx
    });
    return block;
  } // (407:19) {#if required === 1}


  function create_if_block$3(ctx) {
    var i;
    var checkcircle;
    var current;
    checkcircle = new Check_circle({
      props: {
        color: "red",
        size: "1em"
      },
      $$inline: true
    });
    var block = {
      c: function create() {
        i = element("i");
        create_component(checkcircle.$$.fragment);
        attr_dev(i, "class", "material-icons mdc-text-field__icon");
        set_style(i, "color", "red");
        set_style(i, "font-size", "1em");
        set_style(i, "padding-right", "10px");
        add_location(i, file$8, 407, 21, 12141);
      },
      m: function mount(target, anchor) {
        insert_dev(target, i, anchor);
        mount_component(checkcircle, i, null);
        current = true;
      },
      i: function intro(local) {
        if (current) return;
        transition_in(checkcircle.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        transition_out(checkcircle.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(i);
        destroy_component(checkcircle);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block$3.name,
      type: "if",
      source: "(407:19) {#if required === 1}",
      ctx: ctx
    });
    return block;
  } // (394:6) {#each orderer as {item, width,holder,required,helper,color}


  function create_each_block$2(ctx) {
    var div4;
    var input;
    var t0;
    var t1;
    var div3;
    var div0;
    var t2;
    var div1;
    var label;
    var t3_value =
    /*item*/
    ctx[20] + "";
    var t3;
    var t4;
    var div2;
    var t5;
    var div6;
    var div5;
    var span;
    var raw_value =
    /*helper*/
    ctx[24] + "";
    var current;
    var if_block =
    /*required*/
    ctx[23] === 1 && create_if_block$3(ctx);
    var block = {
      c: function create() {
        div4 = element("div");
        input = element("input");
        t0 = space();
        if (if_block) if_block.c();
        t1 = space();
        div3 = element("div");
        div0 = element("div");
        t2 = space();
        div1 = element("div");
        label = element("label");
        t3 = text(t3_value);
        t4 = space();
        div2 = element("div");
        t5 = space();
        div6 = element("div");
        div5 = element("div");
        span = element("span");
        attr_dev(input, "type", "text");
        attr_dev(input, "id", "text-field-outlined-trailing" +
        /*k*/
        ctx[27]);
        attr_dev(input, "placeholder", /*holder*/
        ctx[22]);
        attr_dev(input, "class", "mdc-text-field__input odr-info svelte-8sbib6");
        attr_dev(input, "aria-describedby", "text-field-outlined-trailing-helper-text");
        add_location(input, file$8, 400, 12, 11821);
        attr_dev(div0, "class", "mdc-notched-outline__leading");
        add_location(div0, file$8, 414, 15, 12472);
        attr_dev(label, "class", "mdc-floating-label");
        attr_dev(label, "for", "text-field-outlined-trailing");
        add_location(label, file$8, 416, 18, 12595);
        attr_dev(div1, "class", "mdc-notched-outline__notch");
        add_location(div1, file$8, 415, 15, 12536);
        attr_dev(div2, "class", "mdc-notched-outline__trailing");
        add_location(div2, file$8, 421, 15, 12786);
        attr_dev(div3, "class", "mdc-notched-outline mdc-notched-outline--upgraded");
        add_location(div3, file$8, 413, 12, 12393);
        attr_dev(div4, "class", "mdc-text-field text-field mdc-text-field--outlined mdc-text-field--with-trailing-icon");
        set_style(div4, "width",
        /*width*/
        ctx[21] + "px");
        add_location(div4, file$8, 395, 9, 11603);
        set_style(span, "color",
        /*color*/
        ctx[25]);
        add_location(span, file$8, 428, 15, 13088);
        attr_dev(div5, "class", "mdc-text-field-helper-text");
        attr_dev(div5, "id", "my-helper-" +
        /*k*/
        ctx[27]);
        attr_dev(div5, "aria-hidden", "true");
        add_location(div5, file$8, 425, 12, 12960);
        attr_dev(div6, "class", "mdc-text-field-helper-line");
        set_style(div6, "margin-bottom", "8px");
        add_location(div6, file$8, 424, 9, 12880);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div4, anchor);
        append_dev(div4, input);
        append_dev(div4, t0);
        if (if_block) if_block.m(div4, null);
        append_dev(div4, t1);
        append_dev(div4, div3);
        append_dev(div3, div0);
        append_dev(div3, t2);
        append_dev(div3, div1);
        append_dev(div1, label);
        append_dev(label, t3);
        append_dev(div3, t4);
        append_dev(div3, div2);
        insert_dev(target, t5, anchor);
        insert_dev(target, div6, anchor);
        append_dev(div6, div5);
        append_dev(div5, span);
        span.innerHTML = raw_value;
        current = true;
      },
      p: noop,
      i: function intro(local) {
        if (current) return;
        transition_in(if_block);
        current = true;
      },
      o: function outro(local) {
        transition_out(if_block);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div4);
        if (if_block) if_block.d();
        if (detaching) detach_dev(t5);
        if (detaching) detach_dev(div6);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block$2.name,
      type: "each",
      source: "(394:6) {#each orderer as {item, width,holder,required,helper,color}",
      ctx: ctx
    });
    return block;
  }

  function create_fragment$8(ctx) {
    var div5;
    var fieldset0;
    var legend0;
    var t1;
    var each_blocks_3 = [];
    var each0_lookup = new Map();
    var t2;
    var div2;
    var div1;
    var button0;
    var div0;
    var t3;
    var span0;
    var t4;
    var strong0;
    var t5;
    var t6;
    var t7;
    var span1;
    var t8;
    var strong1;
    var t9;
    var t10;
    var t11;
    var div3;
    var t13;
    var div4;
    var span4;
    var span3;
    var span2;
    var t15;
    var t16;
    var div6;
    var fieldset1;
    var legend1;
    var t18;
    var each_blocks_2 = [];
    var each1_lookup = new Map();
    var t19;
    var div8;
    var fieldset2;
    var legend2;
    var t21;
    var t22;
    var div7;
    var t24;
    var div12;
    var fieldset3;
    var legend3;
    var t26;
    var div9;
    var t28;
    var div10;
    var t29;
    var strong2;
    var t31;
    var t32;
    var div11;
    var t33;
    var checkcircle;
    var t34;
    var t35;
    var br0;
    var t36;
    var t37;
    var button1;
    var reply;
    var t38;
    var div17;
    var div15;
    var div14;
    var button2;
    var div13;
    var t39;
    var i;
    var mailoutline;
    var t40;
    var span5;
    var t42;
    var div16;
    var t44;
    var br1;
    var t45;
    var br2;
    var t46;
    var br3;
    var t47;
    var br4;
    var current;
    var mounted;
    var dispose;
    var each_value_3 =
    /*cartlist*/
    ctx[0].filter(func);
    validate_each_argument(each_value_3);

    var get_key = function get_key(ctx) {
      return (
        /*p*/
        ctx[31].id
      );
    };

    validate_each_keys(ctx, each_value_3, get_each_context_3$1, get_key);

    for (var _i = 0; _i < each_value_3.length; _i += 1) {
      var child_ctx = get_each_context_3$1(ctx, each_value_3, _i);
      var key = get_key(child_ctx);
      each0_lookup.set(key, each_blocks_3[_i] = create_each_block_3$1(key, child_ctx));
    }

    var each_value_2 =
    /*cartlist*/
    ctx[0].filter(func_1);
    validate_each_argument(each_value_2);

    var get_key_1 = function get_key_1(ctx) {
      return (
        /*p*/
        ctx[31].id
      );
    };

    validate_each_keys(ctx, each_value_2, get_each_context_2$2, get_key_1);

    for (var _i2 = 0; _i2 < each_value_2.length; _i2 += 1) {
      var _child_ctx = get_each_context_2$2(ctx, each_value_2, _i2);

      var _key = get_key_1(_child_ctx);

      each1_lookup.set(_key, each_blocks_2[_i2] = create_each_block_2$2(_key, _child_ctx));
    }

    var each_value_1 = transfers;
    validate_each_argument(each_value_1);
    var each_blocks_1 = [];

    for (var _i3 = 0; _i3 < each_value_1.length; _i3 += 1) {
      each_blocks_1[_i3] = create_each_block_1$2(get_each_context_1$2(ctx, each_value_1, _i3));
    }

    checkcircle = new Check_circle({
      props: {
        color: "red",
        size: "1.2em"
      },
      $$inline: true
    });
    var each_value = orderer;
    validate_each_argument(each_value);
    var each_blocks = [];

    for (var _i4 = 0; _i4 < each_value.length; _i4 += 1) {
      each_blocks[_i4] = create_each_block$2(get_each_context$2(ctx, each_value, _i4));
    }

    var out = function out(i) {
      return transition_out(each_blocks[i], 1, 1, function () {
        each_blocks[i] = null;
      });
    };

    reply = new Reply({
      props: {
        color: "red"
      },
      $$inline: true
    });
    mailoutline = new Mail_outline({
      $$inline: true
    });
    var block = {
      c: function create() {
        div5 = element("div");
        fieldset0 = element("fieldset");
        legend0 = element("legend");
        legend0.textContent = "購入リスト";
        t1 = space();

        for (var _i5 = 0; _i5 < each_blocks_3.length; _i5 += 1) {
          each_blocks_3[_i5].c();
        }

        t2 = space();
        div2 = element("div");
        div1 = element("div");
        button0 = element("button");
        div0 = element("div");
        t3 = space();
        span0 = element("span");
        t4 = text("総計:");
        strong0 = element("strong");
        t5 = text(
        /*alltotal*/
        ctx[1]);
        t6 = text("円");
        t7 = text("\n            ＋\n            ");
        span1 = element("span");
        t8 = text("消費税:");
        strong1 = element("strong");
        t9 = text(
        /*totalTax*/
        ctx[3]);
        t10 = text("円");
        t11 = space();
        div3 = element("div");
        div3.textContent = "総計金額 + 消費税の他に送料がかかります。";
        t13 = space();
        div4 = element("div");
        span4 = element("span");
        span3 = element("span");
        span2 = element("span");
        span2.textContent = "送";
        t15 = text(" は送料無料です");
        t16 = space();
        div6 = element("div");
        fieldset1 = element("fieldset");
        legend1 = element("legend");
        legend1.textContent = "取消しリスト";
        t18 = space();

        for (var _i6 = 0; _i6 < each_blocks_2.length; _i6 += 1) {
          each_blocks_2[_i6].c();
        }

        t19 = space();
        div8 = element("div");
        fieldset2 = element("fieldset");
        legend2 = element("legend");
        legend2.textContent = "払込方法の選択";
        t21 = space();

        for (var _i7 = 0; _i7 < each_blocks_1.length; _i7 += 1) {
          each_blocks_1[_i7].c();
        }

        t22 = space();
        div7 = element("div");
        div7.textContent = "その他を選択した場合はメイル送信時に記して下さい。";
        t24 = space();
        div12 = element("div");
        fieldset3 = element("fieldset");
        legend3 = element("legend");
        legend3.textContent = "お客様情報の入力";
        t26 = space();
        div9 = element("div");
        div9.textContent = "入力情報は注文メイル送信時に修正可能です。";
        t28 = space();
        div10 = element("div");
        t29 = text("注文者と受取人が異なる場合は");
        strong2 = element("strong");
        strong2.textContent = "受取人の住所氏名";
        t31 = text("を記入して下さい\n         （注文者氏名はメイルに記入して下さい）。");
        t32 = space();
        div11 = element("div");
        t33 = text("（");
        create_component(checkcircle.$$.fragment);
        t34 = text(" 印は必須項目です）");
        t35 = space();
        br0 = element("br");
        t36 = space();

        for (var _i8 = 0; _i8 < each_blocks.length; _i8 += 1) {
          each_blocks[_i8].c();
        }

        t37 = space();
        button1 = element("button");
        create_component(reply.$$.fragment);
        t38 = space();
        div17 = element("div");
        div15 = element("div");
        div14 = element("div");
        button2 = element("button");
        div13 = element("div");
        t39 = space();
        i = element("i");
        create_component(mailoutline.$$.fragment);
        t40 = space();
        span5 = element("span");
        span5.textContent = "注文する";
        t42 = space();
        div16 = element("div");
        div16.textContent = "送信には使用端末でのメイル設定がなされている必要があります。";
        t44 = space();
        br1 = element("br");
        t45 = space();
        br2 = element("br");
        t46 = space();
        br3 = element("br");
        t47 = space();
        br4 = element("br");
        attr_dev(legend0, "class", "svelte-8sbib6");
        add_location(legend0, file$8, 204, 7, 5473);
        attr_dev(div0, "class", "mdc-button__ripple");
        add_location(div0, file$8, 259, 14, 7757);
        add_location(strong0, file$8, 261, 19, 7862);
        attr_dev(span0, "class", "mdc-button__label");
        add_location(span0, file$8, 260, 14, 7810);
        attr_dev(button0, "class", "mdc-button mdc-button--outline mdc-card__action mdc-card__action--button btn-alltotal svelte-8sbib6");
        add_location(button0, file$8, 254, 12, 7528);
        add_location(strong1, file$8, 266, 20, 8004);
        attr_dev(span1, "class", "btn-tax svelte-8sbib6");
        add_location(span1, file$8, 265, 12, 7961);
        attr_dev(div1, "class", "mdc-card__action-buttons margin-auto svelte-8sbib6");
        add_location(div1, file$8, 252, 10, 7464);
        attr_dev(div2, "class", "mdc-card__actions");
        add_location(div2, file$8, 251, 8, 7422);
        attr_dev(div3, "class", "list-msg center");
        add_location(div3, file$8, 272, 7, 8094);
        attr_dev(span2, "class", "mdc-chip__text");
        add_location(span2, file$8, 276, 17, 8336);
        attr_dev(span3, "role", "button");
        attr_dev(span3, "tabindex", "0");
        attr_dev(span3, "class", "mdc-chip__primary-action");
        add_location(span3, file$8, 275, 15, 8252);
        attr_dev(span4, "class", "chip-shipping");
        add_location(span4, file$8, 274, 13, 8208);
        attr_dev(div4, "class", "list-msg r-t svelte-8sbib6");
        add_location(div4, file$8, 273, 16, 8168);
        add_location(fieldset0, file$8, 203, 4, 5455);
        attr_dev(div5, "class", "bought svelte-8sbib6");
        add_location(div5, file$8, 202, 3, 5430);
        attr_dev(legend1, "class", "svelte-8sbib6");
        add_location(legend1, file$8, 288, 7, 8518);
        add_location(fieldset1, file$8, 287, 4, 8500);
        attr_dev(div6, "class", "cancel svelte-8sbib6");
        add_location(div6, file$8, 286, 3, 8475);
        attr_dev(legend2, "class", "svelte-8sbib6");
        add_location(legend2, file$8, 346, 4, 10278);
        attr_dev(div7, "class", "list-msg center");
        add_location(div7, file$8, 367, 4, 11018);
        add_location(fieldset2, file$8, 345, 3, 10263);
        attr_dev(div8, "class", "board svelte-8sbib6");
        add_location(div8, file$8, 343, 0, 10239);
        attr_dev(legend3, "class", "legend svelte-8sbib6");
        add_location(legend3, file$8, 378, 6, 11147);
        attr_dev(div9, "class", "list-msg");
        add_location(div9, file$8, 380, 6, 11195);
        attr_dev(strong2, "class", "red");
        add_location(strong2, file$8, 382, 23, 11297);
        attr_dev(div10, "class", "list-msg");
        add_location(div10, file$8, 381, 6, 11251);
        attr_dev(div11, "class", "list-msg center");
        add_location(div11, file$8, 387, 6, 11407);
        add_location(br0, file$8, 391, 6, 11517);
        attr_dev(button1, "class", "mdc-icon-button material-icons");
        attr_dev(button1, "title", "入力情報をリセットする");
        add_location(button1, file$8, 434, 6, 13196);
        add_location(fieldset3, file$8, 377, 3, 11130);
        attr_dev(div12, "class", "board svelte-8sbib6");
        add_location(div12, file$8, 375, 0, 11106);
        attr_dev(div13, "class", "mdc-button__ripple");
        add_location(div13, file$8, 454, 14, 13697);
        attr_dev(i, "class", "material-icons mdc-button__icon svelte-8sbib6");
        attr_dev(i, "aria-hidden", "true");
        add_location(i, file$8, 455, 14, 13750);
        attr_dev(span5, "class", "mdc-button__label");
        add_location(span5, file$8, 458, 14, 13880);
        attr_dev(button2, "class", "mdc-button mdc-button--raised order-btn svelte-8sbib6");
        attr_dev(button2, "title", "注文する");
        add_location(button2, file$8, 451, 12, 13540);
        attr_dev(div14, "class", "mdc-card__action-buttons");
        set_style(div14, "margin", "auto");
        add_location(div14, file$8, 449, 9, 13467);
        attr_dev(div15, "class", "mdc-card__actions");
        add_location(div15, file$8, 447, 5, 13425);
        attr_dev(div16, "class", "list-msg center");
        add_location(div16, file$8, 465, 5, 13982);
        attr_dev(div17, "class", "board svelte-8sbib6");
        add_location(div17, file$8, 445, 2, 13399);
        add_location(br1, file$8, 469, 0, 14059);
        add_location(br2, file$8, 470, 0, 14064);
        add_location(br3, file$8, 471, 0, 14069);
        add_location(br4, file$8, 472, 0, 14074);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, div5, anchor);
        append_dev(div5, fieldset0);
        append_dev(fieldset0, legend0);
        append_dev(fieldset0, t1);

        for (var _i9 = 0; _i9 < each_blocks_3.length; _i9 += 1) {
          each_blocks_3[_i9].m(fieldset0, null);
        }

        append_dev(fieldset0, t2);
        append_dev(fieldset0, div2);
        append_dev(div2, div1);
        append_dev(div1, button0);
        append_dev(button0, div0);
        append_dev(button0, t3);
        append_dev(button0, span0);
        append_dev(span0, t4);
        append_dev(span0, strong0);
        append_dev(strong0, t5);
        append_dev(span0, t6);
        append_dev(div1, t7);
        append_dev(div1, span1);
        append_dev(span1, t8);
        append_dev(span1, strong1);
        append_dev(strong1, t9);
        append_dev(span1, t10);
        append_dev(fieldset0, t11);
        append_dev(fieldset0, div3);
        append_dev(fieldset0, t13);
        append_dev(fieldset0, div4);
        append_dev(div4, span4);
        append_dev(span4, span3);
        append_dev(span3, span2);
        append_dev(div4, t15);
        insert_dev(target, t16, anchor);
        insert_dev(target, div6, anchor);
        append_dev(div6, fieldset1);
        append_dev(fieldset1, legend1);
        append_dev(fieldset1, t18);

        for (var _i10 = 0; _i10 < each_blocks_2.length; _i10 += 1) {
          each_blocks_2[_i10].m(fieldset1, null);
        }

        insert_dev(target, t19, anchor);
        insert_dev(target, div8, anchor);
        append_dev(div8, fieldset2);
        append_dev(fieldset2, legend2);
        append_dev(fieldset2, t21);

        for (var _i11 = 0; _i11 < each_blocks_1.length; _i11 += 1) {
          each_blocks_1[_i11].m(fieldset2, null);
        }

        append_dev(fieldset2, t22);
        append_dev(fieldset2, div7);
        insert_dev(target, t24, anchor);
        insert_dev(target, div12, anchor);
        append_dev(div12, fieldset3);
        append_dev(fieldset3, legend3);
        append_dev(fieldset3, t26);
        append_dev(fieldset3, div9);
        append_dev(fieldset3, t28);
        append_dev(fieldset3, div10);
        append_dev(div10, t29);
        append_dev(div10, strong2);
        append_dev(div10, t31);
        append_dev(fieldset3, t32);
        append_dev(fieldset3, div11);
        append_dev(div11, t33);
        mount_component(checkcircle, div11, null);
        append_dev(div11, t34);
        append_dev(fieldset3, t35);
        append_dev(fieldset3, br0);
        append_dev(fieldset3, t36);

        for (var _i12 = 0; _i12 < each_blocks.length; _i12 += 1) {
          each_blocks[_i12].m(fieldset3, null);
        }

        append_dev(fieldset3, t37);
        append_dev(fieldset3, button1);
        mount_component(reply, button1, null);
        insert_dev(target, t38, anchor);
        insert_dev(target, div17, anchor);
        append_dev(div17, div15);
        append_dev(div15, div14);
        append_dev(div14, button2);
        append_dev(button2, div13);
        append_dev(button2, t39);
        append_dev(button2, i);
        mount_component(mailoutline, i, null);
        append_dev(button2, t40);
        append_dev(button2, span5);
        append_dev(div17, t42);
        append_dev(div17, div16);
        insert_dev(target, t44, anchor);
        insert_dev(target, br1, anchor);
        insert_dev(target, t45, anchor);
        insert_dev(target, br2, anchor);
        insert_dev(target, t46, anchor);
        insert_dev(target, br3, anchor);
        insert_dev(target, t47, anchor);
        insert_dev(target, br4, anchor);
        current = true;

        if (!mounted) {
          dispose = [listen_dev(button1, "click",
          /*click_handler*/
          ctx[16], false, false, false), listen_dev(button2, "click",
          /*click_handler_1*/
          ctx[17], false, false, false)];
          mounted = true;
        }
      },
      p: function update(ctx, dirty) {
        if (dirty[0] &
        /*cartlist*/
        1) {
          each_value_3 =
          /*cartlist*/
          ctx[0].filter(func);
          validate_each_argument(each_value_3);
          group_outros();

          for (var _i13 = 0; _i13 < each_blocks_3.length; _i13 += 1) {
            each_blocks_3[_i13].r();
          }

          validate_each_keys(ctx, each_value_3, get_each_context_3$1, get_key);
          each_blocks_3 = update_keyed_each(each_blocks_3, dirty, get_key, 1, ctx, each_value_3, each0_lookup, fieldset0, fix_and_outro_and_destroy_block, create_each_block_3$1, t2, get_each_context_3$1);

          for (var _i14 = 0; _i14 < each_blocks_3.length; _i14 += 1) {
            each_blocks_3[_i14].a();
          }

          check_outros();
        }

        if (!current || dirty[0] &
        /*alltotal*/
        2) set_data_dev(t5,
        /*alltotal*/
        ctx[1]);
        if (!current || dirty[0] &
        /*totalTax*/
        8) set_data_dev(t9,
        /*totalTax*/
        ctx[3]);

        if (dirty[0] &
        /*cartlist*/
        1) {
          each_value_2 =
          /*cartlist*/
          ctx[0].filter(func_1);
          validate_each_argument(each_value_2);
          group_outros();

          for (var _i15 = 0; _i15 < each_blocks_2.length; _i15 += 1) {
            each_blocks_2[_i15].r();
          }

          validate_each_keys(ctx, each_value_2, get_each_context_2$2, get_key_1);
          each_blocks_2 = update_keyed_each(each_blocks_2, dirty, get_key_1, 1, ctx, each_value_2, each1_lookup, fieldset1, fix_and_outro_and_destroy_block, create_each_block_2$2, null, get_each_context_2$2);

          for (var _i16 = 0; _i16 < each_blocks_2.length; _i16 += 1) {
            each_blocks_2[_i16].a();
          }

          check_outros();
        }

        if (dirty[0] &
        /*transfer*/
        4) {
          each_value_1 = transfers;
          validate_each_argument(each_value_1);

          var _i17;

          for (_i17 = 0; _i17 < each_value_1.length; _i17 += 1) {
            var _child_ctx2 = get_each_context_1$2(ctx, each_value_1, _i17);

            if (each_blocks_1[_i17]) {
              each_blocks_1[_i17].p(_child_ctx2, dirty);
            } else {
              each_blocks_1[_i17] = create_each_block_1$2(_child_ctx2);

              each_blocks_1[_i17].c();

              each_blocks_1[_i17].m(fieldset2, t22);
            }
          }

          for (; _i17 < each_blocks_1.length; _i17 += 1) {
            each_blocks_1[_i17].d(1);
          }

          each_blocks_1.length = each_value_1.length;
        }

        if (dirty &
        /*orderer*/
        0) {
          each_value = orderer;
          validate_each_argument(each_value);

          var _i18;

          for (_i18 = 0; _i18 < each_value.length; _i18 += 1) {
            var _child_ctx3 = get_each_context$2(ctx, each_value, _i18);

            if (each_blocks[_i18]) {
              each_blocks[_i18].p(_child_ctx3, dirty);

              transition_in(each_blocks[_i18], 1);
            } else {
              each_blocks[_i18] = create_each_block$2(_child_ctx3);

              each_blocks[_i18].c();

              transition_in(each_blocks[_i18], 1);

              each_blocks[_i18].m(fieldset3, t37);
            }
          }

          group_outros();

          for (_i18 = each_value.length; _i18 < each_blocks.length; _i18 += 1) {
            out(_i18);
          }

          check_outros();
        }
      },
      i: function intro(local) {
        if (current) return;

        for (var _i19 = 0; _i19 < each_value_3.length; _i19 += 1) {
          transition_in(each_blocks_3[_i19]);
        }

        for (var _i20 = 0; _i20 < each_value_2.length; _i20 += 1) {
          transition_in(each_blocks_2[_i20]);
        }

        transition_in(checkcircle.$$.fragment, local);

        for (var _i21 = 0; _i21 < each_value.length; _i21 += 1) {
          transition_in(each_blocks[_i21]);
        }

        transition_in(reply.$$.fragment, local);
        transition_in(mailoutline.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        for (var _i22 = 0; _i22 < each_blocks_3.length; _i22 += 1) {
          transition_out(each_blocks_3[_i22]);
        }

        for (var _i23 = 0; _i23 < each_blocks_2.length; _i23 += 1) {
          transition_out(each_blocks_2[_i23]);
        }

        transition_out(checkcircle.$$.fragment, local);
        each_blocks = each_blocks.filter(Boolean);

        for (var _i24 = 0; _i24 < each_blocks.length; _i24 += 1) {
          transition_out(each_blocks[_i24]);
        }

        transition_out(reply.$$.fragment, local);
        transition_out(mailoutline.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div5);

        for (var _i25 = 0; _i25 < each_blocks_3.length; _i25 += 1) {
          each_blocks_3[_i25].d();
        }

        if (detaching) detach_dev(t16);
        if (detaching) detach_dev(div6);

        for (var _i26 = 0; _i26 < each_blocks_2.length; _i26 += 1) {
          each_blocks_2[_i26].d();
        }

        if (detaching) detach_dev(t19);
        if (detaching) detach_dev(div8);
        destroy_each(each_blocks_1, detaching);
        if (detaching) detach_dev(t24);
        if (detaching) detach_dev(div12);
        destroy_component(checkcircle);
        destroy_each(each_blocks, detaching);
        destroy_component(reply);
        if (detaching) detach_dev(t38);
        if (detaching) detach_dev(div17);
        destroy_component(mailoutline);
        if (detaching) detach_dev(t44);
        if (detaching) detach_dev(br1);
        if (detaching) detach_dev(t45);
        if (detaching) detach_dev(br2);
        if (detaching) detach_dev(t46);
        if (detaching) detach_dev(br3);
        if (detaching) detach_dev(t47);
        if (detaching) detach_dev(br4);
        mounted = false;
        run_all(dispose);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$8.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function getDate() {
    var youbi = ["日", "月", "火", "水", "木", "金", "土"];
    var d = new Date();
    var date = d.getFullYear() + "年" + (d.getMonth() + 1) + "月" + d.getDate() + "日" + "(" + youbi[d.getDay()] + "曜日) " + d.getHours() + "時" + d.getMinutes() + "分" + d.getSeconds() + "秒";
    return date;
  } // 消費税計算


  function caluclateTax(total) {
    var t = total * (tax / 100); // 端数処理

    if (tax_frac === 0) {
      t = Math.round(t);
    } // 四捨五入: default 


    if (tax_frac === 1) {
      t = Math.ceil(t);
    } // 切り上げ


    if (tax_frac === 2) {
      t = Math.floor(t);
    } // 切り捨て


    return t;
  }

  var func = function func(t) {
    return t.done;
  };

  var func_1 = function func_1(t) {
    return !t.done;
  };

  function instance$8($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('OrderLists', slots, []);
    var cartlist = $$props.cartlist;
    var mail = $$props.mail;
    var order = $$props.order;
    var alltotal = 0; // 振込方法

    var transfer = "";
    var newopen = $$props.newopen;
    var orderer_inputs = []; // 注文ダイアログ内の入力初期化

    var ordererInfo = [];

    var _crossfade = crossfade({
      fallback: function fallback(node, params) {
        var style = getComputedStyle(node);
        var transform = style.transform === 'none' ? '' : style.transform;
        return {
          duration: 600,
          easing: quintOut,
          css: function css(t) {
            return "\n\t\t\t\t\ttransform: ".concat(transform, " scale(").concat(t, ");\n\t\t\t\t\topacity: ").concat(t, "\n\t\t\t\t");
          }
        };
      }
    }),
        _crossfade2 = _slicedToArray(_crossfade, 2),
        send = _crossfade2[0],
        receive = _crossfade2[1];

    var totalTax = 0;
    var items = []; // 購入商品リスト

    onMount(function () {
      // 注文ダイアログ内の入力初期化用
      ordererInfo = document.querySelectorAll('.odr-info');
    }); // 入力値のクリア     

    function resetData() {
      [].forEach.call(ordererInfo, function (obj, i) {
        ordererInfo[i].value = "";
      });
      $$invalidate(2, transfer = ""); // 払込方法の選択をリセット
    } // 注文メール作成


    function sendOrderMail() {
      var br = '%0D%0A'; // BODY 改行コード変換
      // 購入リスト

      var isOrder = items.length;
      var mail_text = "";
      var all_total = 0;

      if (isOrder === 0) {
        alert("注文する商品が選択されていません。");
        return;
      } // 未入力項目のチェック


      for (var _i27 = 0; _i27 < ordererInfo.length; _i27++) {
        if (ordererInfo[_i27].value === "" && orderer[_i27].required === 1) {
          alert("「" + orderer[_i27].item + "」の入力がされていません");
          return;
        }
      } // 払込方法の選択確認


      if (transfer === "") {
        alert("払込方法の選択がされていません");
        return;
      } // その他へ[]の付加


      if (transfer === "その他") {
        $$invalidate(2, transfer += "[　　　　　　　　　　　]");
      } // 未入力項目の表記


      var post = ordererInfo[2].value;
      var tell = ordererInfo[3].value;

      if (ordererInfo[2].value === "") {
        post = "[未入力]";
      }

      if (ordererInfo[3].value === "") {
        tell = "[未入力]";
      } // 届け先情報


      var orderer_address = "\u3010\u304A\u5BA2\u69D8\u60C5\u5831\uFF1A\u304A\u5C4A\u3051\u5148\u3011(\uFF0A\u306F\u5FC5\u9808\u3002\u7A7A\u6B04\u306F\u5FC5\u8981\u3042\u308C\u3070\u8A18\u5165\u3057\u3066\u4E0B\u3055\u3044)".concat(br) + "\u3000\u540D\u524D \uFF0A\uFF1A".concat(ordererInfo[0].value).concat(br) + "\u3000\u90F5\u4FBF\u756A\u53F7 \uFF1A".concat(post).concat(br) + "\u3000\u5C4A\u3051\u5148\u4F4F\u6240 \uFF0A\uFF1A".concat(ordererInfo[1].value).concat(br) + "\u3000\u9023\u7D61\u5148\u96FB\u8A71\u756A\u53F7\uFF1A".concat(tell).concat(br) + "\u3000\u632F\u8FBC\u65B9\u6CD5\uFF1A".concat(transfer).concat(br); // 購入商品内訳：金額の計算

      for (var i = 0; i < items.length; i++) {
        var sp = "";

        if (items[i].shipping === "1") {
          sp = "(送料無料)";
        }

        mail_text += "[" + items[i].id + "][" + items[i].code + "]" + items[i].title + " - " + items[i].price + "(円)x" + items[i].pack + "(個)=" + items[i].subtotal + "\u5186" + sp + br;
        all_total += parseInt(items[i].subtotal);
      } // 消費税計算


      var isTax = "-"; // 端数処理

      if (tax > 0) {
        isTax = " + \u6D88\u8CBB\u7A0E(\u5916\u7A0E:".concat(tax, "\uFF05)").concat(caluclateTax(all_total), "\u5186");
      } // 改行コード変換処理


      var tmp1 = order.template1.replace(/\[r\]/gi, "".concat(br));
      var tmp2 = order.template2.replace(/\[r\]/gi, "".concat(br));
      var tmp3 = order.template3.replace(/\[r\]/gi, "".concat(br));
      var border = "---------------------------------------------------".concat(br);

      if (isOrder === 0) {
        alert("注文する商品が選択されていません。");
      } else {
        mail_text = "\u6CE8\u6587\u54C1\u76EE\u6570\uFF1A\u3010" + items.length + "\u3011".concat(br) + mail_text; // let mailto = `mailto:${user.email}?`

        var mailto = "mailto:".concat(mail, "?") + "subject=".concat(order.subject) + "&body=".concat(br).concat(order.title).concat(br) + "\u3000\u6CE8\u6587\u65E5\u6642\uFF1A".concat(getDate()).concat(br).concat(br) + "".concat(orderer_address) + "".concat(border).concat(br) + "".concat(tmp1) + "".concat(border) + "\u3010\u6CE8\u6587\u54C1\u5185\u8A33\u3011".concat(br) + "".concat(mail_text) + "".concat(border) + "\u7DCF\u8A08\u91D1\u984D\uFF1A".concat(all_total, "\u5186").concat(isTax, " + \u9001\u6599(\u9001\u6599\u7121\u6599\u3092\u9664\u304F)").concat(br) + "".concat(tmp2) + "".concat(border) + "".concat(order.message).concat(br).concat(br).concat(br).concat(br).concat(br).concat(br) + "".concat(border) + "".concat(tmp3);
        location.href = mailto; // メイルを開く
      }
    }

    var writable_props = ['cartlist', 'mail', 'order', 'newopen'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<OrderLists> was created with unknown prop '".concat(key, "'"));
    });
    var $$binding_groups = [[]];

    function input_change_handler(each_value_3, p_index_1) {
      each_value_3[p_index_1].done = this.checked;
      $$invalidate(0, cartlist);
    }

    function input_change_handler_1(each_value_2, p_index) {
      each_value_2[p_index].done = this.checked;
      $$invalidate(0, cartlist);
    }

    function input_change_handler_2() {
      transfer = this.__value;
      $$invalidate(2, transfer);
    }

    var click_handler = function click_handler() {
      return resetData();
    };

    var click_handler_1 = function click_handler_1() {
      return sendOrderMail();
    };

    $$self.$$set = function ($$props) {
      if ('cartlist' in $$props) $$invalidate(0, cartlist = $$props.cartlist);
      if ('mail' in $$props) $$invalidate(8, mail = $$props.mail);
      if ('order' in $$props) $$invalidate(9, order = $$props.order);
      if ('newopen' in $$props) $$invalidate(10, newopen = $$props.newopen);
    };

    $$self.$capture_state = function () {
      return {
        quintOut: quintOut,
        crossfade: crossfade,
        flip: flip,
        CheckCircle: Check_circle,
        MailOutline: Mail_outline,
        Reply: Reply,
        cartlist: cartlist,
        mail: mail,
        order: order,
        alltotal: alltotal,
        transfer: transfer,
        newopen: newopen,
        orderer_inputs: orderer_inputs,
        ordererInfo: ordererInfo,
        send: send,
        receive: receive,
        totalTax: totalTax,
        items: items,
        resetData: resetData,
        getDate: getDate,
        sendOrderMail: sendOrderMail,
        caluclateTax: caluclateTax
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('cartlist' in $$props) $$invalidate(0, cartlist = $$props.cartlist);
      if ('mail' in $$props) $$invalidate(8, mail = $$props.mail);
      if ('order' in $$props) $$invalidate(9, order = $$props.order);
      if ('alltotal' in $$props) $$invalidate(1, alltotal = $$props.alltotal);
      if ('transfer' in $$props) $$invalidate(2, transfer = $$props.transfer);
      if ('newopen' in $$props) $$invalidate(10, newopen = $$props.newopen);
      if ('orderer_inputs' in $$props) orderer_inputs = $$props.orderer_inputs;
      if ('ordererInfo' in $$props) ordererInfo = $$props.ordererInfo;
      if ('totalTax' in $$props) $$invalidate(3, totalTax = $$props.totalTax);
      if ('items' in $$props) $$invalidate(11, items = $$props.items);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    $$self.$$.update = function () {
      if ($$self.$$.dirty[0] &
      /*cartlist, items, alltotal, newopen*/
      3075) {
        {
          // フィルタ => 購入商品リスト
          $$invalidate(11, items = cartlist.filter(function (t) {
            return t.done;
          })); // 総計金額の集計

          $$invalidate(1, alltotal = 0);
          [].forEach.call(items, function (obj, i) {
            $$invalidate(1, alltotal += parseInt(obj.subtotal));
          });
          $$invalidate(3, totalTax = caluclateTax(alltotal)); // 払込方法の選択 => 再度開く時に入力を戻す

          if (newopen === 1) {
            resetData();
          }
        }
      }
    };

    return [cartlist, alltotal, transfer, totalTax, send, receive, resetData, sendOrderMail, mail, order, newopen, items, input_change_handler, input_change_handler_1, input_change_handler_2, $$binding_groups, click_handler, click_handler_1];
  }

  var OrderLists = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(OrderLists, _SvelteComponentDev);

    var _super = _createSuper$8(OrderLists);

    function OrderLists(options) {
      var _this;

      _classCallCheck(this, OrderLists);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$8, create_fragment$8, safe_not_equal, {
        cartlist: 0,
        mail: 8,
        order: 9,
        newopen: 10
      }, null, [-1, -1]);
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "OrderLists",
        options: options,
        id: create_fragment$8.name
      });
      var ctx = _this.$$.ctx;
      var props = options.props || {};

      if (
      /*cartlist*/
      ctx[0] === undefined && !('cartlist' in props)) {
        console.warn("<OrderLists> was created without expected prop 'cartlist'");
      }

      if (
      /*mail*/
      ctx[8] === undefined && !('mail' in props)) {
        console.warn("<OrderLists> was created without expected prop 'mail'");
      }

      if (
      /*order*/
      ctx[9] === undefined && !('order' in props)) {
        console.warn("<OrderLists> was created without expected prop 'order'");
      }

      if (
      /*newopen*/
      ctx[10] === undefined && !('newopen' in props)) {
        console.warn("<OrderLists> was created without expected prop 'newopen'");
      }

      return _this;
    }

    _createClass(OrderLists, [{
      key: "cartlist",
      get: function get() {
        throw new Error("<OrderLists>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<OrderLists>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "mail",
      get: function get() {
        throw new Error("<OrderLists>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<OrderLists>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "order",
      get: function get() {
        throw new Error("<OrderLists>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<OrderLists>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "newopen",
      get: function get() {
        throw new Error("<OrderLists>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<OrderLists>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return OrderLists;
  }(SvelteComponentDev);

  function _createSuper$7(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$7(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$7() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var Error_1 = globals.Error,
      window_1$1 = globals.window;
  var file$7 = "src/pages/Home.svelte";

  function get_each_context$1(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[18] = list[i].code;
    child_ctx[19] = list[i].name;
    child_ctx[48] = list[i].subtitle;
    child_ctx[49] = list[i].img;
    child_ctx[5] = list[i].price;
    child_ctx[50] = list[i].sale;
    child_ctx[20] = list[i].max;
    child_ctx[51] = list[i].gram;
    child_ctx[21] = list[i].shipping;
    child_ctx[52] = list[i].sold;
    child_ctx[53] = list[i].clips;
    child_ctx[54] = list[i].text;
    child_ctx[56] = i;
    return child_ctx;
  }

  function get_each_context_1$1(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[57] = list[i].msg;
    child_ctx[58] = list[i].color;
    child_ctx[56] = i;
    return child_ctx;
  }

  function get_each_context_2$1(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[57] = list[i].msg;
    child_ctx[56] = i;
    return child_ctx;
  } // (322:0) {:catch error}


  function create_catch_block(ctx) {
    var p;
    var t_value =
    /*error*/
    ctx[61].message + "";
    var t;
    var block = {
      c: function create() {
        p = element("p");
        t = text(t_value);
        set_style(p, "color", "red");
        add_location(p, file$7, 324, 1, 11872);
      },
      m: function mount(target, anchor) {
        insert_dev(target, p, anchor);
        append_dev(p, t);
      },
      p: noop,
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(p);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_catch_block.name,
      type: "catch",
      source: "(322:0) {:catch error}",
      ctx: ctx
    });
    return block;
  } // (10:0) {:then _products_ }


  function create_then_block(ctx) {
    var div5;
    var img;
    var img_src_value;
    var t0;
    var div0;
    var t1;
    var t2;
    var div4;
    var div1;
    var t3;
    var div3;
    var button;
    var div2;
    var t4;
    var t5;
    var t6;
    var t7;
    var t8;
    var arrowdownward;
    var t9;
    var span;
    var t10;
    var current;
    var mounted;
    var dispose;

    function select_block_type(ctx, dirty) {
      if (message[0].msg === "農業者向け販売カート") return create_if_block_11;
      return create_else_block_3;
    }

    var current_block_type = select_block_type();
    var if_block = current_block_type(ctx);
    var each_value_2 = message;
    validate_each_argument(each_value_2);
    var each_blocks_1 = [];

    for (var i = 0; i < each_value_2.length; i += 1) {
      each_blocks_1[i] = create_each_block_2$1(get_each_context_2$1(ctx, each_value_2, i));
    }

    var each_value =
    /*_products_*/
    ctx[47];
    validate_each_argument(each_value);
    var each_blocks = [];

    for (var _i = 0; _i < each_value.length; _i += 1) {
      each_blocks[_i] = create_each_block$1(get_each_context$1(ctx, each_value, _i));
    }

    var out = function out(i) {
      return transition_out(each_blocks[i], 1, 1, function () {
        each_blocks[i] = null;
      });
    };

    arrowdownward = new Arrow_downward({
      props: {
        color:
        /*moreColor*/
        ctx[8],
        size: "1.4em"
      },
      $$inline: true
    });
    var block = {
      c: function create() {
        div5 = element("div");
        img = element("img");
        t0 = space();
        div0 = element("div");
        if_block.c();
        t1 = space();

        for (var _i2 = 0; _i2 < each_blocks_1.length; _i2 += 1) {
          each_blocks_1[_i2].c();
        }

        t2 = space();
        div4 = element("div");
        div1 = element("div");

        for (var _i3 = 0; _i3 < each_blocks.length; _i3 += 1) {
          each_blocks[_i3].c();
        }

        t3 = space();
        div3 = element("div");
        button = element("button");
        div2 = element("div");
        t4 = space();
        t5 = text(
        /*count*/
        ctx[1]);
        t6 = text("/");
        t7 = text(
        /*dataLength*/
        ctx[23]);
        t8 = text("  \n        ");
        create_component(arrowdownward.$$.fragment);
        t9 = text(" \n        ");
        span = element("span");
        t10 = text(
        /*more*/
        ctx[7]);
        if (!src_url_equal(img.src, img_src_value = "./images/" + setting.top_image)) attr_dev(img, "src", img_src_value);
        attr_dev(img, "alt", user.shop);
        attr_dev(img, "title", user.shop);
        attr_dev(img, "class", "logo-img svelte-bbj5v9");
        add_location(img, file$7, 14, 0, 224);
        attr_dev(div0, "class", "mdc-typography--headline4 shop-title svelte-bbj5v9");
        add_location(div0, file$7, 19, 0, 354);
        attr_dev(div1, "class", "mdc-layout-grid__inner");
        add_location(div1, file$7, 33, 2, 728);
        attr_dev(div2, "class", "mdc-button__ripple");
        add_location(div2, file$7, 310, 8, 11585);
        attr_dev(span, "class", "mdc-button__label");
        add_location(span, file$7, 313, 8, 11738);
        attr_dev(button, "class", "mdc-button mdc-button--raised svelte-bbj5v9");
        button.disabled =
        /*disable*/
        ctx[6];
        attr_dev(button, "style", "");
        add_location(button, file$7, 307, 6, 11440);
        attr_dev(div3, "class", "btn-more svelte-bbj5v9");
        add_location(div3, file$7, 306, 5, 11411);
        attr_dev(div4, "class", "mdc-layout-grid");
        add_location(div4, file$7, 32, 0, 696);
        attr_dev(div5, "class", "container");
        add_location(div5, file$7, 11, 0, 174);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div5, anchor);
        append_dev(div5, img);
        append_dev(div5, t0);
        append_dev(div5, div0);
        if_block.m(div0, null);
        append_dev(div5, t1);

        for (var _i4 = 0; _i4 < each_blocks_1.length; _i4 += 1) {
          each_blocks_1[_i4].m(div5, null);
        }

        append_dev(div5, t2);
        append_dev(div5, div4);
        append_dev(div4, div1);

        for (var _i5 = 0; _i5 < each_blocks.length; _i5 += 1) {
          each_blocks[_i5].m(div1, null);
        }

        append_dev(div4, t3);
        append_dev(div4, div3);
        append_dev(div3, button);
        append_dev(button, div2);
        append_dev(button, t4);
        append_dev(button, t5);
        append_dev(button, t6);
        append_dev(button, t7);
        append_dev(button, t8);
        mount_component(arrowdownward, button, null);
        append_dev(button, t9);
        append_dev(button, span);
        append_dev(span, t10);
        current = true;

        if (!mounted) {
          dispose = listen_dev(button, "click",
          /*click_handler_6*/
          ctx[39], false, false, false);
          mounted = true;
        }
      },
      p: function update(ctx, dirty) {
        if_block.p(ctx, dirty);

        if (dirty &
        /*message*/
        0) {
          each_value_2 = message;
          validate_each_argument(each_value_2);

          var _i6;

          for (_i6 = 0; _i6 < each_value_2.length; _i6 += 1) {
            var child_ctx = get_each_context_2$1(ctx, each_value_2, _i6);

            if (each_blocks_1[_i6]) {
              each_blocks_1[_i6].p(child_ctx, dirty);
            } else {
              each_blocks_1[_i6] = create_each_block_2$1(child_ctx);

              each_blocks_1[_i6].c();

              each_blocks_1[_i6].m(div5, t2);
            }
          }

          for (; _i6 < each_blocks_1.length; _i6 += 1) {
            each_blocks_1[_i6].d(1);
          }

          each_blocks_1.length = each_value_2.length;
        }

        if (dirty[0] &
        /*dspDescription, promise, visibleDescription, btn_reset, resetColor, resetSelectValue, btn_cart, cartColor, openCart, total, subtotal, setSubtotal, pack, count*/
        1547823134) {
          each_value =
          /*_products_*/
          ctx[47];
          validate_each_argument(each_value);

          var _i7;

          for (_i7 = 0; _i7 < each_value.length; _i7 += 1) {
            var _child_ctx = get_each_context$1(ctx, each_value, _i7);

            if (each_blocks[_i7]) {
              each_blocks[_i7].p(_child_ctx, dirty);

              transition_in(each_blocks[_i7], 1);
            } else {
              each_blocks[_i7] = create_each_block$1(_child_ctx);

              each_blocks[_i7].c();

              transition_in(each_blocks[_i7], 1);

              each_blocks[_i7].m(div1, null);
            }
          }

          group_outros();

          for (_i7 = each_value.length; _i7 < each_blocks.length; _i7 += 1) {
            out(_i7);
          }

          check_outros();
        }

        if (!current || dirty[0] &
        /*count*/
        2) set_data_dev(t5,
        /*count*/
        ctx[1]);
        var arrowdownward_changes = {};
        if (dirty[0] &
        /*moreColor*/
        256) arrowdownward_changes.color =
        /*moreColor*/
        ctx[8];
        arrowdownward.$set(arrowdownward_changes);
        if (!current || dirty[0] &
        /*more*/
        128) set_data_dev(t10,
        /*more*/
        ctx[7]);

        if (!current || dirty[0] &
        /*disable*/
        64) {
          prop_dev(button, "disabled",
          /*disable*/
          ctx[6]);
        }
      },
      i: function intro(local) {
        if (current) return;

        for (var _i8 = 0; _i8 < each_value.length; _i8 += 1) {
          transition_in(each_blocks[_i8]);
        }

        transition_in(arrowdownward.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        each_blocks = each_blocks.filter(Boolean);

        for (var _i9 = 0; _i9 < each_blocks.length; _i9 += 1) {
          transition_out(each_blocks[_i9]);
        }

        transition_out(arrowdownward.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div5);
        if_block.d();
        destroy_each(each_blocks_1, detaching);
        destroy_each(each_blocks, detaching);
        destroy_component(arrowdownward);
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_then_block.name,
      type: "then",
      source: "(10:0) {:then _products_ }",
      ctx: ctx
    });
    return block;
  } // (23:3) {:else}


  function create_else_block_3(ctx) {
    var html_tag;
    var raw_value = message[0].msg + "";
    var html_anchor;
    var block = {
      c: function create() {
        html_tag = new HtmlTag();
        html_anchor = empty();
        html_tag.a = html_anchor;
      },
      m: function mount(target, anchor) {
        html_tag.m(raw_value, target, anchor);
        insert_dev(target, html_anchor, anchor);
      },
      p: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(html_anchor);
        if (detaching) html_tag.d();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_else_block_3.name,
      type: "else",
      source: "(23:3) {:else}",
      ctx: ctx
    });
    return block;
  } // (21:3) {#if message[0].msg === "農業者向け販売カート" }


  function create_if_block_11(ctx) {
    var html_tag;
    var raw_value = message[0].msg + "";
    var t0;
    var t1;
    var block = {
      c: function create() {
        html_tag = new HtmlTag();
        t0 = text(" v.");
        t1 = text(
        /*$version*/
        ctx[17]);
        html_tag.a = t0;
      },
      m: function mount(target, anchor) {
        html_tag.m(raw_value, target, anchor);
        insert_dev(target, t0, anchor);
        insert_dev(target, t1, anchor);
      },
      p: function update(ctx, dirty) {
        if (dirty[0] &
        /*$version*/
        131072) set_data_dev(t1,
        /*$version*/
        ctx[17]);
      },
      d: function destroy(detaching) {
        if (detaching) html_tag.d();
        if (detaching) detach_dev(t0);
        if (detaching) detach_dev(t1);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_11.name,
      type: "if",
      source: "(21:3) {#if message[0].msg === \\\"農業者向け販売カート\\\" }",
      ctx: ctx
    });
    return block;
  } // (28:6) {#if i > 0 }


  function create_if_block_10(ctx) {
    var div;
    var raw_value =
    /*msg*/
    ctx[57] + "";
    var block = {
      c: function create() {
        div = element("div");
        attr_dev(div, "class", "mdc-typography--subtitle2 shop-title svelte-bbj5v9");
        add_location(div, file$7, 28, 9, 604);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div, anchor);
        div.innerHTML = raw_value;
      },
      p: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(div);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_10.name,
      type: "if",
      source: "(28:6) {#if i > 0 }",
      ctx: ctx
    });
    return block;
  } // (27:3) {#each message as {msg}


  function create_each_block_2$1(ctx) {
    var if_block_anchor;
    var if_block =
    /*i*/
    ctx[56] > 0 && create_if_block_10(ctx);
    var block = {
      c: function create() {
        if (if_block) if_block.c();
        if_block_anchor = empty();
      },
      m: function mount(target, anchor) {
        if (if_block) if_block.m(target, anchor);
        insert_dev(target, if_block_anchor, anchor);
      },
      p: function update(ctx, dirty) {
        if (
        /*i*/
        ctx[56] > 0) if_block.p(ctx, dirty);
      },
      d: function destroy(detaching) {
        if (if_block) if_block.d(detaching);
        if (detaching) detach_dev(if_block_anchor);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block_2$1.name,
      type: "each",
      source: "(27:3) {#each message as {msg}",
      ctx: ctx
    });
    return block;
  } // (39:6) {#if i < count}


  function create_if_block$2(ctx) {
    var div14;
    var div13;
    var div7;
    var div1;
    var div0;
    var t0;
    var t1;
    var t2;
    var span0;
    var t3_value =
    /*code*/
    ctx[18] + "";
    var t3;
    var t4;
    var div3;
    var div2;
    var t5_value =
    /*name*/
    ctx[19] + "";
    var t5;
    var t6;
    var div5;
    var div4;
    var t7_value =
    /*subtitle*/
    ctx[48] + "";
    var t7;
    var t8;
    var div6;
    var t9;
    var table;
    var tbody;
    var tr0;
    var td0;
    var div8;
    var span3;
    var span2;
    var span1;
    var strong0;
    var t11;
    var span8;
    var span7;
    var span6;
    var span5;
    var strong1;
    var span4;
    var t12_value =
    /*gram*/
    ctx[51] + "";
    var t12;
    var t13;
    var div9;
    var span11;
    var span10;
    var span9;
    var strong2;
    var t15;
    var span16;
    var span15;
    var span14;
    var span13;
    var strong3;
    var span12;
    var t16_value =
    /*price*/
    ctx[5] + "";
    var t16;
    var t17;
    var t18;
    var tr1;
    var td1;
    var t19;
    var current_block_type_index;
    var if_block4;
    var t20;
    var td2;
    var t21;
    var tr2;
    var td3;
    var fieldset;
    var legend;
    var t23;
    var div10;
    var t24;
    var t25;
    var div12;
    var div11;
    var button0;
    var shoppingcart;
    var t26;
    var button1;
    var cancelpresentation;
    var button1_disabled_value;
    var t27;
    var button2;
    var morevert;
    var t28;
    var t29;
    var current;
    var mounted;
    var dispose;
    var if_block0 =
    /*sale*/
    ctx[50] === 1 && create_if_block_9(ctx);
    var if_block1 =
    /*shipping*/
    ctx[21] === 1 && create_if_block_8(ctx);
    var if_block2 =
    /*sold*/
    ctx[52] === 1 && create_if_block_7(ctx);
    var each_value_1 =
    /*clips*/
    ctx[53];
    validate_each_argument(each_value_1);
    var each_blocks = [];

    for (var i = 0; i < each_value_1.length; i += 1) {
      each_blocks[i] = create_each_block_1$1(get_each_context_1$1(ctx, each_value_1, i));
    }

    function select_block_type_1(ctx, dirty) {
      if (
      /*sold*/
      ctx[52] === 1) return create_if_block_4;
      return create_else_block_2;
    }

    var current_block_type = select_block_type_1(ctx);
    var if_block3 = current_block_type(ctx);
    var if_block_creators = [create_if_block_3, create_else_block_1];
    var if_blocks = [];

    function select_block_type_2(ctx, dirty) {
      if (
      /*sold*/
      ctx[52] === 1) return 0;
      return 1;
    }

    current_block_type_index = select_block_type_2(ctx);
    if_block4 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

    function select_block_type_3(ctx, dirty) {
      if (
      /*sold*/
      ctx[52] === 1) return create_if_block_2$1;
      return create_else_block;
    }

    var current_block_type_1 = select_block_type_3(ctx);
    var if_block5 = current_block_type_1(ctx);
    shoppingcart = new Shopping_cart({
      $$inline: true
    });
    cancelpresentation = new Cancel_presentation({
      $$inline: true
    });

    function click_handler_3() {
      return (
        /*click_handler_3*/
        ctx[36](
        /*i*/
        ctx[56])
      );
    }

    morevert = new More_vert({
      $$inline: true
    });

    function click_handler_4() {
      return (
        /*click_handler_4*/
        ctx[37](
        /*i*/
        ctx[56])
      );
    }

    var if_block6 =
    /*visibleDescription*/
    ctx[11][
    /*i*/
    ctx[56]] && create_if_block_1$1(ctx);
    var block = {
      c: function create() {
        div14 = element("div");
        div13 = element("div");
        div7 = element("div");
        div1 = element("div");
        div0 = element("div");
        if (if_block0) if_block0.c();
        t0 = space();
        if (if_block1) if_block1.c();
        t1 = space();
        if (if_block2) if_block2.c();
        t2 = space();
        span0 = element("span");
        t3 = text(t3_value);
        t4 = space();
        div3 = element("div");
        div2 = element("div");
        t5 = text(t5_value);
        t6 = space();
        div5 = element("div");
        div4 = element("div");
        t7 = text(t7_value);
        t8 = space();
        div6 = element("div");

        for (var _i10 = 0; _i10 < each_blocks.length; _i10 += 1) {
          each_blocks[_i10].c();
        }

        t9 = space();
        table = element("table");
        tbody = element("tbody");
        tr0 = element("tr");
        td0 = element("td");
        div8 = element("div");
        span3 = element("span");
        span2 = element("span");
        span1 = element("span");
        strong0 = element("strong");
        strong0.textContent = "  量目";
        t11 = space();
        span8 = element("span");
        span7 = element("span");
        span6 = element("span");
        span5 = element("span");
        strong1 = element("strong");
        span4 = element("span");
        t12 = text(t12_value);
        t13 = space();
        div9 = element("div");
        span11 = element("span");
        span10 = element("span");
        span9 = element("span");
        strong2 = element("strong");
        strong2.textContent = "  単価";
        t15 = space();
        span16 = element("span");
        span15 = element("span");
        span14 = element("span");
        span13 = element("span");
        strong3 = element("strong");
        span12 = element("span");
        t16 = text(t16_value);
        t17 = text("円");
        t18 = space();
        tr1 = element("tr");
        td1 = element("td");
        if_block3.c();
        t19 = space();
        if_block4.c();
        t20 = space();
        td2 = element("td");
        if_block5.c();
        t21 = space();
        tr2 = element("tr");
        td3 = element("td");
        fieldset = element("fieldset");
        legend = element("legend");
        legend.textContent = "総計（円）";
        t23 = space();
        div10 = element("div");
        t24 = text(
        /*total*/
        ctx[2]);
        t25 = space();
        div12 = element("div");
        div11 = element("div");
        button0 = element("button");
        create_component(shoppingcart.$$.fragment);
        t26 = space();
        button1 = element("button");
        create_component(cancelpresentation.$$.fragment);
        t27 = space();
        button2 = element("button");
        create_component(morevert.$$.fragment);
        t28 = space();
        if (if_block6) if_block6.c();
        t29 = space();
        attr_dev(span0, "class", "code svelte-bbj5v9");
        add_location(span0, file$7, 65, 24, 2006);
        attr_dev(div0, "class", "mdc-card__media-content");
        add_location(div0, file$7, 52, 21, 1437);
        attr_dev(div1, "class", "mdc-card__media mdc-card__media--square mdc-card__media--16-9");
        set_style(div1, "background-image", "url('./images/" +
        /*img*/
        ctx[49] + "')");
        attr_dev(div1, "alt", "" + (
        /*name*/
        ctx[19] + " 商品画像"));
        attr_dev(div1, "title", "" + (
        /*name*/
        ctx[19] + " 商品画像"));
        add_location(div1, file$7, 45, 18, 1118);
        attr_dev(div2, "class", "mdc-card__title card-title-ex svelte-bbj5v9");
        add_location(div2, file$7, 74, 21, 2278);
        attr_dev(div3, "class", "mdc-card__primary card-title svelte-bbj5v9");
        attr_dev(div3, "style", setting.title_back);
        add_location(div3, file$7, 72, 18, 2162);
        attr_dev(div4, "class", "mdc-card__subtitle mdc-typography mdc-typography--subtitle1");
        add_location(div4, file$7, 80, 20, 2502);
        attr_dev(div5, "class", "subtitle svelte-bbj5v9");
        add_location(div5, file$7, 79, 18, 2459);
        attr_dev(div6, "class", "mdc-chip-set");
        set_style(div6, "margin", "0 auto");
        attr_dev(div6, "role", "grid");
        add_location(div6, file$7, 88, 18, 2792);
        attr_dev(div7, "class", "mdc-card__primary-action");
        add_location(div7, file$7, 43, 15, 1030);
        add_location(strong0, file$7, 125, 39, 4459);
        attr_dev(span1, "class", "mdc-chip__text");
        add_location(span1, file$7, 124, 35, 4390);
        attr_dev(span2, "role", "button");
        attr_dev(span2, "tabindex", "0");
        attr_dev(span2, "class", "mdc-chip__primary-action");
        add_location(span2, file$7, 121, 33, 4208);
        attr_dev(span3, "role", "gridcell");
        add_location(span3, file$7, 120, 30, 4152);
        attr_dev(span4, "class", "gram");
        add_location(span4, file$7, 135, 50, 5038);
        add_location(strong1, file$7, 135, 42, 5030);
        attr_dev(span5, "class", "mdc-chip__text");
        add_location(span5, file$7, 134, 38, 4958);
        attr_dev(span6, "role", "button");
        attr_dev(span6, "tabindex", "0");
        attr_dev(span6, "class", "mdc-chip__primary-action");
        add_location(span6, file$7, 131, 36, 4767);
        attr_dev(span7, "role", "gridcell");
        add_location(span7, file$7, 130, 33, 4708);
        attr_dev(span8, "class", "mdc-chip gchip-r svelte-bbj5v9");
        add_location(span8, file$7, 129, 30, 4643);
        attr_dev(div8, "class", "mdc-chip gchip-l svelte-bbj5v9");
        add_location(div8, file$7, 119, 26, 4091);
        add_location(strong2, file$7, 148, 39, 5679);
        attr_dev(span9, "class", "mdc-chip__text");
        add_location(span9, file$7, 147, 35, 5610);
        attr_dev(span10, "role", "button");
        attr_dev(span10, "tabindex", "0");
        attr_dev(span10, "class", "mdc-chip__primary-action");
        add_location(span10, file$7, 144, 33, 5428);
        attr_dev(span11, "role", "gridcell");
        add_location(span11, file$7, 143, 30, 5372);
        attr_dev(span12, "class", "gram");
        add_location(span12, file$7, 158, 50, 6249);
        add_location(strong3, file$7, 158, 42, 6241);
        attr_dev(span13, "class", "mdc-chip__text");
        add_location(span13, file$7, 157, 38, 6169);
        attr_dev(span14, "role", "button");
        attr_dev(span14, "tabindex", "0");
        attr_dev(span14, "class", "mdc-chip__primary-action");
        add_location(span14, file$7, 154, 36, 5978);
        attr_dev(span15, "role", "gridcell");
        add_location(span15, file$7, 153, 33, 5919);
        attr_dev(span16, "class", "mdc-chip pchip-r svelte-bbj5v9");
        add_location(span16, file$7, 152, 30, 5854);
        attr_dev(div9, "class", "mdc-chip pchip-l svelte-bbj5v9");
        add_location(div9, file$7, 142, 27, 5311);
        attr_dev(td0, "align", "center");
        attr_dev(td0, "colspan", "2");
        attr_dev(td0, "class", "svelte-bbj5v9");
        add_location(td0, file$7, 116, 22, 3992);
        add_location(tr0, file$7, 115, 20, 3965);
        attr_dev(td1, "align", "center");
        attr_dev(td1, "rowspan", "2");
        attr_dev(td1, "valign", "top");
        attr_dev(td1, "class", "svelte-bbj5v9");
        add_location(td1, file$7, 169, 18, 6587);
        attr_dev(td2, "align", "right");
        attr_dev(td2, "class", "svelte-bbj5v9");
        add_location(td2, file$7, 200, 16, 8150);
        add_location(tr1, file$7, 168, 15, 6564);
        attr_dev(legend, "class", "ld-total svelte-bbj5v9");
        add_location(legend, file$7, 225, 24, 9069);
        attr_dev(div10, "class", "fs-total-val svelte-bbj5v9");
        add_location(div10, file$7, 227, 26, 9176);
        attr_dev(fieldset, "class", "fs-total svelte-bbj5v9");
        add_location(fieldset, file$7, 224, 22, 9017);
        attr_dev(td3, "align", "right");
        attr_dev(td3, "class", "svelte-bbj5v9");
        add_location(td3, file$7, 222, 19, 8975);
        add_location(tr2, file$7, 221, 18, 8951);
        add_location(tbody, file$7, 114, 18, 3937);
        attr_dev(table, "border", "0");
        attr_dev(table, "class", "price-table svelte-bbj5v9");
        add_location(table, file$7, 113, 16, 3880);
        attr_dev(button0, "class", "mdc-icon-button material-icons mdc-card__action mdc-card__action--icon--unbounded");
        attr_dev(button0, "title", "カートを確認して注文する");
        button0.disabled =
        /*btn_cart*/
        ctx[15];
        set_style(button0, "color",
        /*cartColor*/
        ctx[16]);
        attr_dev(button0, "data-mdc-ripple-is-unbounded", "true");
        add_location(button0, file$7, 240, 9, 9488);
        attr_dev(button1, "class", "mdc-icon-button material-icons mdc-card__action mdc-card__action--icon--unbounded btn-reset svelte-bbj5v9");
        attr_dev(button1, "title", "この商品をリセットする");
        button1.disabled = button1_disabled_value =
        /*btn_reset*/
        ctx[13][
        /*i*/
        ctx[56]];
        set_style(button1, "color",
        /*resetColor*/
        ctx[14][
        /*i*/
        ctx[56]]);
        attr_dev(button1, "data-mdc-ripple-is-unbounded", "true");
        add_location(button1, file$7, 253, 9, 9975);
        attr_dev(button2, "class", "mdc-icon-button material-icons mdc-card__action mdc-card__action--icon--unbounded");
        attr_dev(button2, "title", "商品説明を見る");
        add_location(button2, file$7, 266, 9, 10488);
        attr_dev(div11, "class", "mdc-card__action-icons");
        add_location(div11, file$7, 237, 4, 9410);
        attr_dev(div12, "class", "mdc-card__actions");
        add_location(div12, file$7, 235, 2, 9373);
        attr_dev(div13, "class", "mdc-card");
        add_location(div13, file$7, 42, 12, 992);
        attr_dev(div14, "class", "mdc-layout-grid__cell");
        add_location(div14, file$7, 40, 9, 934);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div14, anchor);
        append_dev(div14, div13);
        append_dev(div13, div7);
        append_dev(div7, div1);
        append_dev(div1, div0);
        if (if_block0) if_block0.m(div0, null);
        append_dev(div0, t0);
        if (if_block1) if_block1.m(div0, null);
        append_dev(div0, t1);
        if (if_block2) if_block2.m(div0, null);
        append_dev(div0, t2);
        append_dev(div0, span0);
        append_dev(span0, t3);
        append_dev(div7, t4);
        append_dev(div7, div3);
        append_dev(div3, div2);
        append_dev(div2, t5);
        append_dev(div7, t6);
        append_dev(div7, div5);
        append_dev(div5, div4);
        append_dev(div4, t7);
        append_dev(div7, t8);
        append_dev(div7, div6);

        for (var _i11 = 0; _i11 < each_blocks.length; _i11 += 1) {
          each_blocks[_i11].m(div6, null);
        }

        append_dev(div13, t9);
        append_dev(div13, table);
        append_dev(table, tbody);
        append_dev(tbody, tr0);
        append_dev(tr0, td0);
        append_dev(td0, div8);
        append_dev(div8, span3);
        append_dev(span3, span2);
        append_dev(span2, span1);
        append_dev(span1, strong0);
        append_dev(div8, t11);
        append_dev(div8, span8);
        append_dev(span8, span7);
        append_dev(span7, span6);
        append_dev(span6, span5);
        append_dev(span5, strong1);
        append_dev(strong1, span4);
        append_dev(span4, t12);
        append_dev(td0, t13);
        append_dev(td0, div9);
        append_dev(div9, span11);
        append_dev(span11, span10);
        append_dev(span10, span9);
        append_dev(span9, strong2);
        append_dev(div9, t15);
        append_dev(div9, span16);
        append_dev(span16, span15);
        append_dev(span15, span14);
        append_dev(span14, span13);
        append_dev(span13, strong3);
        append_dev(strong3, span12);
        append_dev(span12, t16);
        append_dev(span12, t17);
        append_dev(tbody, t18);
        append_dev(tbody, tr1);
        append_dev(tr1, td1);
        if_block3.m(td1, null);
        append_dev(td1, t19);
        if_blocks[current_block_type_index].m(td1, null);
        append_dev(tr1, t20);
        append_dev(tr1, td2);
        if_block5.m(td2, null);
        append_dev(tbody, t21);
        append_dev(tbody, tr2);
        append_dev(tr2, td3);
        append_dev(td3, fieldset);
        append_dev(fieldset, legend);
        append_dev(fieldset, t23);
        append_dev(fieldset, div10);
        append_dev(div10, t24);
        append_dev(div13, t25);
        append_dev(div13, div12);
        append_dev(div12, div11);
        append_dev(div11, button0);
        mount_component(shoppingcart, button0, null);
        append_dev(div11, t26);
        append_dev(div11, button1);
        mount_component(cancelpresentation, button1, null);
        append_dev(div11, t27);
        append_dev(div11, button2);
        mount_component(morevert, button2, null);
        append_dev(div12, t28);
        if (if_block6) if_block6.m(div12, null);
        append_dev(div14, t29);
        current = true;

        if (!mounted) {
          dispose = [listen_dev(button0, "click",
          /*click_handler_2*/
          ctx[35], false, false, false), listen_dev(button1, "click", click_handler_3, false, false, false), listen_dev(button2, "click", click_handler_4, false, false, false)];
          mounted = true;
        }
      },
      p: function update(new_ctx, dirty) {
        ctx = new_ctx;

        if (dirty[0] &
        /*promise*/
        4194304) {
          each_value_1 =
          /*clips*/
          ctx[53];
          validate_each_argument(each_value_1);

          var _i12;

          for (_i12 = 0; _i12 < each_value_1.length; _i12 += 1) {
            var child_ctx = get_each_context_1$1(ctx, each_value_1, _i12);

            if (each_blocks[_i12]) {
              each_blocks[_i12].p(child_ctx, dirty);
            } else {
              each_blocks[_i12] = create_each_block_1$1(child_ctx);

              each_blocks[_i12].c();

              each_blocks[_i12].m(div6, null);
            }
          }

          for (; _i12 < each_blocks.length; _i12 += 1) {
            each_blocks[_i12].d(1);
          }

          each_blocks.length = each_value_1.length;
        }

        if_block3.p(ctx, dirty);
        if_block4.p(ctx, dirty);
        if_block5.p(ctx, dirty);
        if (!current || dirty[0] &
        /*total*/
        4) set_data_dev(t24,
        /*total*/
        ctx[2]);

        if (!current || dirty[0] &
        /*btn_cart*/
        32768) {
          prop_dev(button0, "disabled",
          /*btn_cart*/
          ctx[15]);
        }

        if (!current || dirty[0] &
        /*cartColor*/
        65536) {
          set_style(button0, "color",
          /*cartColor*/
          ctx[16]);
        }

        if (!current || dirty[0] &
        /*btn_reset*/
        8192 && button1_disabled_value !== (button1_disabled_value =
        /*btn_reset*/
        ctx[13][
        /*i*/
        ctx[56]])) {
          prop_dev(button1, "disabled", button1_disabled_value);
        }

        if (!current || dirty[0] &
        /*resetColor*/
        16384) {
          set_style(button1, "color",
          /*resetColor*/
          ctx[14][
          /*i*/
          ctx[56]]);
        }

        if (
        /*visibleDescription*/
        ctx[11][
        /*i*/
        ctx[56]]) {
          if (if_block6) {
            if_block6.p(ctx, dirty);

            if (dirty[0] &
            /*visibleDescription*/
            2048) {
              transition_in(if_block6, 1);
            }
          } else {
            if_block6 = create_if_block_1$1(ctx);
            if_block6.c();
            transition_in(if_block6, 1);
            if_block6.m(div12, null);
          }
        } else if (if_block6) {
          group_outros();
          transition_out(if_block6, 1, 1, function () {
            if_block6 = null;
          });
          check_outros();
        }
      },
      i: function intro(local) {
        if (current) return;
        transition_in(if_block4);
        transition_in(shoppingcart.$$.fragment, local);
        transition_in(cancelpresentation.$$.fragment, local);
        transition_in(morevert.$$.fragment, local);
        transition_in(if_block6);
        current = true;
      },
      o: function outro(local) {
        transition_out(if_block4);
        transition_out(shoppingcart.$$.fragment, local);
        transition_out(cancelpresentation.$$.fragment, local);
        transition_out(morevert.$$.fragment, local);
        transition_out(if_block6);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div14);
        if (if_block0) if_block0.d();
        if (if_block1) if_block1.d();
        if (if_block2) if_block2.d();
        destroy_each(each_blocks, detaching);
        if_block3.d();
        if_blocks[current_block_type_index].d();
        if_block5.d();
        destroy_component(shoppingcart);
        destroy_component(cancelpresentation);
        destroy_component(morevert);
        if (if_block6) if_block6.d();
        mounted = false;
        run_all(dispose);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block$2.name,
      type: "if",
      source: "(39:6) {#if i < count}",
      ctx: ctx
    });
    return block;
  } // (56:24) {#if sale === 1}


  function create_if_block_9(ctx) {
    var div;
    var block = {
      c: function create() {
        div = element("div");
        div.textContent = "Sale";
        attr_dev(div, "class", "sale svelte-bbj5v9");
        add_location(div, file$7, 56, 27, 1607);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div, anchor);
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_9.name,
      type: "if",
      source: "(56:24) {#if sale === 1}",
      ctx: ctx
    });
    return block;
  } // (59:24) {#if shipping === 1 }


  function create_if_block_8(ctx) {
    var span;
    var block = {
      c: function create() {
        span = element("span");
        span.textContent = "送料無料";
        attr_dev(span, "class", "shipping svelte-bbj5v9");
        add_location(span, file$7, 59, 27, 1739);
      },
      m: function mount(target, anchor) {
        insert_dev(target, span, anchor);
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(span);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_8.name,
      type: "if",
      source: "(59:24) {#if shipping === 1 }",
      ctx: ctx
    });
    return block;
  } // (62:24) {#if sold === 1 }


  function create_if_block_7(ctx) {
    var span;
    var block = {
      c: function create() {
        span = element("span");
        span.textContent = "完売しました";
        attr_dev(span, "class", "chip-sold svelte-bbj5v9");
        add_location(span, file$7, 62, 27, 1873);
      },
      m: function mount(target, anchor) {
        insert_dev(target, span, anchor);
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(span);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_7.name,
      type: "if",
      source: "(62:24) {#if sold === 1 }",
      ctx: ctx
    });
    return block;
  } // (93:24) {#if i < 3  }


  function create_if_block_5(ctx) {
    var if_block_anchor;
    var if_block =
    /*msg*/
    ctx[57] != "" && create_if_block_6(ctx);
    var block = {
      c: function create() {
        if (if_block) if_block.c();
        if_block_anchor = empty();
      },
      m: function mount(target, anchor) {
        if (if_block) if_block.m(target, anchor);
        insert_dev(target, if_block_anchor, anchor);
      },
      p: function update(ctx, dirty) {
        if (
        /*msg*/
        ctx[57] != "") if_block.p(ctx, dirty);
      },
      d: function destroy(detaching) {
        if (if_block) if_block.d(detaching);
        if (detaching) detach_dev(if_block_anchor);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_5.name,
      type: "if",
      source: "(93:24) {#if i < 3  }",
      ctx: ctx
    });
    return block;
  } // (94:27) {#if msg != "" }


  function create_if_block_6(ctx) {
    var div1;
    var div0;
    var t0;
    var span2;
    var span1;
    var span0;
    var t1_value =
    /*msg*/
    ctx[57] + "";
    var t1;
    var t2;
    var block = {
      c: function create() {
        div1 = element("div");
        div0 = element("div");
        t0 = space();
        span2 = element("span");
        span1 = element("span");
        span0 = element("span");
        t1 = text(t1_value);
        t2 = space();
        attr_dev(div0, "class", "mdc-chip__ripple");
        add_location(div0, file$7, 95, 34, 3154);
        attr_dev(span0, "class", "mdc-chip__text");
        add_location(span0, file$7, 100, 38, 3475);
        attr_dev(span1, "role", "button");
        attr_dev(span1, "tabindex", "0");
        attr_dev(span1, "class", "mdc-chip__primary-action");
        add_location(span1, file$7, 97, 36, 3284);
        attr_dev(span2, "role", "gridcell");
        add_location(span2, file$7, 96, 34, 3225);
        attr_dev(div1, "class", "mdc-chip");
        attr_dev(div1, "role", "row");
        attr_dev(div1, "style", /*color*/
        ctx[58]);
        add_location(div1, file$7, 94, 32, 3070);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div1, anchor);
        append_dev(div1, div0);
        append_dev(div1, t0);
        append_dev(div1, span2);
        append_dev(span2, span1);
        append_dev(span1, span0);
        append_dev(span0, t1);
        append_dev(div1, t2);
      },
      p: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(div1);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_6.name,
      type: "if",
      source: "(94:27) {#if msg != \\\"\\\" }",
      ctx: ctx
    });
    return block;
  } // (92:21) {#each clips as {msg, color}


  function create_each_block_1$1(ctx) {
    var if_block_anchor;
    var if_block =
    /*i*/
    ctx[56] < 3 && create_if_block_5(ctx);
    var block = {
      c: function create() {
        if (if_block) if_block.c();
        if_block_anchor = empty();
      },
      m: function mount(target, anchor) {
        if (if_block) if_block.m(target, anchor);
        insert_dev(target, if_block_anchor, anchor);
      },
      p: function update(ctx, dirty) {
        if (
        /*i*/
        ctx[56] < 3) if_block.p(ctx, dirty);
      },
      d: function destroy(detaching) {
        if (if_block) if_block.d(detaching);
        if (detaching) detach_dev(if_block_anchor);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block_1$1.name,
      type: "each",
      source: "(92:21) {#each clips as {msg, color}",
      ctx: ctx
    });
    return block;
  } // (177:24) {:else}


  function create_else_block_2(ctx) {
    var fieldset;
    var legend;
    var t1;
    var div;
    var t2_value =
    /*pack*/
    ctx[4][
    /*i*/
    ctx[56]] + "";
    var t2;
    var block = {
      c: function create() {
        fieldset = element("fieldset");
        legend = element("legend");
        legend.textContent = "個数";
        t1 = space();
        div = element("div");
        t2 = text(t2_value);
        attr_dev(legend, "class", "ld-pack svelte-bbj5v9");
        add_location(legend, file$7, 178, 27, 7103);
        attr_dev(div, "class", "fs-pack-val svelte-bbj5v9");
        add_location(div, file$7, 179, 26, 7165);
        attr_dev(fieldset, "class", "fs-pack svelte-bbj5v9");
        add_location(fieldset, file$7, 177, 22, 7049);
      },
      m: function mount(target, anchor) {
        insert_dev(target, fieldset, anchor);
        append_dev(fieldset, legend);
        append_dev(fieldset, t1);
        append_dev(fieldset, div);
        append_dev(div, t2);
      },
      p: function update(ctx, dirty) {
        if (dirty[0] &
        /*pack*/
        16 && t2_value !== (t2_value =
        /*pack*/
        ctx[4][
        /*i*/
        ctx[56]] + "")) set_data_dev(t2, t2_value);
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(fieldset);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_else_block_2.name,
      type: "else",
      source: "(177:24) {:else}",
      ctx: ctx
    });
    return block;
  } // (172:18) {#if sold === 1 }


  function create_if_block_4(ctx) {
    var fieldset;
    var legend;
    var t1;
    var div;
    var t2_value =
    /*pack*/
    ctx[4][
    /*i*/
    ctx[56]] + "";
    var t2;
    var block = {
      c: function create() {
        fieldset = element("fieldset");
        legend = element("legend");
        legend.textContent = "個数";
        t1 = space();
        div = element("div");
        t2 = text(t2_value);
        set_style(legend, "color", "#ccc");
        set_style(legend, "font-size", "0.8em");
        add_location(legend, file$7, 173, 27, 6818);
        attr_dev(div, "class", "fs-pack-val svelte-bbj5v9");
        set_style(div, "color", "#ccc");
        add_location(div, file$7, 174, 26, 6900);
        attr_dev(fieldset, "class", "fs-pack svelte-bbj5v9");
        set_style(fieldset, "border", "solid 1px #ccc");
        add_location(fieldset, file$7, 172, 22, 6733);
      },
      m: function mount(target, anchor) {
        insert_dev(target, fieldset, anchor);
        append_dev(fieldset, legend);
        append_dev(fieldset, t1);
        append_dev(fieldset, div);
        append_dev(div, t2);
      },
      p: function update(ctx, dirty) {
        if (dirty[0] &
        /*pack*/
        16 && t2_value !== (t2_value =
        /*pack*/
        ctx[4][
        /*i*/
        ctx[56]] + "")) set_data_dev(t2, t2_value);
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(fieldset);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_4.name,
      type: "if",
      source: "(172:18) {#if sold === 1 }",
      ctx: ctx
    });
    return block;
  } // (190:18) {:else}


  function create_else_block_1(ctx) {
    var span0;
    var addcircle;
    var t;
    var span1;
    var removecircle;
    var current;
    var mounted;
    var dispose;
    addcircle = new Add_circle({
      props: {
        size: "2.8em",
        color: "#1faa00"
      },
      $$inline: true
    });

    function click_handler() {
      return (
        /*click_handler*/
        ctx[33](
        /*i*/
        ctx[56],
        /*max*/
        ctx[20])
      );
    }

    removecircle = new Remove_circle({
      props: {
        size: "2.8em",
        color: "red"
      },
      $$inline: true
    });

    function click_handler_1() {
      return (
        /*click_handler_1*/
        ctx[34](
        /*i*/
        ctx[56],
        /*max*/
        ctx[20])
      );
    }

    var block = {
      c: function create() {
        span0 = element("span");
        create_component(addcircle.$$.fragment);
        t = space();
        span1 = element("span");
        create_component(removecircle.$$.fragment);
        attr_dev(span0, "class", "material-icons add-btn svelte-bbj5v9");
        add_location(span0, file$7, 190, 21, 7669);
        attr_dev(span1, "class", "material-icons add-btn svelte-bbj5v9");
        add_location(span1, file$7, 193, 28, 7869);
      },
      m: function mount(target, anchor) {
        insert_dev(target, span0, anchor);
        mount_component(addcircle, span0, null);
        append_dev(span0, t);
        insert_dev(target, span1, anchor);
        mount_component(removecircle, span1, null);
        current = true;

        if (!mounted) {
          dispose = [listen_dev(span0, "click", click_handler, false, false, false), listen_dev(span1, "click", click_handler_1, false, false, false)];
          mounted = true;
        }
      },
      p: function update(new_ctx, dirty) {
        ctx = new_ctx;
      },
      i: function intro(local) {
        if (current) return;
        transition_in(addcircle.$$.fragment, local);
        transition_in(removecircle.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        transition_out(addcircle.$$.fragment, local);
        transition_out(removecircle.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(span0);
        destroy_component(addcircle);
        if (detaching) detach_dev(span1);
        destroy_component(removecircle);
        mounted = false;
        run_all(dispose);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_else_block_1.name,
      type: "else",
      source: "(190:18) {:else}",
      ctx: ctx
    });
    return block;
  } // (184:18) {#if sold === 1 }


  function create_if_block_3(ctx) {
    var span0;
    var addcircle;
    var t;
    var span1;
    var removecircle;
    var current;
    addcircle = new Add_circle({
      props: {
        size: "2.8em",
        color: "#ccc"
      },
      $$inline: true
    });
    removecircle = new Remove_circle({
      props: {
        size: "2.8em",
        color: "#ccc"
      },
      $$inline: true
    });
    var block = {
      c: function create() {
        span0 = element("span");
        create_component(addcircle.$$.fragment);
        t = space();
        span1 = element("span");
        create_component(removecircle.$$.fragment);
        attr_dev(span0, "class", "material-icons");
        add_location(span0, file$7, 184, 21, 7377);
        attr_dev(span1, "class", "material-icons");
        add_location(span1, file$7, 186, 28, 7497);
      },
      m: function mount(target, anchor) {
        insert_dev(target, span0, anchor);
        mount_component(addcircle, span0, null);
        append_dev(span0, t);
        insert_dev(target, span1, anchor);
        mount_component(removecircle, span1, null);
        current = true;
      },
      p: noop,
      i: function intro(local) {
        if (current) return;
        transition_in(addcircle.$$.fragment, local);
        transition_in(removecircle.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        transition_out(addcircle.$$.fragment, local);
        transition_out(removecircle.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(span0);
        destroy_component(addcircle);
        if (detaching) detach_dev(span1);
        destroy_component(removecircle);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_3.name,
      type: "if",
      source: "(184:18) {#if sold === 1 }",
      ctx: ctx
    });
    return block;
  } // (210:19) {:else}


  function create_else_block(ctx) {
    var fieldset;
    var legend;
    var t1;
    var div;
    var t2_value =
    /*subtotal*/
    ctx[3][
    /*i*/
    ctx[56]] + "";
    var t2;
    var block = {
      c: function create() {
        fieldset = element("fieldset");
        legend = element("legend");
        legend.textContent = "小計（円）";
        t1 = space();
        div = element("div");
        t2 = text(t2_value);
        attr_dev(legend, "class", "ld-subtotal svelte-bbj5v9");
        add_location(legend, file$7, 212, 24, 8671);
        attr_dev(div, "class", "fs-subtotal-val svelte-bbj5v9");
        add_location(div, file$7, 213, 26, 8741);
        attr_dev(fieldset, "class", "fs-subtotal svelte-bbj5v9");
        add_location(fieldset, file$7, 211, 22, 8616);
      },
      m: function mount(target, anchor) {
        insert_dev(target, fieldset, anchor);
        append_dev(fieldset, legend);
        append_dev(fieldset, t1);
        append_dev(fieldset, div);
        append_dev(div, t2);
      },
      p: function update(ctx, dirty) {
        if (dirty[0] &
        /*subtotal*/
        8 && t2_value !== (t2_value =
        /*subtotal*/
        ctx[3][
        /*i*/
        ctx[56]] + "")) set_data_dev(t2, t2_value);
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(fieldset);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_else_block.name,
      type: "else",
      source: "(210:19) {:else}",
      ctx: ctx
    });
    return block;
  } // (203:19) {#if sold === 1 }


  function create_if_block_2$1(ctx) {
    var fieldset;
    var legend;
    var t1;
    var div;
    var t2_value =
    /*subtotal*/
    ctx[3][
    /*i*/
    ctx[56]] + "";
    var t2;
    var block = {
      c: function create() {
        fieldset = element("fieldset");
        legend = element("legend");
        legend.textContent = "小計（円）";
        t1 = space();
        div = element("div");
        t2 = text(t2_value);
        attr_dev(legend, "class", "ld-subtotal svelte-bbj5v9");
        set_style(legend, "color", "#ccc");
        add_location(legend, file$7, 205, 24, 8372);
        attr_dev(div, "class", "fs-subtotal-val svelte-bbj5v9");
        set_style(div, "color", "#ccc");
        add_location(div, file$7, 206, 26, 8462);
        attr_dev(fieldset, "class", "fs-subtotal svelte-bbj5v9");
        set_style(fieldset, "border", "solid 1px #ccc");
        add_location(fieldset, file$7, 204, 22, 8286);
      },
      m: function mount(target, anchor) {
        insert_dev(target, fieldset, anchor);
        append_dev(fieldset, legend);
        append_dev(fieldset, t1);
        append_dev(fieldset, div);
        append_dev(div, t2);
      },
      p: function update(ctx, dirty) {
        if (dirty[0] &
        /*subtotal*/
        8 && t2_value !== (t2_value =
        /*subtotal*/
        ctx[3][
        /*i*/
        ctx[56]] + "")) set_data_dev(t2, t2_value);
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(fieldset);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_2$1.name,
      type: "if",
      source: "(203:19) {#if sold === 1 }",
      ctx: ctx
    });
    return block;
  } // (279:3) {#if visibleDescription[i]}


  function create_if_block_1$1(ctx) {
    var div1;
    var h10;
    var t1;
    var h11;
    var t2;
    var t3_value =
    /*name*/
    ctx[19] + "";
    var t3;
    var t4;
    var t5;
    var p;
    var raw_value = marked.parse(
    /*text*/
    ctx[54]) + "";
    var t6;
    var div0;
    var div1_transition;
    var current;
    var mounted;
    var dispose;

    function click_handler_5() {
      return (
        /*click_handler_5*/
        ctx[38](
        /*i*/
        ctx[56])
      );
    }

    var block = {
      c: function create() {
        div1 = element("div");
        h10 = element("h1");
        h10.textContent = "・商品説明・";
        t1 = space();
        h11 = element("h1");
        t2 = text("【 ");
        t3 = text(t3_value);
        t4 = text(" 】");
        t5 = space();
        p = element("p");
        t6 = space();
        div0 = element("div");
        div0.textContent = "※ 閉じるには画面をクリックして下さい。";
        attr_dev(h10, "class", "mdc-typography--headline6 svelte-bbj5v9");
        add_location(h10, file$7, 283, 11, 11019);
        attr_dev(h11, "class", "mdc-typography--headline5 svelte-bbj5v9");
        add_location(h11, file$7, 286, 11, 11107);
        add_location(p, file$7, 290, 11, 11204);
        attr_dev(div0, "class", "desc-close svelte-bbj5v9");
        add_location(div0, file$7, 292, 10, 11251);
        attr_dev(div1, "class", "product-info svelte-bbj5v9");
        add_location(div1, file$7, 279, 6, 10875);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div1, anchor);
        append_dev(div1, h10);
        append_dev(div1, t1);
        append_dev(div1, h11);
        append_dev(h11, t2);
        append_dev(h11, t3);
        append_dev(h11, t4);
        append_dev(div1, t5);
        append_dev(div1, p);
        p.innerHTML = raw_value;
        append_dev(div1, t6);
        append_dev(div1, div0);
        current = true;

        if (!mounted) {
          dispose = listen_dev(div1, "click", click_handler_5, false, false, false);
          mounted = true;
        }
      },
      p: function update(new_ctx, dirty) {
        ctx = new_ctx;
      },
      i: function intro(local) {
        if (current) return;
        add_render_callback(function () {
          if (!div1_transition) div1_transition = create_bidirectional_transition(div1, fly, {
            y: 200,
            duration: 2000
          }, true);
          div1_transition.run(1);
        });
        current = true;
      },
      o: function outro(local) {
        if (!div1_transition) div1_transition = create_bidirectional_transition(div1, fly, {
          y: 200,
          duration: 2000
        }, false);
        div1_transition.run(0);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div1);
        if (detaching && div1_transition) div1_transition.end();
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_1$1.name,
      type: "if",
      source: "(279:3) {#if visibleDescription[i]}",
      ctx: ctx
    });
    return block;
  } // (36:3) {#each _products_ as {code, name, subtitle, img, price, sale,                           max, gram, shipping, sold, clips, text}


  function create_each_block$1(ctx) {
    var if_block_anchor;
    var current;
    var if_block =
    /*i*/
    ctx[56] <
    /*count*/
    ctx[1] && create_if_block$2(ctx);
    var block = {
      c: function create() {
        if (if_block) if_block.c();
        if_block_anchor = empty();
      },
      m: function mount(target, anchor) {
        if (if_block) if_block.m(target, anchor);
        insert_dev(target, if_block_anchor, anchor);
        current = true;
      },
      p: function update(ctx, dirty) {
        if (
        /*i*/
        ctx[56] <
        /*count*/
        ctx[1]) {
          if (if_block) {
            if_block.p(ctx, dirty);

            if (dirty[0] &
            /*count*/
            2) {
              transition_in(if_block, 1);
            }
          } else {
            if_block = create_if_block$2(ctx);
            if_block.c();
            transition_in(if_block, 1);
            if_block.m(if_block_anchor.parentNode, if_block_anchor);
          }
        } else if (if_block) {
          group_outros();
          transition_out(if_block, 1, 1, function () {
            if_block = null;
          });
          check_outros();
        }
      },
      i: function intro(local) {
        if (current) return;
        transition_in(if_block);
        current = true;
      },
      o: function outro(local) {
        transition_out(if_block);
        current = false;
      },
      d: function destroy(detaching) {
        if (if_block) if_block.d(detaching);
        if (detaching) detach_dev(if_block_anchor);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block$1.name,
      type: "each",
      source: "(36:3) {#each _products_ as {code, name, subtitle, img, price, sale,                           max, gram, shipping, sold, clips, text}",
      ctx: ctx
    });
    return block;
  } // (4:16)     <div class="container">      <Loading />   </div>  {:then _products_ }


  function create_pending_block(ctx) {
    var div;
    var loading;
    var current;
    loading = new Loading({
      $$inline: true
    });
    var block = {
      c: function create() {
        div = element("div");
        create_component(loading.$$.fragment);
        attr_dev(div, "class", "container");
        add_location(div, file$7, 5, 2, 102);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div, anchor);
        mount_component(loading, div, null);
        current = true;
      },
      p: noop,
      i: function intro(local) {
        if (current) return;
        transition_in(loading.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        transition_out(loading.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div);
        destroy_component(loading);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_pending_block.name,
      type: "pending",
      source: "(4:16)     <div class=\\\"container\\\">      <Loading />   </div>  {:then _products_ }",
      ctx: ctx
    });
    return block;
  }

  function create_fragment$7(ctx) {
    var t0;
    var div6;
    var div4;
    var div3;
    var h2;
    var t2;
    var div0;
    var t4;
    var orderlists;
    var t5;
    var div2;
    var button0;
    var div1;
    var t6;
    var span;
    var t8;
    var br0;
    var t9;
    var br1;
    var t10;
    var br2;
    var t11;
    var div5;
    var t12;
    var div11;
    var div10;
    var div7;
    var t14;
    var div9;
    var button1;
    var div8;
    var t15;
    var cancel;
    var current;
    var mounted;
    var dispose;
    add_render_callback(
    /*onwindowresize*/
    ctx[32]);
    var info = {
      ctx: ctx,
      current: null,
      token: null,
      hasCatch: true,
      pending: create_pending_block,
      then: create_then_block,
      catch: create_catch_block,
      value: 47,
      error: 61,
      blocks: [,,,]
    };
    handle_promise(/*promise*/
    ctx[22], info);
    orderlists = new OrderLists({
      props: {
        cartlist:
        /*_products*/
        ctx[12],
        mail: user.email,
        order:
        /*order*/
        ctx[25],
        newopen:
        /*newopen*/
        ctx[9]
      },
      $$inline: true
    });
    cancel = new Cancel({
      props: {
        color: "green",
        size: "2em"
      },
      $$inline: true
    });
    var block = {
      c: function create() {
        info.block.c();
        t0 = space();
        div6 = element("div");
        div4 = element("div");
        div3 = element("div");
        h2 = element("h2");
        h2.textContent = "注文フォーム";
        t2 = space();
        div0 = element("div");
        div0.textContent = "クリックでリスト間を移動出来ます";
        t4 = space();
        create_component(orderlists.$$.fragment);
        t5 = space();
        div2 = element("div");
        button0 = element("button");
        div1 = element("div");
        t6 = space();
        span = element("span");
        span.textContent = "閉じる";
        t8 = space();
        br0 = element("br");
        t9 = space();
        br1 = element("br");
        t10 = space();
        br2 = element("br");
        t11 = space();
        div5 = element("div");
        t12 = space();
        div11 = element("div");
        div10 = element("div");
        div7 = element("div");
        div7.textContent = "この商品の限定数に達しています。";
        t14 = space();
        div9 = element("div");
        button1 = element("button");
        div8 = element("div");
        t15 = space();
        create_component(cancel.$$.fragment);
        attr_dev(h2, "class", "mdc-dialog__title dialog-title svelte-bbj5v9");
        add_location(h2, file$7, 338, 9, 12235);
        attr_dev(div0, "class", "list-msg center");
        add_location(div0, file$7, 342, 9, 12335);
        attr_dev(div1, "class", "mdc-button__ripple");
        add_location(div1, file$7, 356, 13, 12918);
        attr_dev(span, "class", "mdc-button__label");
        add_location(span, file$7, 357, 13, 12970);
        attr_dev(button0, "type", "button");
        attr_dev(button0, "class", "mdc-button mdc-button--outlined mdc-dialog__button");
        attr_dev(button0, "data-mdc-dialog-action", "cancel");
        attr_dev(button0, "title", "注文フォームを閉じる");
        add_location(button0, file$7, 351, 11, 12662);
        attr_dev(div2, "class", "mdc-dialog__actions btn-cancel svelte-bbj5v9");
        add_location(div2, file$7, 350, 9, 12606);
        attr_dev(div3, "class", "mdc-dialog__surface");
        attr_dev(div3, "role", "alertdialog");
        attr_dev(div3, "aria-modal", "true");
        attr_dev(div3, "aria-labelledby", "my-dialog-title");
        attr_dev(div3, "aria-describedby", "");
        set_style(div3, "width",
        /*dialog_width*/
        ctx[10] + "px");
        add_location(div3, file$7, 332, 7, 12032);
        add_location(br0, file$7, 363, 6, 13072);
        add_location(br1, file$7, 364, 6, 13083);
        add_location(br2, file$7, 365, 6, 13094);
        attr_dev(div4, "class", "mdc-dialog__container");
        add_location(div4, file$7, 331, 5, 11989);
        attr_dev(div5, "class", "mdc-dialog__scrim");
        add_location(div5, file$7, 368, 5, 13117);
        attr_dev(div6, "class", "mdc-dialog");
        add_location(div6, file$7, 330, 3, 11959);
        attr_dev(div7, "class", "mdc-snackbar__label snackbar-ex svelte-bbj5v9");
        attr_dev(div7, "aria-atomic", "false");
        add_location(div7, file$7, 374, 7, 13318);
        attr_dev(div8, "class", "mdc-button__ripple");
        add_location(div8, file$7, 379, 11, 13555);
        attr_dev(button1, "class", "mdc-button mdc-snackbar__action");
        add_location(button1, file$7, 378, 9, 13495);
        attr_dev(div9, "class", "mdc-snackbar__actions");
        attr_dev(div9, "aria-atomic", "true");
        add_location(div9, file$7, 377, 7, 13431);
        attr_dev(div10, "class", "mdc-snackbar__surface snackbar svelte-bbj5v9");
        attr_dev(div10, "role", "status");
        attr_dev(div10, "aria-relevant", "additions");
        add_location(div10, file$7, 373, 5, 13225);
        attr_dev(div11, "class", "mdc-snackbar");
        add_location(div11, file$7, 372, 3, 13193);
      },
      l: function claim(nodes) {
        throw new Error_1("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        info.block.m(target, info.anchor = anchor);

        info.mount = function () {
          return t0.parentNode;
        };

        info.anchor = t0;
        insert_dev(target, t0, anchor);
        insert_dev(target, div6, anchor);
        append_dev(div6, div4);
        append_dev(div4, div3);
        append_dev(div3, h2);
        append_dev(div3, t2);
        append_dev(div3, div0);
        append_dev(div3, t4);
        mount_component(orderlists, div3, null);
        append_dev(div3, t5);
        append_dev(div3, div2);
        append_dev(div2, button0);
        append_dev(button0, div1);
        append_dev(button0, t6);
        append_dev(button0, span);
        append_dev(div4, t8);
        append_dev(div4, br0);
        append_dev(div4, t9);
        append_dev(div4, br1);
        append_dev(div4, t10);
        append_dev(div4, br2);
        append_dev(div6, t11);
        append_dev(div6, div5);
        insert_dev(target, t12, anchor);
        insert_dev(target, div11, anchor);
        append_dev(div11, div10);
        append_dev(div10, div7);
        append_dev(div10, t14);
        append_dev(div10, div9);
        append_dev(div9, button1);
        append_dev(button1, div8);
        append_dev(button1, t15);
        mount_component(cancel, button1, null);
        current = true;

        if (!mounted) {
          dispose = [listen_dev(window_1$1, "resize",
          /*onwindowresize*/
          ctx[32]), listen_dev(button0, "click",
          /*click_handler_7*/
          ctx[40], false, false, false)];
          mounted = true;
        }
      },
      p: function update(new_ctx, dirty) {
        ctx = new_ctx;
        update_await_block_branch(info, ctx, dirty);
        var orderlists_changes = {};
        if (dirty[0] &
        /*_products*/
        4096) orderlists_changes.cartlist =
        /*_products*/
        ctx[12];
        if (dirty[0] &
        /*newopen*/
        512) orderlists_changes.newopen =
        /*newopen*/
        ctx[9];
        orderlists.$set(orderlists_changes);

        if (!current || dirty[0] &
        /*dialog_width*/
        1024) {
          set_style(div3, "width",
          /*dialog_width*/
          ctx[10] + "px");
        }
      },
      i: function intro(local) {
        if (current) return;
        transition_in(info.block);
        transition_in(orderlists.$$.fragment, local);
        transition_in(cancel.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        for (var i = 0; i < 3; i += 1) {
          var _block = info.blocks[i];
          transition_out(_block);
        }

        transition_out(orderlists.$$.fragment, local);
        transition_out(cancel.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        info.block.d(detaching);
        info.token = null;
        info = null;
        if (detaching) detach_dev(t0);
        if (detaching) detach_dev(div6);
        destroy_component(orderlists);
        if (detaching) detach_dev(t12);
        if (detaching) detach_dev(div11);
        destroy_component(cancel);
        mounted = false;
        run_all(dispose);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$7.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function getProductsData(_x) {
    return _getProductsData.apply(this, arguments);
  } // --------------------------------------------------------------------
  // 消費税演算　％
  // 税額端数処理設定(業者により指定自由)：　四捨五入-[0] 切り上げ-[1] 切り捨て-[2]


  function _getProductsData() {
    _getProductsData = _asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee2(p) {
      return regenerator.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (!(p !== undefined)) {
                _context2.next = 6;
                break;
              }

              _context2.next = 3;
              return p;

            case 3:
              return _context2.abrupt("return", _context2.sent);

            case 6:
              //　データ読込エラー 
              alert(new Error("データの読込に失敗しました"));
              throw new Error("Error: データの読込に失敗しました");

            case 8:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));
    return _getProductsData.apply(this, arguments);
  }

  function calc_tax(price, pack, t, f) {
    // let isTax = "";
    var m = price * pack * (t / 100);

    if (t > 0) {
      if (0) {
        m = Math.round(m);
      } // 四捨五入


      if (1) {
        m = Math.ceil(m);
      } // 切り上げ


      if (2) {
        m = Math.floor(m);
      } // 切り捨て

    }

    return m;
  }

  function instance$7($$self, $$props, $$invalidate) {
    var $version;
    validate_store(version, 'version');
    component_subscribe($$self, version, function ($$value) {
      return $$invalidate(17, $version = $$value);
    });
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Home', slots, []);
    var oW = 0; // 画面サイズ
    //　データ読込 
    // SHOP: データ初期化  

    var promise = getProductsData(products);
    var dataLength = products.length; // データ数 

    var times = 6; // 表字数  

    var count = times; // カウント初期値

    var disable = ""; // ボタンの無効化

    var more = 'もっと見る'; // ボタン表示テキスト

    var moreColor = '#fff'; // 「もっと見る」ボタン

    var counter = function counter() {
      $$invalidate(1, count += times);
    }; // 注文フォーム


    var newopen = 0; // フラグ：注文フォームを開く

    var dialog; // 注文表モーダル

    var dialog_width = 416; // MODAL 初期値
    // from init.js

    var mail = user.email;
    var order = order_mail;
    var visibleDescription = []; // 商品説明表示

    var total = 0; // 商品合計金額

    var len = 0; // 商品合計件数
    // 商品内容各要素 

    var id = []; // 商品番号

    var code = []; // 商品コード

    var name = []; // 商品名

    var price = []; // 商品価格

    var subtotal = []; // 小計金額

    var pack = []; // 商品個数

    var max = []; // 最大個数

    var shipping = []; // 送料無料

    var _products = []; // 注文用一時配列　
    // フラグ：ボタンの有効無効

    var btn_reset = []; // リセットボタン 

    var resetColor = []; // リセットボタン色

    var btn_cart = true; // カートボタン

    var cartColor = "gray"; // カートボタン色

    var snackbar; // 商品限定数アラート表示

    onMount( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee() {
      return regenerator.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              window.mdc.autoInit(); // MDC コンポーネント設定

              $$invalidate(31, len = products.length); // 商品件数 
              // 商品データの配列生成：初期化  

              [].forEach.call(products, function (obj, i) {
                id[i] = obj.id;
                $$invalidate(18, code[i] = obj.code, code);
                $$invalidate(19, name[i] = obj.name, name);
                $$invalidate(5, price[i] = obj.price, price);
                $$invalidate(21, shipping[i] = obj.shipping, shipping);
                $$invalidate(20, max[i] = obj.max, max);
                $$invalidate(4, pack[i] = 0, pack);
                $$invalidate(3, subtotal[i] = 0, subtotal);
                $$invalidate(13, btn_reset[i] = true, btn_reset);
                $$invalidate(14, resetColor[i] = "gray", resetColor); // subTotal[i]   = "";     // 小計金額の完売時：disabled

                $$invalidate(11, visibleDescription[i] = false, visibleDescription); // 商品説明表示
              });
              $$invalidate(2, total = 0); // 商品購入総計初期化
              // ボタン表示の初期無効化

              $$invalidate(15, btn_cart = true);
              $$invalidate(16, cartColor = "gray"); // 注文表モーダル

              dialog = new mdc.dialog.MDCDialog(document.querySelector('.mdc-dialog'));
              snackbar = new mdc.snackbar.MDCSnackbar(document.querySelector('.mdc-snackbar'));
              snackbar.timeoutMs = 4000;

            case 9:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }))); // --------------------------------------------------------------------
    // RESET

    function resetSelectValue(i) {
      $$invalidate(3, subtotal[i] = 0, subtotal);
      $$invalidate(4, pack[i] = 0, pack);
    } // --------------------------------------------------------------------
    // 個数の増減


    function setSubtotal(flag, i, n) {
      var m = pack[i];
      $$invalidate(3, subtotal[i] = 0, subtotal); // 小計を初期化

      if (flag === 1) {
        // 商品の限定数
        if (m < n) {
          $$invalidate(4, pack[i] += 1, pack);
        } else {
          snackbar.open();
          snackbar.labelText = "この商品の限定数に達しています";
        }
      }

      if (flag === -1) {
        if (m > 0) $$invalidate(4, pack[i] -= 1, pack);
      }
    } // --------------------------------------------------------------------
    // カートを確認する


    var data_buff = [];

    function openCart(n) {
      data_buff = [];
      var num = 1;

      for (var i = 0; i < len; i++) {
        var buff = {};

        if (pack[i] > 0) {
          buff['id'] = num;
          buff['done'] = true;
          buff['code'] = code[i];
          buff['title'] = name[i];
          buff['price'] = price[i];
          buff['pack'] = pack[i];
          buff['subtotal'] = subtotal[i];
          buff['shipping'] = shipping[i];
          num += 1;
        } // if( buff['pack'] > 0 ){   


        if (pack[i] > 0) {
          data_buff.push(buff);
        }
      }

      $$invalidate(12, _products = data_buff); // 注文データを渡す配列へ格納

      if (data_buff.length === 0) {
        alert("何れの商品にも未だ入力がなされていません");
        return;
      } else {
        $$invalidate(9, newopen = 1);
        dialog.open(); // 注文フォームを開く
      }
    } // --------------------------------------------------------------------
    // 注文を取り止める => データを消去


    function orderCancel() {
      $$invalidate(9, newopen = 0);
      $$invalidate(12, _products = []);
    } // --------------------------------------------------------------------
    // 商品説明の表示


    function dspDescription(n) {
      // 一度他の要素を閉じる
      [].forEach.call(products, function (obj, i) {
        if (i != n) {
          $$invalidate(11, visibleDescription[i] = false, visibleDescription);
        }
      });
      $$invalidate(11, visibleDescription[n] = !visibleDescription[n], visibleDescription);
    }

    var writable_props = [];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Home> was created with unknown prop '".concat(key, "'"));
    });

    function onwindowresize() {
      $$invalidate(0, oW = window_1$1.outerWidth);
    }

    var click_handler = function click_handler(i, max) {
      setSubtotal(1, i, max);
    };

    var click_handler_1 = function click_handler_1(i, max) {
      setSubtotal(-1, i, max);
    };

    var click_handler_2 = function click_handler_2() {
      return openCart();
    };

    var click_handler_3 = function click_handler_3(i) {
      return resetSelectValue(i);
    };

    var click_handler_4 = function click_handler_4(i) {
      return dspDescription(i);
    };

    var click_handler_5 = function click_handler_5(i) {
      return dspDescription(i);
    };

    var click_handler_6 = function click_handler_6() {
      return $$invalidate(1, count += times);
    };

    var click_handler_7 = function click_handler_7() {
      return orderCancel();
    };

    $$self.$capture_state = function () {
      return {
        oW: oW,
        version: version,
        AddCircle: Add_circle,
        ArrowDownward: Arrow_downward,
        Cancel: Cancel,
        CancelPresentation: Cancel_presentation,
        MoreVert: More_vert,
        RemoveCircle: Remove_circle,
        ShoppingCart: Shopping_cart,
        fade: fade,
        fly: fly,
        marked: marked,
        Loading: Loading,
        OrderLists: OrderLists,
        promise: promise,
        dataLength: dataLength,
        getProductsData: getProductsData,
        times: times,
        count: count,
        disable: disable,
        more: more,
        moreColor: moreColor,
        counter: counter,
        newopen: newopen,
        dialog: dialog,
        dialog_width: dialog_width,
        mail: mail,
        order: order,
        visibleDescription: visibleDescription,
        total: total,
        len: len,
        id: id,
        code: code,
        name: name,
        price: price,
        subtotal: subtotal,
        pack: pack,
        max: max,
        shipping: shipping,
        _products: _products,
        btn_reset: btn_reset,
        resetColor: resetColor,
        btn_cart: btn_cart,
        cartColor: cartColor,
        snackbar: snackbar,
        resetSelectValue: resetSelectValue,
        setSubtotal: setSubtotal,
        data_buff: data_buff,
        openCart: openCart,
        calc_tax: calc_tax,
        orderCancel: orderCancel,
        dspDescription: dspDescription,
        $version: $version
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('oW' in $$props) $$invalidate(0, oW = $$props.oW);
      if ('promise' in $$props) $$invalidate(22, promise = $$props.promise);
      if ('dataLength' in $$props) $$invalidate(23, dataLength = $$props.dataLength);
      if ('times' in $$props) $$invalidate(24, times = $$props.times);
      if ('count' in $$props) $$invalidate(1, count = $$props.count);
      if ('disable' in $$props) $$invalidate(6, disable = $$props.disable);
      if ('more' in $$props) $$invalidate(7, more = $$props.more);
      if ('moreColor' in $$props) $$invalidate(8, moreColor = $$props.moreColor);
      if ('newopen' in $$props) $$invalidate(9, newopen = $$props.newopen);
      if ('dialog' in $$props) dialog = $$props.dialog;
      if ('dialog_width' in $$props) $$invalidate(10, dialog_width = $$props.dialog_width);
      if ('mail' in $$props) mail = $$props.mail;
      if ('order' in $$props) $$invalidate(25, order = $$props.order);
      if ('visibleDescription' in $$props) $$invalidate(11, visibleDescription = $$props.visibleDescription);
      if ('total' in $$props) $$invalidate(2, total = $$props.total);
      if ('len' in $$props) $$invalidate(31, len = $$props.len);
      if ('id' in $$props) id = $$props.id;
      if ('code' in $$props) $$invalidate(18, code = $$props.code);
      if ('name' in $$props) $$invalidate(19, name = $$props.name);
      if ('price' in $$props) $$invalidate(5, price = $$props.price);
      if ('subtotal' in $$props) $$invalidate(3, subtotal = $$props.subtotal);
      if ('pack' in $$props) $$invalidate(4, pack = $$props.pack);
      if ('max' in $$props) $$invalidate(20, max = $$props.max);
      if ('shipping' in $$props) $$invalidate(21, shipping = $$props.shipping);
      if ('_products' in $$props) $$invalidate(12, _products = $$props._products);
      if ('btn_reset' in $$props) $$invalidate(13, btn_reset = $$props.btn_reset);
      if ('resetColor' in $$props) $$invalidate(14, resetColor = $$props.resetColor);
      if ('btn_cart' in $$props) $$invalidate(15, btn_cart = $$props.btn_cart);
      if ('cartColor' in $$props) $$invalidate(16, cartColor = $$props.cartColor);
      if ('snackbar' in $$props) snackbar = $$props.snackbar;
      if ('data_buff' in $$props) data_buff = $$props.data_buff;
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    $$self.$$.update = function () {
      if ($$self.$$.dirty[0] &
      /*count, price, pack, total, subtotal, oW*/
      63 | $$self.$$.dirty[1] &
      /*len*/
      1) {
        {
          // ボタン表示の変更
          if (count > dataLength) {
            $$invalidate(6, disable = "disabled");
            $$invalidate(7, more = 'これ以上ありません');
            $$invalidate(8, moreColor = '#9ea7aa');
            $$invalidate(1, count = dataLength);
          }

          $$invalidate(2, total = 0); // 購入額の計算

          for (var j = 0; j < len; j++) {
            $$invalidate(3, subtotal[j] = +(price[j] * pack[j]), subtotal);
            $$invalidate(2, total += subtotal[j]); // RESET BUTTON TOGGLE

            if (pack[j] !== 0) {
              $$invalidate(13, btn_reset[j] = false, btn_reset);
              $$invalidate(14, resetColor[j] = "red", resetColor);
            } else {
              $$invalidate(13, btn_reset[j] = true, btn_reset);
              $$invalidate(14, resetColor[j] = "gray", resetColor);
            } // CART BUTTON   


            if (total > 0) {
              $$invalidate(15, btn_cart = false);
              $$invalidate(16, cartColor = "green");
            } else {
              $$invalidate(15, btn_cart = true);
              $$invalidate(16, cartColor = "gray");
            }
          } // ページ TITLE 表示  


          document.title = user.page_title; // DIALOG 表示の幅調整  

          if (oW <= 420) {
            $$invalidate(10, dialog_width = 650);
          }

          if (oW > 420) {
            $$invalidate(10, dialog_width = 416);
          }
        }
      }
    };

    return [oW, count, total, subtotal, pack, price, disable, more, moreColor, newopen, dialog_width, visibleDescription, _products, btn_reset, resetColor, btn_cart, cartColor, $version, code, name, max, shipping, promise, dataLength, times, order, resetSelectValue, setSubtotal, openCart, orderCancel, dspDescription, len, onwindowresize, click_handler, click_handler_1, click_handler_2, click_handler_3, click_handler_4, click_handler_5, click_handler_6, click_handler_7];
  }

  var Home = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Home, _SvelteComponentDev);

    var _super = _createSuper$7(Home);

    function Home(options) {
      var _this;

      _classCallCheck(this, Home);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$7, create_fragment$7, safe_not_equal, {}, null, [-1, -1]);
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Home",
        options: options,
        id: create_fragment$7.name
      });
      return _this;
    }

    return Home;
  }(SvelteComponentDev);

  function _createSuper$6(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$6(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$6() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$6 = "src/pages/NotFound.svelte";

  function create_fragment$6(ctx) {
    var div2;
    var div1;
    var h1;
    var t1;
    var p0;
    var t3;
    var p1;
    var t5;
    var a;
    var button;
    var div0;
    var t6;
    var span;
    var home;
    var current;
    home = new Home$1({
      props: {
        size: "1.6em",
        color: "#fff"
      },
      $$inline: true
    });
    var block = {
      c: function create() {
        div2 = element("div");
        div1 = element("div");
        h1 = element("h1");
        h1.textContent = "ERROR: 404 not found";
        t1 = space();
        p0 = element("p");
        p0.textContent = "ページは見つかりませんでした。";
        t3 = space();
        p1 = element("p");
        p1.textContent = "準備中の可能性があります。";
        t5 = space();
        a = element("a");
        button = element("button");
        div0 = element("div");
        t6 = space();
        span = element("span");
        create_component(home.$$.fragment);
        attr_dev(h1, "class", "svelte-1r90kcm");
        add_location(h1, file$6, 27, 2, 281);
        add_location(p0, file$6, 28, 3, 314);
        add_location(p1, file$6, 29, 3, 340);
        attr_dev(div0, "class", "mdc-fab__ripple");
        add_location(div0, file$6, 36, 10, 559);
        attr_dev(span, "class", "material-icons");
        add_location(span, file$6, 37, 10, 605);
        attr_dev(button, "class", "mdc-fab");
        attr_dev(button, "aria-label", "Favorite");
        set_style(button, "background-color", "rgba(37,93,0,0.8)");
        attr_dev(button, "title", "More options");
        add_location(button, file$6, 32, 8, 404);
        attr_dev(a, "href", "#/home");
        add_location(a, file$6, 30, 6, 368);
        attr_dev(div1, "class", "main svelte-1r90kcm");
        add_location(div1, file$6, 25, 3, 259);
        attr_dev(div2, "class", "container");
        add_location(div2, file$6, 23, 0, 231);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, div2, anchor);
        append_dev(div2, div1);
        append_dev(div1, h1);
        append_dev(div1, t1);
        append_dev(div1, p0);
        append_dev(div1, t3);
        append_dev(div1, p1);
        append_dev(div1, t5);
        append_dev(div1, a);
        append_dev(a, button);
        append_dev(button, div0);
        append_dev(button, t6);
        append_dev(button, span);
        mount_component(home, span, null);
        current = true;
      },
      p: noop,
      i: function intro(local) {
        if (current) return;
        transition_in(home.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        transition_out(home.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div2);
        destroy_component(home);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$6.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$6($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('NotFound', slots, []);
    var writable_props = [];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<NotFound> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$capture_state = function () {
      return {
        Home: Home$1
      };
    };

    return [];
  }

  var NotFound = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(NotFound, _SvelteComponentDev);

    var _super = _createSuper$6(NotFound);

    function NotFound(options) {
      var _this;

      _classCallCheck(this, NotFound);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$6, create_fragment$6, safe_not_equal, {});
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "NotFound",
        options: options,
        id: create_fragment$6.name
      });
      return _this;
    }

    return NotFound;
  }(SvelteComponentDev);

  function _createSuper$5(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$5(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$5() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$5 = "src/pages/Settings.svelte";

  function create_fragment$5(ctx) {
    var div8;
    var h1;
    var t1;
    var ul0;
    var li0;
    var t3;
    var li1;
    var t5;
    var li2;
    var t7;
    var h20;
    var t9;
    var ul1;
    var li3;
    var t11;
    var li4;
    var t12;
    var strong0;
    var t14;
    var t15;
    var li5;
    var t17;
    var li6;
    var t19;
    var div0;
    var t20;
    var folderopen;
    var br0;
    var t21;
    var folder0;
    var t22;
    var br1;
    var t23;
    var settings0;
    var t24;
    var br2;
    var t25;
    var folder1;
    var t26;
    var strong1;
    var t28;
    var br3;
    var t29;
    var br4;
    var t30;
    var br5;
    var t31;
    var br6;
    var t32;
    var folder2;
    var t33;
    var strong2;
    var t35;
    var br7;
    var t36;
    var br8;
    var t37;
    var br9;
    var t38;
    var br10;
    var t39;
    var br11;
    var t40;
    var folder3;
    var t41;
    var br12;
    var t42;
    var settings1;
    var t43;
    var br13;
    var t44;
    var strong3;
    var br14;
    var t46;
    var strong4;
    var br15;
    var t48;
    var settings2;
    var br16;
    var t49;
    var settings3;
    var br17;
    var t50;
    var strong5;
    var br18;
    var t52;
    var strong6;
    var br19;
    var t54;
    var settings4;
    var t55;
    var br20;
    var t56;
    var t57;
    var ul2;
    var li7;
    var settings5;
    var t58;
    var t59;
    var li8;
    var t60;
    var br21;
    var t61;
    var t62;
    var h21;
    var t64;
    var h30;
    var t66;
    var ul3;
    var li9;
    var t68;
    var div1;
    var t69;
    var folder4;
    var t70;
    var br22;
    var t71;
    var strong7;
    var t73;
    var br23;
    var t74;
    var strong8;
    var t76;
    var br24;
    var t77;
    var strong9;
    var t79;
    var br25;
    var t80;
    var t81;
    var br26;
    var t82;
    var strong10;
    var br27;
    var t84;
    var div2;
    var strong11;
    var br28;
    var t86;
    var br29;
    var t87;
    var br30;
    var t88;
    var br31;
    var t89;
    var br32;
    var t90;
    var br33;
    var t91;
    var br34;
    var t92;
    var br35;
    var t93;
    var br36;
    var t94;
    var br37;
    var t95;
    var br38;
    var t96;
    var br39;
    var t97;
    var strong12;
    var br40;
    var t99;
    var br41;
    var t100;
    var br42;
    var t101;
    var br43;
    var t102;
    var br44;
    var t103;
    var br45;
    var t104;
    var br46;
    var t105;
    var br47;
    var t106;
    var strong13;
    var br48;
    var t108;
    var br49;
    var t109;
    var br50;
    var t110;
    var br51;
    var t111;
    var br52;
    var t112;
    var br53;
    var t113;
    var br54;
    var t114;
    var br55;
    var t115;
    var br56;
    var t116;
    var br57;
    var t117;
    var br58;
    var t118;
    var br59;
    var t119;
    var strong14;
    var br60;
    var t121;
    var br61;
    var t122;
    var br62;
    var t123;
    var br63;
    var t124;
    var br64;
    var t125;
    var br65;
    var t126;
    var br66;
    var t127;
    var br67;
    var t128;
    var br68;
    var t129;
    var br69;
    var t130;
    var br70;
    var t131;
    var br71;
    var t132;
    var br72;
    var t133;
    var br73;
    var t134;
    var br74;
    var t135;
    var br75;
    var t136;
    var strong15;
    var br76;
    var t138;
    var br77;
    var t139;
    var br78;
    var t140;
    var br79;
    var t141;
    var br80;
    var t142;
    var br81;
    var t143;
    var br82;
    var t144;
    var br83;
    var t145;
    var br84;
    var t146;
    var br85;
    var t147;
    var br86;
    var t148;
    var br87;
    var t149;
    var br88;
    var t150;
    var br89;
    var t151;
    var br90;
    var t152;
    var br91;
    var t153;
    var br92;
    var t154;
    var br93;
    var t155;
    var strong16;
    var br94;
    var t157;
    var br95;
    var t158;
    var br96;
    var t159;
    var br97;
    var t160;
    var br98;
    var t161;
    var br99;
    var t162;
    var br100;
    var t163;
    var br101;
    var t164;
    var br102;
    var t165;
    var strong17;
    var br103;
    var t167;
    var br104;
    var t168;
    var br105;
    var t169;
    var br106;
    var t170;
    var br107;
    var t171;
    var br108;
    var t172;
    var br109;
    var t173;
    var br110;
    var t174;
    var br111;
    var t175;
    var br112;
    var t176;
    var br113;
    var t177;
    var br114;
    var t178;
    var strong18;
    var t180;
    var br115;
    var t181;
    var br116;
    var t182;
    var br117;
    var t183;
    var br118;
    var t184;
    var br119;
    var t185;
    var br120;
    var t186;
    var br121;
    var t187;
    var br122;
    var t188;
    var strong19;
    var t190;
    var br123;
    var t191;
    var br124;
    var t192;
    var br125;
    var t193;
    var br126;
    var t194;
    var br127;
    var t195;
    var br128;
    var t196;
    var br129;
    var t197;
    var br130;
    var t198;
    var br131;
    var t199;
    var br132;
    var t200;
    var br133;
    var t201;
    var br134;
    var t202;
    var br135;
    var t203;
    var br136;
    var t204;
    var br137;
    var t205;
    var br138;
    var t206;
    var strong20;
    var t208;
    var br139;
    var t209;
    var br140;
    var t210;
    var br141;
    var t211;
    var br142;
    var t212;
    var br143;
    var t213;
    var strong21;
    var t215;
    var br144;
    var t216;
    var br145;
    var t217;
    var br146;
    var t218;
    var br147;
    var t219;
    var br148;
    var t220;
    var br149;
    var t221;
    var strong22;
    var t223;
    var br150;
    var t224;
    var br151;
    var t225;
    var br152;
    var t226;
    var br153;
    var t227;
    var br154;
    var t228;
    var br155;
    var t229;
    var br156;
    var t230;
    var br157;
    var t231;
    var br158;
    var t232;
    var br159;
    var t233;
    var br160;
    var t234;
    var br161;
    var t235;
    var br162;
    var t236;
    var br163;
    var t237;
    var br164;
    var t238;
    var br165;
    var t239;
    var br166;
    var t240;
    var br167;
    var t241;
    var br168;
    var t242;
    var br169;
    var t243;
    var br170;
    var t244;
    var br171;
    var t245;
    var br172;
    var t246;
    var br173;
    var t247;
    var strong23;
    var br174;
    var t249;
    var br175;
    var t250;
    var br176;
    var t251;
    var br177;
    var t252;
    var br178;
    var t253;
    var br179;
    var t254;
    var br180;
    var t255;
    var br181;
    var t256;
    var br182;
    var t257;
    var br183;
    var t258;
    var br184;
    var t259;
    var br185;
    var t260;
    var br186;
    var t261;
    var br187;
    var t262;
    var br188;
    var t263;
    var br189;
    var t264;
    var br190;
    var t265;
    var br191;
    var t266;
    var br192;
    var t267;
    var br193;
    var t268;
    var br194;
    var t269;
    var br195;
    var t270;
    var br196;
    var t271;
    var br197;
    var t272;
    var br198;
    var t273;
    var br199;
    var t274;
    var br200;
    var t275;
    var strong24;
    var t277;
    var br201;
    var t278;
    var br202;
    var t279;
    var br203;
    var t280;
    var br204;
    var t281;
    var br205;
    var t282;
    var br206;
    var t283;
    var br207;
    var t284;
    var br208;
    var t285;
    var br209;
    var t286;
    var br210;
    var t287;
    var t288;
    var br211;
    var t289;
    var strong25;
    var br212;
    var t291;
    var br213;
    var t292;
    var strong26;
    var br214;
    var t294;
    var ul4;
    var li10;
    var t296;
    var li11;
    var t297;
    var br215;
    var t298;
    var t299;
    var div3;
    var t300;
    var br216;
    var t301;
    var br217;
    var t302;
    var t303;
    var br218;
    var t304;
    var strong27;
    var br219;
    var t306;
    var ul5;
    var li12;
    var t308;
    var li13;
    var t310;
    var li14;
    var t311;
    var br220;
    var t312;
    var a0;
    var openinnew0;
    var t313;
    var div4;
    var table0;
    var tr0;
    var td0;
    var t315;
    var td1;
    var t317;
    var tr1;
    var td2;
    var t319;
    var td3;
    var t321;
    var tr2;
    var td4;
    var t323;
    var td5;
    var t325;
    var tr3;
    var td6;
    var t327;
    var td7;
    var t329;
    var tr4;
    var td8;
    var t331;
    var td9;
    var t333;
    var tr5;
    var td10;
    var t335;
    var td11;
    var t337;
    var tr6;
    var td12;
    var t339;
    var td13;
    var t341;
    var tr7;
    var td14;
    var t343;
    var td15;
    var t345;
    var t346;
    var br221;
    var t347;
    var strong28;
    var br222;
    var t349;
    var ul6;
    var li15;
    var t351;
    var li16;
    var t353;
    var li17;
    var t354;
    var code0;
    var t356;
    var code1;
    var t358;
    var t359;
    var li18;
    var t360;
    var code2;
    var t362;
    var br223;
    var t363;
    var code3;
    var t365;
    var code4;
    var t367;
    var t368;
    var li19;
    var t369;
    var code5;
    var t371;
    var t372;
    var li20;
    var t373;
    var code6;
    var t375;
    var code7;
    var t377;
    var t378;
    var li21;
    var t379;
    var a1;
    var t381;
    var t382;
    var div5;
    var table2;
    var tr8;
    var td16;
    var td17;
    var t384;
    var tr9;
    var td18;
    var td19;
    var t387;
    var tr10;
    var td20;
    var td21;
    var t390;
    var tr11;
    var td22;
    var td23;
    var t393;
    var tr12;
    var td24;
    var td25;
    var t396;
    var tr13;
    var td26;
    var td27;
    var t399;
    var tr14;
    var td28;
    var td29;
    var t402;
    var tr15;
    var td30;
    var td31;
    var t405;
    var tr16;
    var td32;
    var td33;
    var t408;
    var tr17;
    var td34;
    var td35;
    var t411;
    var tr18;
    var td36;
    var td37;
    var t414;
    var tr19;
    var td38;
    var td39;
    var t417;
    var tr21;
    var td42;
    var t418;
    var br224;
    var t419;
    var table1;
    var tr20;
    var td40;
    var t420;
    var br225;
    var t421;
    var br226;
    var t422;
    var br227;
    var t423;
    var br228;
    var t424;
    var br229;
    var t425;
    var br230;
    var t426;
    var br231;
    var t427;
    var br232;
    var t428;
    var td41;
    var span0;
    var br233;
    var t430;
    var span1;
    var br234;
    var t432;
    var span2;
    var br235;
    var t434;
    var span3;
    var br236;
    var t436;
    var span4;
    var br237;
    var t438;
    var span5;
    var br238;
    var t440;
    var span6;
    var br239;
    var t442;
    var span7;
    var t444;
    var br240;
    var t445;
    var td43;
    var t446;
    var br241;
    var t447;
    var br242;
    var t448;
    var br243;
    var t449;
    var code8;
    var t451;
    var br244;
    var t452;
    var a2;
    var t453;
    var openinnew1;
    var t454;
    var tr22;
    var td44;
    var t456;
    var td45;
    var t457;
    var br245;
    var t458;
    var a3;
    var t460;
    var t461;
    var tr23;
    var td46;
    var t463;
    var td47;
    var t464;
    var t465;
    var br246;
    var t466;
    var h22;
    var t468;
    var ul7;
    var li22;
    var t469;
    var code9;
    var t471;
    var code10;
    var t473;
    var code11;
    var t475;
    var t476;
    var li23;
    var t477;
    var code12;
    var t479;
    var code13;
    var t481;
    var t482;
    var li24;
    var t484;
    var h31;
    var t486;
    var ul8;
    var li25;
    var t487;
    var code14;
    var t489;
    var code15;
    var t491;
    var t492;
    var li26;
    var t494;
    var li27;
    var t496;
    var li28;
    var t497;
    var code16;
    var t499;
    var br247;
    var t500;
    var div6;
    var t501;
    var br248;
    var t502;
    var t503;
    var li29;
    var t505;
    var h4;
    var t507;
    var div7;
    var t508;
    var a4;
    var openinnew2;
    var t509;
    var br249;
    var t510;
    var a5;
    var openinnew3;
    var t511;
    var br250;
    var t512;
    var t513;
    var h32;
    var t515;
    var ul9;
    var li30;
    var t517;
    var li31;
    var t519;
    var li32;
    var t521;
    var li33;
    var t523;
    var h33;
    var t525;
    var ul10;
    var li34;
    var t526;
    var code17;
    var t528;
    var code18;
    var t530;
    var code19;
    var t532;
    var t533;
    var h34;
    var t535;
    var ul11;
    var li35;
    var t537;
    var li36;
    var t539;
    var li37;
    var t540;
    var a6;
    var t542;
    var t543;
    var br251;
    var t544;
    var br252;
    var current;
    folderopen = new Folder_open({
      props: {
        color: "#000",
        size: "2em"
      },
      $$inline: true
    });
    folder0 = new Folder({
      props: {
        color: "#000",
        size: "1em"
      },
      $$inline: true
    });
    settings0 = new Settings({
      props: {
        color: "red",
        size: "0.6em"
      },
      $$inline: true
    });
    folder1 = new Folder({
      props: {
        color: "#000",
        size: "1em"
      },
      $$inline: true
    });
    folder2 = new Folder({
      props: {
        color: "#000",
        size: "1em"
      },
      $$inline: true
    });
    folder3 = new Folder({
      props: {
        color: "#000",
        size: "1em"
      },
      $$inline: true
    });
    settings1 = new Settings({
      props: {
        color: "red",
        size: "0.6em"
      },
      $$inline: true
    });
    settings2 = new Settings({
      props: {
        color: "red",
        size: "0.6em"
      },
      $$inline: true
    });
    settings3 = new Settings({
      props: {
        color: "red",
        size: "0.6em"
      },
      $$inline: true
    });
    settings4 = new Settings({
      props: {
        color: "red",
        size: "0.6em"
      },
      $$inline: true
    });
    settings5 = new Settings({
      props: {
        color: "red",
        size: "0.6em"
      },
      $$inline: true
    });
    folder4 = new Folder({
      props: {
        color: "#000",
        size: "1em"
      },
      $$inline: true
    });
    openinnew0 = new Open_in_new({
      props: {
        color: "green",
        size: "1.2em"
      },
      $$inline: true
    });
    openinnew1 = new Open_in_new({
      props: {
        color: "green",
        size: "1.2em"
      },
      $$inline: true
    });
    openinnew2 = new Open_in_new({
      props: {
        color: "green",
        size: "1.2em"
      },
      $$inline: true
    });
    openinnew3 = new Open_in_new({
      props: {
        color: "green",
        size: "1.2em"
      },
      $$inline: true
    });
    var block = {
      c: function create() {
        div8 = element("div");
        h1 = element("h1");
        h1.textContent = "基本設定";
        t1 = space();
        ul0 = element("ul");
        li0 = element("li");
        li0.textContent = "以下の手順に従い借りているサーバーに設置して下さい。";
        t3 = space();
        li1 = element("li");
        li1.textContent = "初期値では利用出来るものは全て表示されています。";
        t5 = space();
        li2 = element("li");
        li2.textContent = "先ず運営者情報を変更後テストをし、必要の無いものを非表示として下さい。";
        t7 = space();
        h20 = element("h2");
        h20.textContent = "(1) システム内容";
        t9 = space();
        ul1 = element("ul");
        li3 = element("li");
        li3.textContent = "解凍したフォルダの構成内容は以下となっています。";
        t11 = space();
        li4 = element("li");
        t12 = text("サーバーへこの構成のまま");
        strong0 = element("strong");
        strong0.textContent = "太字のフォルダとファイル";
        t14 = text("をアップします。");
        t15 = space();
        li5 = element("li");
        li5.textContent = "設定ファイルの編集後にローカルで随時確認出来ます。";
        t17 = space();
        li6 = element("li");
        li6.textContent = "使用画像はサンプルですので、全てを置き換えて下さい。";
        t19 = space();
        div0 = element("div");
        t20 = text(" ");
        create_component(folderopen.$$.fragment);
        br0 = element("br");
        t21 = text("\n　├ ");
        create_component(folder0.$$.fragment);
        t22 = text(" css    // CSSフォルダ");
        br1 = element("br");
        t23 = text("\n　│ └material-components-web.min.css ");
        create_component(settings0.$$.fragment);
        t24 = text("  ");
        br2 = element("br");
        t25 = text("\n　├ ");
        create_component(folder1.$$.fragment);
        t26 = text(" ");
        strong1 = element("strong");
        strong1.textContent = "data";
        t28 = text("    // 設定データフォルダ");
        br3 = element("br");
        t29 = text("\n　│ ├init.js");
        br4 = element("br");
        t30 = text("\n　│ ├products.js");
        br5 = element("br");
        t31 = text("\n　│ └user-pages.js");
        br6 = element("br");
        t32 = text("\n　├ ");
        create_component(folder2.$$.fragment);
        t33 = text(" ");
        strong2 = element("strong");
        strong2.textContent = "images";
        t35 = text("    // 画像フォルダ");
        br7 = element("br");
        t36 = text("\n　│ ├logo.jpg");
        br8 = element("br");
        t37 = text("\n　│ ├sample01.jpg");
        br9 = element("br");
        t38 = text("\n　│ ├　　:");
        br10 = element("br");
        t39 = text("\n　│ └sample08.jpg");
        br11 = element("br");
        t40 = text("\n　├ ");
        create_component(folder3.$$.fragment);
        t41 = text(" js    // JAVASCRIPTフォルダ");
        br12 = element("br");
        t42 = text("\n　│ └material-components-web.min.js ");
        create_component(settings1.$$.fragment);
        t43 = text("  ");
        br13 = element("br");
        t44 = text("\n　├");
        strong3 = element("strong");
        strong3.textContent = "bundle.css";
        br14 = element("br");
        t46 = text("\n　├");
        strong4 = element("strong");
        strong4.textContent = "bundle.js";
        br15 = element("br");
        t48 = text("\n　├bundle-admin.css ");
        create_component(settings2.$$.fragment);
        br16 = element("br");
        t49 = text("\n　├bundle-admin.js ");
        create_component(settings3.$$.fragment);
        br17 = element("br");
        t50 = text("\n　├");
        strong5 = element("strong");
        strong5.textContent = "grobal.css";
        br18 = element("br");
        t52 = text("\n　├");
        strong6 = element("strong");
        strong6.textContent = "index.html";
        br19 = element("br");
        t54 = text("\n　└index-admin.html ");
        create_component(settings4.$$.fragment);
        t55 = space();
        br20 = element("br");
        t56 = space();
        t57 = space();
        ul2 = element("ul");
        li7 = element("li");
        create_component(settings5.$$.fragment);
        t58 = text(" は、管理・ローカルテスト用です。サーバーへのアップロードは必要ありません。");
        t59 = space();
        li8 = element("li");
        t60 = text("material-components-web の css 及び js ファイルは、サーバ実行時 WEB 上からダウンロードされますのでローカルテストのみに必要です。");
        br21 = element("br");
        t61 = text("\n  バージョンは 9.0.0 です。最新のものを必要な場合はダウンロードすることも可能です（(4) ローカルテスト参照）。");
        t62 = space();
        h21 = element("h2");
        h21.textContent = "(2) 設定ファイルの編集";
        t64 = space();
        h30 = element("h3");
        h30.textContent = " 【ユーザー情報の入力】";
        t66 = space();
        ul3 = element("ul");
        li9 = element("li");
        li9.textContent = "管理用設定ファイルは以下の3つとなります。";
        t68 = space();
        div1 = element("div");
        t69 = text("─");
        create_component(folder4.$$.fragment);
        t70 = text(" data");
        br22 = element("br");
        t71 = text("\n    ├─ ");
        strong7 = element("strong");
        strong7.textContent = "init.js";
        t73 = text("　　　    設定ファイル");
        br23 = element("br");
        t74 = text("\n    ├─ ");
        strong8 = element("strong");
        strong8.textContent = "products.js";
        t76 = text("　  販売物データファイル");
        br24 = element("br");
        t77 = text("\n    └─ ");
        strong9 = element("strong");
        strong9.textContent = "user-pages.js";
        t79 = text("  ページ追加用データファイル");
        br25 = element("br");
        t80 = space();
        t81 = space();
        br26 = element("br");
        t82 = text("\n\n・ ");
        strong10 = element("strong");
        strong10.textContent = "init.js";
        br27 = element("br");
        t84 = space();
        div2 = element("div");
        strong11 = element("strong");
        strong11.textContent = "// 運営者情報";
        br28 = element("br");
        t86 = text("\n// 販売者の基本情報を記述します。");
        br29 = element("br");
        t87 = text("\nconst user = {");
        br30 = element("br");
        t88 = text("\n　page_title: \"ホームページタイトル\", // ブラウザトップやタブに表示");
        br31 = element("br");
        t89 = text("\n　shop    : \"ショップ名\",　// トップバーに表示");
        br32 = element("br");
        t90 = text("\n　admin   : \"運営者氏名\",");
        br33 = element("br");
        t91 = text("\n　postage : '郵便番号', ");
        br34 = element("br");
        t92 = text("\n　address : '所在地住所', ");
        br35 = element("br");
        t93 = text("\n　email   : 'メイルアドレス',");
        br36 = element("br");
        t94 = text("\n　tell    : '電話番号'");
        br37 = element("br");
        t95 = text("\n};");
        br38 = element("br");
        t96 = space();
        br39 = element("br");
        t97 = space();
        strong12 = element("strong");
        strong12.textContent = "// 各種基本設定";
        br40 = element("br");
        t99 = text("\nconst setting = {");
        br41 = element("br");
        t100 = text("\n　top_image : \"logo.jpg\", // メインページ・トップ画像　600x140");
        br42 = element("br");
        t101 = text("\n　// 商品画像下のタイトル背景色");
        br43 = element("br");
        t102 = text("\n　// 変更例： background-color:[背景色];color:[文字色];");
        br44 = element("br");
        t103 = text("\n　title_back: \"background-color:#6a0080;color:#ffffff;\"");
        br45 = element("br");
        t104 = text("\n};");
        br46 = element("br");
        t105 = space();
        br47 = element("br");
        t106 = space();
        strong13 = element("strong");
        strong13.textContent = "// MAIN ページ・トップ挿入テキスト";
        br48 = element("br");
        t108 = text("\n// 編集可(表示場所は M数字 で確認出来ます)");
        br49 = element("br");
        t109 = text("\n// 必要の無い場合は空白として下さい");
        br50 = element("br");
        t110 = text("\nconst message = {");
        br51 = element("br");
        t111 = text("\n　msg1: \"M1:ショッピング・カート\",");
        br52 = element("br");
        t112 = text("\n　msg2: \"M2:\",");
        br53 = element("br");
        t113 = text("\n　msg3: \"M3:\",");
        br54 = element("br");
        t114 = text("\n　msg4: \"M4:\",");
        br55 = element("br");
        t115 = text("\n　msg5: \"M5:\",");
        br56 = element("br");
        t116 = text("\n　msg6: \"M6:\"");
        br57 = element("br");
        t117 = text("\n};");
        br58 = element("br");
        t118 = space();
        br59 = element("br");
        t119 = space();
        strong14 = element("strong");
        strong14.textContent = "// 注文メール設定";
        br60 = element("br");
        t121 = text("\nconst order_mail = {");
        br61 = element("br");
        t122 = text("\n　subject : \"【商品注文】● テスト\",                // メール件名");
        br62 = element("br");
        t123 = text("\n　title   : \"【商品注文】\",                       // 本文タイトル");
        br63 = element("br");
        t124 = text("\n　email   : '****@****.***',                   // 返信宛先メールアドレス");
        br64 = element("br");
        t125 = text("\n　message : `【伝言・意見・要望欄】＊自由にお書き下さい。`, // 追加項目");
        br65 = element("br");
        t126 = space();
        br66 = element("br");
        t127 = text("\n　// 挿入テキスト ");
        br67 = element("br");
        t128 = text("\n　//  「注文メイルの編集」を使用すると改行は自動に挿入されます。");
        br68 = element("br");
        t129 = text("\n　//  必要の無い場合は、行を削除か空（``）として下さい");
        br69 = element("br");
        t130 = text(" \n　//  直接編集の場合、改行には '%0D%0A' を挿入します。");
        br70 = element("br");
        t131 = text("\n　template1: \"[挿入テキスト１]\",");
        br71 = element("br");
        t132 = text("\n　template2: \"[挿入テキスト２]\",");
        br72 = element("br");
        t133 = text("\n　template3: \"[挿入テキスト３]\"");
        br73 = element("br");
        t134 = text("\n};");
        br74 = element("br");
        t135 = space();
        br75 = element("br");
        t136 = space();
        strong15 = element("strong");
        strong15.textContent = "// SNS リンク";
        br76 = element("br");
        t138 = text("\n// 活用している SNS サービスを公表する場合に記述します。");
        br77 = element("br");
        t139 = text("\n// ここに無いものについては各自アイコン画像を用意して下さい。");
        br78 = element("br");
        t140 = text("\n// メインページのフッタ部分に表示されます。");
        br79 = element("br");
        t141 = text("\nconst sns = [");
        br80 = element("br");
        t142 = text("\n　{");
        br81 = element("br");
        t143 = text("\n　　name :\"twitter\",");
        br82 = element("br");
        t144 = text("\n　　url  :\"https://twitter.com/＊＊＊＊\",");
        br83 = element("br");
        t145 = text("\n　　image:\"twitter_icon.png\"");
        br84 = element("br");
        t146 = text("\n　};,");
        br85 = element("br");
        t147 = text("\n　[　略　]");
        br86 = element("br");
        t148 = text("\n　{");
        br87 = element("br");
        t149 = text("\n　　name :\"twitcast\",");
        br88 = element("br");
        t150 = text("\n　　url  :\"https://twitcasting.tv/＊＊＊＊\",");
        br89 = element("br");
        t151 = text("\n　　image:\"twitcast_icon.png\"");
        br90 = element("br");
        t152 = text("\n　};");
        br91 = element("br");
        t153 = text("\n];");
        br92 = element("br");
        t154 = space();
        br93 = element("br");
        t155 = space();
        strong16 = element("strong");
        strong16.textContent = "// 決済方法";
        br94 = element("br");
        t157 = text("\n// 注文メイルへの表示を設定します。");
        br95 = element("br");
        t158 = text("\n// 自由に追加出来ます。");
        br96 = element("br");
        t159 = text("\nlet transfers = [");
        br97 = element("br");
        t160 = text("\n　'銀行振込',");
        br98 = element("br");
        t161 = text("\n　'郵便振込',");
        br99 = element("br");
        t162 = text("\n　'その他'");
        br100 = element("br");
        t163 = text("\n];");
        br101 = element("br");
        t164 = space();
        br102 = element("br");
        t165 = space();
        strong17 = element("strong");
        strong17.textContent = "// 注文フォーム";
        br103 = element("br");
        t167 = text("\n// 自由に追加出来ます");
        br104 = element("br");
        t168 = text("\n// 購入者情報入力項目の設定内容をカスタマイズ出来ます。");
        br105 = element("br");
        t169 = text("\n// width:入力欄の幅");
        br106 = element("br");
        t170 = text("\n// required:必須項目に設定する場合 - 任意：0　必須： 1");
        br107 = element("br");
        t171 = text("\n// helper：入力時下部に表示されます。");
        br108 = element("br");
        t172 = text(" \nlet orderer = [");
        br109 = element("br");
        t173 = text("\n　{");
        br110 = element("br");
        t174 = text("\n　　item:'注文者氏名',");
        br111 = element("br");
        t175 = text("\n　　width:'200',");
        br112 = element("br");
        t176 = text("\n　　holder:'野菜華子(宛名)',");
        br113 = element("br");
        t177 = text("\n　　required:1,");
        br114 = element("br");
        t178 = text("\n　　helper:'注文者と受取人が異なる場合は");
        strong18 = element("strong");
        strong18.textContent = "受取人名";
        t180 = text("を記入して下さい',");
        br115 = element("br");
        t181 = text("\n　　color:'red' // helper で表示される文字色");
        br116 = element("br");
        t182 = text("\n　},");
        br117 = element("br");
        t183 = text("\n　{");
        br118 = element("br");
        t184 = text("\n　　item:'届け先住所',");
        br119 = element("br");
        t185 = text("\n　　width:'300',");
        br120 = element("br");
        t186 = text("\n　　holder:'送付先住所を入力して下さい',");
        br121 = element("br");
        t187 = text("\n　　required:1,");
        br122 = element("br");
        t188 = text("\n　　helper:'注文者と受取人が異なる場合は");
        strong19 = element("strong");
        strong19.textContent = "受取人住所";
        t190 = text("を記入して下さい',");
        br123 = element("br");
        t191 = text("\n　　color:'red'");
        br124 = element("br");
        t192 = text("\n　},");
        br125 = element("br");
        t193 = text("\n　{");
        br126 = element("br");
        t194 = text("\n　　item:'郵便番号',");
        br127 = element("br");
        t195 = text("\n　　width:'150',");
        br128 = element("br");
        t196 = text("\n　　holder:'000-0000',");
        br129 = element("br");
        t197 = text("\n　　required:0,");
        br130 = element("br");
        t198 = text("\n　　helper:'正しく配送するためなるべく記入を願います',");
        br131 = element("br");
        t199 = text("\n　　color:'gray'");
        br132 = element("br");
        t200 = text("\n　},");
        br133 = element("br");
        t201 = text("\n　{");
        br134 = element("br");
        t202 = text("\n　　item:'連絡先電話番号',");
        br135 = element("br");
        t203 = text("\n　　width:'180',");
        br136 = element("br");
        t204 = text("\n　　holder:'000-0000-0000',");
        br137 = element("br");
        t205 = text("\n　　required:0,");
        br138 = element("br");
        t206 = text("\n　　helper:'注文者と受取人が異なる場合は");
        strong20 = element("strong");
        strong20.textContent = "受取人連絡先";
        t208 = text("を記入して下さい(必須ではありません)',");
        br139 = element("br");
        t209 = text("\n　　color:'gray'");
        br140 = element("br");
        t210 = text("\n　}");
        br141 = element("br");
        t211 = text("\n];");
        br142 = element("br");
        t212 = space();
        br143 = element("br");
        t213 = space();
        strong21 = element("strong");
        strong21.textContent = "// ショップ情報表示";
        t215 = text(":フッタ部");
        br144 = element("br");
        t216 = text("\n\tconst footer = {");
        br145 = element("br");
        t217 = text("\n\n      info  : 1,  // メインページに表示しない： 0(デフォルト)　表示する： 1");
        br146 = element("br");
        t218 = text("\n      image : 'footer_image.jpg' // ショップ画像（imgフォルダ内に保存）");
        br147 = element("br");
        t219 = text("\n\n\t};");
        br148 = element("br");
        t220 = space();
        br149 = element("br");
        t221 = space();
        strong22 = element("strong");
        strong22.textContent = "// QRコード決済-振込方法の表示";
        t223 = text(":フッタ部");
        br150 = element("br");
        t224 = text("\n// QRコード決済表示の場合。\n// QRコード画像を用意します。");
        br151 = element("br");
        t225 = text("\n// 自由に追加出来ます。");
        br152 = element("br");
        t226 = text("\nconst payment = [");
        br153 = element("br");
        t227 = text("\n　{");
        br154 = element("br");
        t228 = text("\n　　name  :\"銀行振込\",");
        br155 = element("br");
        t229 = text("\n　　number:\"1234-5678\",");
        br156 = element("br");
        t230 = text("\n　　url   :\"\",");
        br157 = element("br");
        t231 = text("\n　　image:\"\"");
        br158 = element("br");
        t232 = text("\n　},");
        br159 = element("br");
        t233 = text("\n　{");
        br160 = element("br");
        t234 = text("\n　　name  :\"郵便振込\",");
        br161 = element("br");
        t235 = text("\n　　number:\"5678-1234\",");
        br162 = element("br");
        t236 = text("\n　　url   :\"\",");
        br163 = element("br");
        t237 = text("\n　　image :\"\"");
        br164 = element("br");
        t238 = text("\n　},");
        br165 = element("br");
        t239 = text("\n　{");
        br166 = element("br");
        t240 = text("\n　　name :\"paypay\",");
        br167 = element("br");
        t241 = text("\n　　number:\"\",");
        br168 = element("br");
        t242 = text("\n　　url  :\"https://twitter.com/aisaika_daihyou\",");
        br169 = element("br");
        t243 = text("\n　　image:\"paypay_icon.png\"");
        br170 = element("br");
        t244 = text("\n　}");
        br171 = element("br");
        t245 = text("\n];");
        br172 = element("br");
        t246 = space();
        br173 = element("br");
        t247 = space();
        strong23 = element("strong");
        strong23.textContent = "// QR コード表示";
        br174 = element("br");
        t249 = text("\n// 表示は、QRコード決済に連動します。");
        br175 = element("br");
        t250 = text("\n// QR コード画像は images フォルダ内に保存します。\n// 設定値：表示しない： 0(デフォルト)　表示する： 1");
        br176 = element("br");
        t251 = text("\n// 決済方法は追加出来ます");
        br177 = element("br");
        t252 = text("\nconst qr = [");
        br178 = element("br");
        t253 = text("\n   {");
        br179 = element("br");
        t254 = text("\n      code  : 1,");
        br180 = element("br");
        t255 = text("\n      title : 'QRコード決済', ");
        br181 = element("br");
        t256 = text("\n      name  : 'PayPay',     // 決済名");
        br182 = element("br");
        t257 = text("\n      image : 'qr-code.png'");
        br183 = element("br");
        t258 = text("\n\t};,");
        br184 = element("br");
        t259 = space();
        br185 = element("br");
        t260 = text("\n   {");
        br186 = element("br");
        t261 = text("\n      code  : 1,");
        br187 = element("br");
        t262 = text("\n      title : '電子マネー決済', ");
        br188 = element("br");
        t263 = text("\n      name  : 'PayPay',     // 決済名");
        br189 = element("br");
        t264 = text("\n      image : 'qr-code.png' // QR コード画像（imgフォルダ内に保存）");
        br190 = element("br");
        t265 = text("\n\t};,");
        br191 = element("br");
        t266 = text("\n   {");
        br192 = element("br");
        t267 = text("\n      code  : 1,            // 表示しない： 0(デフォルト)　表示する： 1");
        br193 = element("br");
        t268 = text("\n      title : 'クレジットカード決済', ");
        br194 = element("br");
        t269 = text("\n      name  : '',     // 決済名");
        br195 = element("br");
        t270 = text("\n      image : 'qr-code.png' // QR コード画像（imgフォルダ内に保存）");
        br196 = element("br");
        t271 = text("\n\t};");
        br197 = element("br");
        t272 = space();
        br198 = element("br");
        t273 = text("\n];");
        br199 = element("br");
        t274 = space();
        br200 = element("br");
        t275 = space();
        strong24 = element("strong");
        strong24.textContent = "// Googleマップ表示";
        t277 = text(":フッタ部");
        br201 = element("br");
        t278 = text("\n// geocode(地点情報) は Googleマップからも取得出来ます。");
        br202 = element("br");
        t279 = text("\n\tconst map = {");
        br203 = element("br");
        t280 = text("\n\n      map     : 1,  // 表示しない： 0(デフォルト)　表示する： 1");
        br204 = element("br");
        t281 = text("\n      zoom    : 13, // 設定レベル 1-20 - [13] は 1：20000 です");
        br205 = element("br");
        t282 = text("\n      geocode : '34.932443,133.280715', ");
        br206 = element("br");
        t283 = text("\n      name    : '愛菜香', ");
        br207 = element("br");
        t284 = text("\n      width   : 100,// 幅長さ ");
        br208 = element("br");
        t285 = text("\n      height  : 278 // 縦長さ  ");
        br209 = element("br");
        t286 = text("\n\n\t};");
        br210 = element("br");
        t287 = space();
        t288 = space();
        br211 = element("br");
        t289 = text("\n\n・ ");
        strong25 = element("strong");
        strong25.textContent = "products.js";
        br212 = element("br");
        t291 = space();
        br213 = element("br");
        t292 = text("\n\n　// ");
        strong26 = element("strong");
        strong26.textContent = "消費税の設定";
        br214 = element("br");
        t294 = space();
        ul4 = element("ul");
        li10 = element("li");
        li10.textContent = "消費税は変動します(単位％)。";
        t296 = space();
        li11 = element("li");
        t297 = text("税額端数処理は業者により指定自由です。");
        br215 = element("br");
        t298 = text("\n　設定値：四捨五入-[0] 切り上げ-[1] 切り捨て-[2]　　");
        t299 = space();
        div3 = element("div");
        t300 = text("let tax = \"8\";    // 消費税：％");
        br216 = element("br");
        t301 = text("\n   let tax_frac = 0; // 税額端数処理");
        br217 = element("br");
        t302 = space();
        t303 = space();
        br218 = element("br");
        t304 = text("\n　// ");
        strong27 = element("strong");
        strong27.textContent = "CLIPS のカスタマイズ";
        br219 = element("br");
        t306 = space();
        ul5 = element("ul");
        li12 = element("li");
        li12.textContent = "CLIPS の数は自由に増やせます。";
        t308 = space();
        li13 = element("li");
        li13.textContent = "「背景」と「文字」の色は自由にカスタマイズ出来ます（設定値８色）。";
        t310 = space();
        li14 = element("li");
        t311 = text("各々の *** 部分を変更して下さい background-color:***; color:***;");
        br220 = element("br");
        t312 = text("\n   　　　色選択ツール\n      ");
        a0 = element("a");
        create_component(openinnew0.$$.fragment);
        t313 = space();
        div4 = element("div");
        table0 = element("table");
        tr0 = element("tr");
        td0 = element("td");
        td0.textContent = "let primary";
        t315 = space();
        td1 = element("td");
        td1.textContent = "= \"background-color:#0091ea;  color:#fff;\";";
        t317 = space();
        tr1 = element("tr");
        td2 = element("td");
        td2.textContent = "let secondary";
        t319 = space();
        td3 = element("td");
        td3.textContent = "= \"background-color:#546e7a;  color:#fff;\";";
        t321 = space();
        tr2 = element("tr");
        td4 = element("td");
        td4.textContent = "let success";
        t323 = space();
        td5 = element("td");
        td5.textContent = "= \"background-color:#32cb00;  color:#fff;\";";
        t325 = space();
        tr3 = element("tr");
        td6 = element("td");
        td6.textContent = "let danger";
        t327 = space();
        td7 = element("td");
        td7.textContent = "= \"background-color:#dd2c00;  color:#fff;\";";
        t329 = space();
        tr4 = element("tr");
        td8 = element("td");
        td8.textContent = "let warning";
        t331 = space();
        td9 = element("td");
        td9.textContent = "= \"background-color:#ffab00;  color:#fff;\";";
        t333 = space();
        tr5 = element("tr");
        td10 = element("td");
        td10.textContent = "let info";
        t335 = space();
        td11 = element("td");
        td11.textContent = "= \"background-color:#00b8d4;  color:#fff;\";";
        t337 = space();
        tr6 = element("tr");
        td12 = element("td");
        td12.textContent = "let light";
        t339 = space();
        td13 = element("td");
        td13.textContent = "= \"background-color:#f5f5f5;  color:#000;\";";
        t341 = space();
        tr7 = element("tr");
        td14 = element("td");
        td14.textContent = "let dark";
        t343 = space();
        td15 = element("td");
        td15.textContent = "= \"background-color:#616161;  color:#fff;\";";
        t345 = space();
        t346 = space();
        br221 = element("br");
        t347 = text("\n\n　// ");
        strong28 = element("strong");
        strong28.textContent = "商品リスト";
        br222 = element("br");
        t349 = space();
        ul6 = element("ul");
        li15 = element("li");
        li15.textContent = "商品数は自由に増減出来ます。";
        t351 = space();
        li16 = element("li");
        li16.textContent = "クリック毎の商品表示数は６です。";
        t353 = space();
        li17 = element("li");
        t354 = text("データの追加は、");
        code0 = element("code");
        code0.textContent = "{";
        t356 = text("と");
        code1 = element("code");
        code1.textContent = "}";
        t358 = text("に囲まれたもの１セットとして追加します。");
        t359 = space();
        li18 = element("li");
        t360 = text("途中にデータを挿入する場合は、前後の");
        code2 = element("code");
        code2.textContent = ",";
        t362 = text("(コンマ)の存在に注意して下さい。");
        br223 = element("br");
        t363 = text("\n   但し、最後のデータには");
        code3 = element("code");
        code3.textContent = "}";
        t365 = text("の後に");
        code4 = element("code");
        code4.textContent = ",";
        t367 = text("を付加はしません。");
        t368 = space();
        li19 = element("li");
        t369 = text("数値(*)での設定は");
        code5 = element("code");
        code5.textContent = "”";
        t371 = text("で囲まずそのまま入力します。");
        t372 = space();
        li20 = element("li");
        t373 = text("表示・非表示の項目は、");
        code6 = element("code");
        code6.textContent = "0";
        t375 = text(": 非表示 (デフォルト)　");
        code7 = element("code");
        code7.textContent = "1";
        t377 = text(": 表示 で指示します。");
        t378 = space();
        li21 = element("li");
        t379 = text("新規データは");
        a1 = element("a");
        a1.textContent = "データ編集方法";
        t381 = text("で簡易に作成出来ます。");
        t382 = space();
        div5 = element("div");
        table2 = element("table");
        tr8 = element("tr");
        td16 = element("td");
        td16.textContent = "{";
        td17 = element("td");
        t384 = space();
        tr9 = element("tr");
        td18 = element("td");
        td18.textContent = "　id: 1,";
        td19 = element("td");
        td19.textContent = "　ID番号 *";
        t387 = space();
        tr10 = element("tr");
        td20 = element("td");
        td20.textContent = "　code: 'A-1A',";
        td21 = element("td");
        td21.textContent = "　管理番号";
        t390 = space();
        tr11 = element("tr");
        td22 = element("td");
        td22.textContent = "　name: 'ミカン',";
        td23 = element("td");
        td23.textContent = "　商品名";
        t393 = space();
        tr12 = element("tr");
        td24 = element("td");
        td24.textContent = "　subtitle : '糖度１０度を越えました',";
        td25 = element("td");
        td25.textContent = "　サブ-タイトル";
        t396 = space();
        tr13 = element("tr");
        td26 = element("td");
        td26.textContent = "　price: 3800,";
        td27 = element("td");
        td27.textContent = "　商品価格 *";
        t399 = space();
        tr14 = element("tr");
        td28 = element("td");
        td28.textContent = "　gram: \"3kg\",";
        td29 = element("td");
        td29.textContent = "　商品量目(単位を記載)";
        t402 = space();
        tr15 = element("tr");
        td30 = element("td");
        td30.textContent = "　number: 10,";
        td31 = element("td");
        td31.textContent = "　数量 *";
        t405 = space();
        tr16 = element("tr");
        td32 = element("td");
        td32.textContent = "　sale: 0,";
        td33 = element("td");
        td33.textContent = "　SALE [非表示：0　表示：1]　*";
        t408 = space();
        tr17 = element("tr");
        td34 = element("td");
        td34.textContent = "　shipping: 1,";
        td35 = element("td");
        td35.textContent = "　送料 [非表示：0　無料：1] *";
        t411 = space();
        tr18 = element("tr");
        td36 = element("td");
        td36.textContent = "　sold: 0,";
        td37 = element("td");
        td37.textContent = "　完売 [非表示：0　完売：1] *";
        t414 = space();
        tr19 = element("tr");
        td38 = element("td");
        td38.textContent = "　img: 'sample01.jpg',";
        td39 = element("td");
        td39.textContent = "　商品画像(jpg, png 等)";
        t417 = space();
        tr21 = element("tr");
        td42 = element("td");
        t418 = text("　\nclips:[");
        br224 = element("br");
        t419 = space();
        table1 = element("table");
        tr20 = element("tr");
        td40 = element("td");
        t420 = text("　　{msg:\"本日限り\", color:primary},");
        br225 = element("br");
        t421 = text("\n　　{msg:\"残り20k\", color:secondary},");
        br226 = element("br");
        t422 = text("\n　　{msg:\"送料無料\", color:success},");
        br227 = element("br");
        t423 = text("\n　　{msg:\"送料無料\", color:danger},");
        br228 = element("br");
        t424 = text("\n　　{msg:\"残り些少\", color:warning},");
        br229 = element("br");
        t425 = text("\n　　{msg:\"残り些少\", color:info},");
        br230 = element("br");
        t426 = text("\n　　{msg:\"残り些少\", color:light},");
        br231 = element("br");
        t427 = text("\n　　{msg:\"残り些少\", color:dark}");
        br232 = element("br");
        t428 = space();
        td41 = element("td");
        span0 = element("span");
        span0.textContent = "A";
        br233 = element("br");
        t430 = space();
        span1 = element("span");
        span1.textContent = "A";
        br234 = element("br");
        t432 = space();
        span2 = element("span");
        span2.textContent = "A";
        br235 = element("br");
        t434 = space();
        span3 = element("span");
        span3.textContent = "A";
        br236 = element("br");
        t436 = space();
        span4 = element("span");
        span4.textContent = "A";
        br237 = element("br");
        t438 = space();
        span5 = element("span");
        span5.textContent = "A";
        br238 = element("br");
        t440 = space();
        span6 = element("span");
        span6.textContent = "A";
        br239 = element("br");
        t442 = space();
        span7 = element("span");
        span7.textContent = "A";
        t444 = text("\n　],");
        br240 = element("br");
        t445 = space();
        td43 = element("td");
        t446 = text("　商品の特徴ポイント");
        br241 = element("br");
        t447 = text("\n　・ msg 部分が空欄の場合は表示されません");
        br242 = element("br");
        t448 = text(" \n　・ color 部分の変更で色を自由に設定可能です");
        br243 = element("br");
        t449 = text("\n　　　　例： primary => \"#800000\"(");
        code8 = element("code");
        code8.textContent = "\"";
        t451 = text(" で囲む)");
        br244 = element("br");
        t452 = text("\n　　　　Color Tool(色選択ツール)\n   ");
        a2 = element("a");
        t453 = space();
        create_component(openinnew1.$$.fragment);
        t454 = space();
        tr22 = element("tr");
        td44 = element("td");
        td44.textContent = "　\n      text :\"\"";
        t456 = space();
        td45 = element("td");
        t457 = text("商品内容の解説");
        br245 = element("br");
        t458 = text("\n      　・ 作成には");
        a3 = element("a");
        a3.textContent = "データ編集方法";
        t460 = text("をお使い下さい。");
        t461 = space();
        tr23 = element("tr");
        td46 = element("td");
        td46.textContent = "};,";
        t463 = space();
        td47 = element("td");
        t464 = space();
        t465 = space();
        br246 = element("br");
        t466 = space();
        h22 = element("h2");
        h22.textContent = "(3) 画像について";
        t468 = space();
        ul7 = element("ul");
        li22 = element("li");
        t469 = text("商品画像(名前は任意)は");
        code9 = element("code");
        code9.textContent = "images";
        t471 = text("フォルダ内に置き、商品データファイル");
        code10 = element("code");
        code10.textContent = "products.js";
        t473 = text("の ");
        code11 = element("code");
        code11.textContent = "products - img";
        t475 = text(" 項目に各々記述します。");
        t476 = space();
        li23 = element("li");
        t477 = text("画像表示サイズは自動調整されますが、");
        code12 = element("code");
        code12.textContent = "横300 x 縦200";
        t479 = text("(ピクセル)から");
        code13 = element("code");
        code13.textContent = "600 x 400";
        t481 = text("程度の範囲で修正・トリミングを行って下さい(スマートフォンでも編集可能)。");
        t482 = space();
        li24 = element("li");
        li24.textContent = "独自画像設定後は、サンプル画像は全て破棄して下さい(使用のものは全てフリー画像です)。";
        t484 = space();
        h31 = element("h3");
        h31.textContent = "(4) ローカルテスト";
        t486 = space();
        ul8 = element("ul");
        li25 = element("li");
        t487 = text("テストを行うには、");
        code14 = element("code");
        code14.textContent = "index.html";
        t489 = text("（サーバー用：インターネット接続が必要）或いは");
        code15 = element("code");
        code15.textContent = "index-admin.html";
        t491 = text("（管理者用）かの何れかを開くとローカル PC 上でホームページが立ち上がります。");
        t492 = space();
        li26 = element("li");
        li26.textContent = "管理者用ではメニューに管理のためのメニューが表示され、管理編集を行うことが出来ます。";
        t494 = space();
        li27 = element("li");
        li27.textContent = "データ編集後「ページを再読み込み」を行うことで変更を確認出来ます。";
        t496 = space();
        li28 = element("li");
        t497 = text("最後に");
        code16 = element("code");
        code16.textContent = "index.html";
        t499 = text("をメモ帳等のエディタで開きタイトルタグ(<title>)内を「ホームページ名」に変更します。");
        br247 = element("br");
        t500 = text("      \n      ※ その他、検索用のメタタグ（meta）を追加することも可能です。\n      ");
        div6 = element("div");
        t501 = text("例：<meta name=\"description\" content=\"野菜販売サイトです。\">");
        br248 = element("br");
        t502 = text("\n         　　<meta name=\"keywords\" content=\"野菜,トマト,りんご\">");
        t503 = space();
        li29 = element("li");
        li29.textContent = "最終確認後、サーバーへアップロードをします。";
        t505 = space();
        h4 = element("h4");
        h4.textContent = "　 ローカル用ファイルのダウンロード";
        t507 = text("\n　 * 最新版への更新をすることが出来ます。\n");
        div7 = element("div");
        t508 = text("css/material-components-web.min.css\n   ");
        a4 = element("a");
        create_component(openinnew2.$$.fragment);
        t509 = space();
        br249 = element("br");
        t510 = text("\n\n   js/material-components-web.min.js\n   ");
        a5 = element("a");
        create_component(openinnew3.$$.fragment);
        t511 = space();
        br250 = element("br");
        t512 = text("\n　 * ブラウザで開かれたファイルを「名前を付けて保存」で各々のフォルダ内に保存します。");
        t513 = space();
        h32 = element("h3");
        h32.textContent = "(5) サーバーへアップロード";
        t515 = space();
        ul9 = element("ul");
        li30 = element("li");
        li30.textContent = "初心者にも手軽に設置可能でサーバーへの依存はありません(CGI、データベース等)。";
        t517 = space();
        li31 = element("li");
        li31.textContent = "プロバイダーやホスティングに用意されたサーバーへ上記 (1) の構成のまま必要なファイルをアップロードします。";
        t519 = space();
        li32 = element("li");
        li32.textContent = "アップロード後指定された URL にアクセスすると HP が閲覧出来ます。";
        t521 = space();
        li33 = element("li");
        li33.textContent = "サーバーに依っては、独自ドメインも設定可能です。";
        t523 = space();
        h33 = element("h3");
        h33.textContent = "(6) 公開後の管理運営";
        t525 = space();
        ul10 = element("ul");
        li34 = element("li");
        t526 = text("公開後のデータ更新は、変更したファイル（");
        code17 = element("code");
        code17.textContent = "init.js";
        t528 = text("、");
        code18 = element("code");
        code18.textContent = "products.js";
        t530 = text("、");
        code19 = element("code");
        code19.textContent = "user-pages.js";
        t532 = text("）或いは追加の新規画像ファイルをサーバーへアップロードします。");
        t533 = space();
        h34 = element("h3");
        h34.textContent = "(7) 運営経費について";
        t535 = space();
        ul11 = element("ul");
        li35 = element("li");
        li35.textContent = "現在のレンタルサーバーで提供されている最も安いコースは月額１００円位からあり、各社共に上流の回線速度自体は十分に確保されていますので速度的には十分と思われます。";
        t537 = space();
        li36 = element("li");
        li36.textContent = "独自ドメインの設定をする場合、年間１０００円前後掛かります。";
        t539 = space();
        li37 = element("li");
        t540 = text("経費の節減については、「ヘルプ」→「");
        a6 = element("a");
        a6.textContent = "Svelte-eCart について";
        t542 = text("」→「制作の目的」をご覧下さい。");
        t543 = space();
        br251 = element("br");
        t544 = space();
        br252 = element("br");
        attr_dev(h1, "class", "mdc-typography--headline4");
        add_location(h1, file$5, 3, 0, 38);
        add_location(li0, file$5, 5, 3, 94);
        add_location(li1, file$5, 6, 3, 133);
        add_location(li2, file$5, 7, 3, 170);
        add_location(ul0, file$5, 4, 0, 86);
        attr_dev(h20, "class", "mdc-typography--headline5");
        add_location(h20, file$5, 11, 0, 226);
        add_location(li3, file$5, 13, 6, 294);
        add_location(strong0, file$5, 14, 22, 350);
        add_location(li4, file$5, 14, 6, 334);
        add_location(li5, file$5, 15, 6, 399);
        add_location(li6, file$5, 16, 6, 440);
        add_location(ul1, file$5, 12, 3, 283);
        add_location(br0, file$5, 21, 44, 557);
        add_location(br1, file$5, 22, 85, 647);
        add_location(br2, file$5, 23, 90, 742);
        add_location(strong1, file$5, 24, 48, 795);
        add_location(br3, file$5, 24, 105, 852);
        add_location(br4, file$5, 25, 16, 873);
        add_location(br5, file$5, 26, 20, 898);
        add_location(br6, file$5, 27, 22, 925);
        add_location(strong2, file$5, 28, 48, 978);
        add_location(br7, file$5, 28, 104, 1034);
        add_location(br8, file$5, 29, 17, 1056);
        add_location(br9, file$5, 30, 21, 1082);
        add_location(br10, file$5, 31, 12, 1099);
        add_location(br11, file$5, 32, 21, 1125);
        add_location(br12, file$5, 33, 91, 1221);
        add_location(br13, file$5, 34, 89, 1315);
        add_location(strong3, file$5, 35, 2, 1322);
        add_location(br14, file$5, 35, 29, 1349);
        add_location(strong4, file$5, 36, 2, 1356);
        add_location(br15, file$5, 36, 28, 1382);
        add_location(br16, file$5, 37, 56, 1443);
        add_location(br17, file$5, 38, 55, 1503);
        add_location(strong5, file$5, 39, 2, 1510);
        add_location(br18, file$5, 39, 29, 1537);
        add_location(strong6, file$5, 40, 2, 1544);
        add_location(br19, file$5, 40, 29, 1571);
        add_location(br20, file$5, 43, 1, 1636);
        attr_dev(div0, "class", "pre-ex svelte-xs85sx");
        add_location(div0, file$5, 19, 1, 487);
        add_location(li7, file$5, 47, 3, 1663);
        add_location(br21, file$5, 48, 90, 1838);
        add_location(li8, file$5, 48, 3, 1751);
        add_location(ul2, file$5, 46, 0, 1655);
        attr_dev(h21, "class", "mdc-typography--headline5");
        add_location(h21, file$5, 53, 0, 1918);
        attr_dev(h30, "class", "mdc-typography--headline6");
        add_location(h30, file$5, 54, 0, 1975);
        add_location(li9, file$5, 56, 6, 2050);
        add_location(ul3, file$5, 55, 3, 2039);
        add_location(br22, file$5, 59, 40, 2152);
        add_location(strong7, file$5, 60, 12, 2169);
        add_location(br23, file$5, 60, 69, 2226);
        add_location(strong8, file$5, 61, 12, 2243);
        add_location(br24, file$5, 61, 63, 2294);
        add_location(strong9, file$5, 62, 12, 2311);
        add_location(br25, file$5, 62, 67, 2366);
        attr_dev(div1, "class", "pre-ex svelte-xs85sx");
        add_location(div1, file$5, 58, 1, 2091);
        add_location(br26, file$5, 65, 0, 2384);
        add_location(strong10, file$5, 67, 2, 2392);
        add_location(br27, file$5, 67, 26, 2416);
        add_location(strong11, file$5, 70, 0, 2453);
        add_location(br28, file$5, 70, 25, 2478);
        add_location(br29, file$5, 71, 18, 2501);
        add_location(br30, file$5, 72, 19, 2525);
        add_location(br31, file$5, 73, 43, 2573);
        add_location(br32, file$5, 74, 31, 2609);
        add_location(br33, file$5, 75, 19, 2633);
        add_location(br34, file$5, 76, 19, 2657);
        add_location(br35, file$5, 77, 20, 2682);
        add_location(br36, file$5, 78, 21, 2708);
        add_location(br37, file$5, 79, 17, 2730);
        add_location(br38, file$5, 80, 7, 2742);
        add_location(br39, file$5, 82, 0, 2748);
        add_location(strong12, file$5, 84, 0, 2754);
        add_location(br40, file$5, 84, 26, 2780);
        add_location(br41, file$5, 85, 22, 2807);
        add_location(br42, file$5, 86, 48, 2860);
        add_location(br43, file$5, 87, 17, 2882);
        add_location(br44, file$5, 88, 44, 2931);
        add_location(br45, file$5, 89, 54, 2990);
        add_location(br46, file$5, 90, 7, 3002);
        add_location(br47, file$5, 92, 0, 3008);
        add_location(strong13, file$5, 94, 0, 3014);
        add_location(br48, file$5, 94, 38, 3052);
        add_location(br49, file$5, 95, 25, 3082);
        add_location(br50, file$5, 96, 19, 3106);
        add_location(br51, file$5, 97, 22, 3133);
        add_location(br52, file$5, 98, 23, 3161);
        add_location(br53, file$5, 99, 13, 3179);
        add_location(br54, file$5, 100, 13, 3197);
        add_location(br55, file$5, 101, 13, 3215);
        add_location(br56, file$5, 102, 13, 3233);
        add_location(br57, file$5, 103, 12, 3250);
        add_location(br58, file$5, 104, 7, 3262);
        add_location(br59, file$5, 106, 0, 3268);
        add_location(strong14, file$5, 108, 0, 3274);
        add_location(br60, file$5, 108, 27, 3301);
        add_location(br61, file$5, 109, 25, 3331);
        add_location(br62, file$5, 110, 49, 3385);
        add_location(br63, file$5, 111, 52, 3442);
        add_location(br64, file$5, 112, 60, 3507);
        add_location(br65, file$5, 113, 44, 3556);
        add_location(br66, file$5, 114, 0, 3561);
        add_location(br67, file$5, 115, 11, 3577);
        add_location(br68, file$5, 116, 34, 3616);
        add_location(br69, file$5, 117, 30, 3651);
        add_location(br70, file$5, 118, 34, 3691);
        add_location(br71, file$5, 119, 24, 3720);
        add_location(br72, file$5, 120, 24, 3749);
        add_location(br73, file$5, 121, 23, 3777);
        add_location(br74, file$5, 122, 7, 3789);
        add_location(br75, file$5, 124, 0, 3795);
        add_location(strong15, file$5, 126, 0, 3801);
        add_location(br76, file$5, 126, 27, 3828);
        add_location(br77, file$5, 127, 32, 3865);
        add_location(br78, file$5, 128, 32, 3902);
        add_location(br79, file$5, 129, 23, 3930);
        add_location(br80, file$5, 130, 13, 3948);
        add_location(br81, file$5, 131, 7, 3960);
        add_location(br82, file$5, 132, 18, 3983);
        add_location(br83, file$5, 133, 35, 4023);
        add_location(br84, file$5, 134, 26, 4054);
        add_location(br85, file$5, 135, 9, 4068);
        add_location(br86, file$5, 136, 6, 4079);
        add_location(br87, file$5, 137, 7, 4091);
        add_location(br88, file$5, 138, 19, 4115);
        add_location(br89, file$5, 139, 38, 4158);
        add_location(br90, file$5, 140, 27, 4190);
        add_location(br91, file$5, 141, 8, 4203);
        add_location(br92, file$5, 142, 2, 4210);
        add_location(br93, file$5, 144, 0, 4216);
        add_location(strong16, file$5, 146, 0, 4222);
        add_location(br94, file$5, 146, 24, 4246);
        add_location(br95, file$5, 147, 19, 4270);
        add_location(br96, file$5, 148, 13, 4288);
        add_location(br97, file$5, 149, 17, 4310);
        add_location(br98, file$5, 150, 8, 4323);
        add_location(br99, file$5, 151, 8, 4336);
        add_location(br100, file$5, 152, 6, 4347);
        add_location(br101, file$5, 153, 2, 4354);
        add_location(br102, file$5, 155, 0, 4360);
        add_location(strong17, file$5, 157, 0, 4366);
        add_location(br103, file$5, 157, 26, 4392);
        add_location(br104, file$5, 158, 12, 4409);
        add_location(br105, file$5, 159, 29, 4443);
        add_location(br106, file$5, 160, 14, 4462);
        add_location(br107, file$5, 161, 36, 4503);
        add_location(br108, file$5, 162, 23, 4531);
        add_location(br109, file$5, 163, 15, 4552);
        add_location(br110, file$5, 164, 7, 4564);
        add_location(br111, file$5, 165, 15, 4584);
        add_location(br112, file$5, 166, 14, 4603);
        add_location(br113, file$5, 167, 20, 4628);
        add_location(br114, file$5, 168, 13, 4646);
        add_location(strong18, file$5, 169, 24, 4675);
        add_location(br115, file$5, 169, 55, 4706);
        add_location(br116, file$5, 170, 33, 4744);
        add_location(br117, file$5, 171, 8, 4757);
        add_location(br118, file$5, 172, 7, 4769);
        add_location(br119, file$5, 173, 15, 4789);
        add_location(br120, file$5, 174, 14, 4808);
        add_location(br121, file$5, 175, 25, 4838);
        add_location(br122, file$5, 176, 13, 4856);
        add_location(strong19, file$5, 177, 24, 4885);
        add_location(br123, file$5, 177, 56, 4917);
        add_location(br124, file$5, 178, 13, 4935);
        add_location(br125, file$5, 179, 8, 4948);
        add_location(br126, file$5, 180, 7, 4960);
        add_location(br127, file$5, 181, 14, 4979);
        add_location(br128, file$5, 182, 14, 4998);
        add_location(br129, file$5, 183, 20, 5023);
        add_location(br130, file$5, 184, 13, 5041);
        add_location(br131, file$5, 185, 32, 5078);
        add_location(br132, file$5, 186, 14, 5097);
        add_location(br133, file$5, 187, 8, 5110);
        add_location(br134, file$5, 188, 7, 5122);
        add_location(br135, file$5, 189, 17, 5144);
        add_location(br136, file$5, 190, 14, 5163);
        add_location(br137, file$5, 191, 25, 5193);
        add_location(br138, file$5, 192, 13, 5211);
        add_location(strong20, file$5, 193, 24, 5240);
        add_location(br139, file$5, 193, 68, 5284);
        add_location(br140, file$5, 194, 14, 5303);
        add_location(br141, file$5, 195, 7, 5315);
        add_location(br142, file$5, 196, 2, 5322);
        add_location(br143, file$5, 198, 0, 5328);
        add_location(strong21, file$5, 200, 0, 5334);
        add_location(br144, file$5, 200, 33, 5367);
        add_location(br145, file$5, 201, 22, 5394);
        add_location(br146, file$5, 203, 51, 5451);
        add_location(br147, file$5, 204, 55, 5511);
        add_location(br148, file$5, 206, 8, 5525);
        add_location(br149, file$5, 208, 0, 5531);
        add_location(strong22, file$5, 210, 0, 5537);
        add_location(br150, file$5, 210, 40, 5577);
        add_location(br151, file$5, 212, 17, 5616);
        add_location(br152, file$5, 213, 13, 5634);
        add_location(br153, file$5, 214, 17, 5656);
        add_location(br154, file$5, 215, 7, 5668);
        add_location(br155, file$5, 216, 16, 5689);
        add_location(br156, file$5, 217, 21, 5715);
        add_location(br157, file$5, 218, 12, 5732);
        add_location(br158, file$5, 219, 10, 5747);
        add_location(br159, file$5, 220, 8, 5760);
        add_location(br160, file$5, 221, 7, 5772);
        add_location(br161, file$5, 222, 16, 5793);
        add_location(br162, file$5, 223, 21, 5819);
        add_location(br163, file$5, 224, 12, 5836);
        add_location(br164, file$5, 225, 11, 5852);
        add_location(br165, file$5, 226, 8, 5865);
        add_location(br166, file$5, 227, 7, 5877);
        add_location(br167, file$5, 228, 17, 5899);
        add_location(br168, file$5, 229, 12, 5916);
        add_location(br169, file$5, 230, 46, 5967);
        add_location(br170, file$5, 231, 25, 5997);
        add_location(br171, file$5, 232, 7, 6009);
        add_location(br172, file$5, 233, 2, 6016);
        add_location(br173, file$5, 235, 0, 6022);
        add_location(strong23, file$5, 237, 0, 6028);
        add_location(br174, file$5, 237, 28, 6056);
        add_location(br175, file$5, 238, 21, 6082);
        add_location(br176, file$5, 240, 30, 6150);
        add_location(br177, file$5, 241, 14, 6169);
        add_location(br178, file$5, 242, 12, 6186);
        add_location(br179, file$5, 243, 9, 6200);
        add_location(br180, file$5, 244, 16, 6221);
        add_location(br181, file$5, 245, 25, 6251);
        add_location(br182, file$5, 246, 34, 6290);
        add_location(br183, file$5, 247, 27, 6322);
        add_location(br184, file$5, 248, 9, 6336);
        add_location(br185, file$5, 249, 1, 6342);
        add_location(br186, file$5, 250, 9, 6356);
        add_location(br187, file$5, 251, 16, 6377);
        add_location(br188, file$5, 252, 25, 6407);
        add_location(br189, file$5, 253, 34, 6446);
        add_location(br190, file$5, 254, 52, 6503);
        add_location(br191, file$5, 255, 9, 6517);
        add_location(br192, file$5, 256, 9, 6531);
        add_location(br193, file$5, 257, 54, 6590);
        add_location(br194, file$5, 258, 28, 6623);
        add_location(br195, file$5, 259, 28, 6656);
        add_location(br196, file$5, 260, 52, 6713);
        add_location(br197, file$5, 261, 8, 6726);
        add_location(br198, file$5, 262, 0, 6731);
        add_location(br199, file$5, 263, 2, 6738);
        add_location(br200, file$5, 265, 0, 6744);
        add_location(strong24, file$5, 267, 0, 6750);
        add_location(br201, file$5, 267, 36, 6786);
        add_location(br202, file$5, 268, 38, 6829);
        add_location(br203, file$5, 269, 19, 6853);
        add_location(br204, file$5, 271, 46, 6905);
        add_location(br205, file$5, 272, 53, 6963);
        add_location(br206, file$5, 273, 40, 7008);
        add_location(br207, file$5, 274, 23, 7036);
        add_location(br208, file$5, 275, 27, 7068);
        add_location(br209, file$5, 276, 28, 7101);
        add_location(br210, file$5, 278, 8, 7115);
        attr_dev(div2, "class", "pre-ex svelte-xs85sx");
        add_location(div2, file$5, 68, 0, 2427);
        add_location(br211, file$5, 284, 0, 7136);
        add_location(strong25, file$5, 286, 2, 7144);
        add_location(br212, file$5, 286, 30, 7172);
        add_location(br213, file$5, 288, 0, 7184);
        add_location(strong26, file$5, 290, 4, 7194);
        add_location(br214, file$5, 290, 27, 7217);
        add_location(li10, file$5, 292, 3, 7230);
        add_location(br215, file$5, 293, 26, 7281);
        add_location(li11, file$5, 293, 3, 7258);
        add_location(ul4, file$5, 291, 0, 7222);
        add_location(br216, file$5, 298, 29, 7389);
        add_location(br217, file$5, 299, 30, 7424);
        attr_dev(div3, "class", "pre-ex svelte-xs85sx");
        add_location(div3, file$5, 297, 0, 7335);
        add_location(br218, file$5, 302, 0, 7442);
        add_location(strong27, file$5, 303, 4, 7451);
        add_location(br219, file$5, 303, 34, 7481);
        add_location(li12, file$5, 305, 3, 7494);
        add_location(li13, file$5, 306, 3, 7525);
        add_location(br220, file$5, 307, 58, 7626);
        attr_dev(a0, "href", "https://material.io/resources/color/");
        attr_dev(a0, "target", "_blank");
        add_location(a0, file$5, 309, 6, 7650);
        add_location(li14, file$5, 307, 3, 7571);
        add_location(ul5, file$5, 304, 0, 7486);
        add_location(td0, file$5, 318, 6, 7836);
        add_location(td1, file$5, 319, 6, 7868);
        add_location(tr0, file$5, 317, 3, 7825);
        add_location(td2, file$5, 322, 6, 7954);
        add_location(td3, file$5, 323, 6, 7988);
        add_location(tr1, file$5, 321, 3, 7943);
        add_location(td4, file$5, 326, 6, 8074);
        add_location(td5, file$5, 327, 6, 8106);
        add_location(tr2, file$5, 325, 3, 8063);
        add_location(td6, file$5, 330, 6, 8192);
        add_location(td7, file$5, 331, 6, 8223);
        add_location(tr3, file$5, 329, 3, 8181);
        add_location(td8, file$5, 334, 6, 8309);
        add_location(td9, file$5, 335, 6, 8341);
        add_location(tr4, file$5, 333, 3, 8298);
        add_location(td10, file$5, 338, 6, 8427);
        add_location(td11, file$5, 339, 6, 8456);
        add_location(tr5, file$5, 337, 3, 8416);
        add_location(td12, file$5, 342, 6, 8542);
        add_location(td13, file$5, 343, 6, 8572);
        add_location(tr6, file$5, 341, 3, 8531);
        add_location(td14, file$5, 346, 6, 8658);
        add_location(td15, file$5, 347, 6, 8687);
        add_location(tr7, file$5, 345, 3, 8647);
        add_location(table0, file$5, 316, 0, 7814);
        attr_dev(div4, "class", "pre-ex svelte-xs85sx");
        add_location(div4, file$5, 315, 0, 7793);
        add_location(br221, file$5, 354, 2, 8785);
        add_location(strong28, file$5, 356, 4, 8795);
        add_location(br222, file$5, 356, 26, 8817);
        add_location(li15, file$5, 358, 3, 8830);
        add_location(li16, file$5, 359, 3, 8857);
        add_location(code0, file$5, 360, 15, 8898);
        add_location(code1, file$5, 360, 35, 8918);
        add_location(li17, file$5, 360, 3, 8886);
        add_location(code2, file$5, 361, 25, 8989);
        add_location(br223, file$5, 361, 56, 9020);
        add_location(code3, file$5, 362, 14, 9039);
        add_location(code4, file$5, 362, 36, 9061);
        add_location(li18, file$5, 361, 3, 8967);
        add_location(code5, file$5, 363, 17, 9108);
        add_location(li19, file$5, 363, 3, 9094);
        add_location(code6, file$5, 364, 18, 9160);
        add_location(code7, file$5, 364, 46, 9188);
        add_location(li20, file$5, 364, 3, 9145);
        attr_dev(a1, "href", "#/data-editor");
        add_location(a1, file$5, 365, 13, 9233);
        add_location(li21, file$5, 365, 3, 9223);
        add_location(ul6, file$5, 357, 0, 8822);
        attr_dev(td16, "class", "svelte-xs85sx");
        add_location(td16, file$5, 372, 4, 9351);
        attr_dev(td17, "class", "svelte-xs85sx");
        add_location(td17, file$5, 372, 19, 9366);
        add_location(tr8, file$5, 372, 0, 9347);
        attr_dev(td18, "class", "svelte-xs85sx");
        add_location(td18, file$5, 373, 4, 9385);
        attr_dev(td19, "class", "svelte-xs85sx");
        add_location(td19, file$5, 373, 20, 9401);
        add_location(tr9, file$5, 373, 0, 9381);
        attr_dev(td20, "class", "svelte-xs85sx");
        add_location(td20, file$5, 375, 4, 9442);
        attr_dev(td21, "class", "svelte-xs85sx");
        add_location(td21, file$5, 375, 27, 9465);
        add_location(tr10, file$5, 375, 0, 9438);
        attr_dev(td22, "class", "svelte-xs85sx");
        add_location(td22, file$5, 376, 4, 9489);
        attr_dev(td23, "class", "svelte-xs85sx");
        add_location(td23, file$5, 376, 26, 9511);
        add_location(tr11, file$5, 376, 0, 9485);
        attr_dev(td24, "class", "svelte-xs85sx");
        add_location(td24, file$5, 377, 4, 9534);
        attr_dev(td25, "class", "svelte-xs85sx");
        add_location(td25, file$5, 377, 39, 9569);
        add_location(tr12, file$5, 377, 0, 9530);
        attr_dev(td26, "class", "svelte-xs85sx");
        add_location(td26, file$5, 379, 4, 9597);
        attr_dev(td27, "class", "svelte-xs85sx");
        add_location(td27, file$5, 379, 26, 9619);
        add_location(tr13, file$5, 379, 0, 9593);
        attr_dev(td28, "class", "svelte-xs85sx");
        add_location(td28, file$5, 380, 4, 9645);
        attr_dev(td29, "class", "svelte-xs85sx");
        add_location(td29, file$5, 380, 26, 9667);
        add_location(tr14, file$5, 380, 0, 9641);
        attr_dev(td30, "class", "svelte-xs85sx");
        add_location(td30, file$5, 381, 4, 9698);
        attr_dev(td31, "class", "svelte-xs85sx");
        add_location(td31, file$5, 381, 25, 9719);
        add_location(tr15, file$5, 381, 0, 9694);
        attr_dev(td32, "class", "svelte-xs85sx");
        add_location(td32, file$5, 382, 4, 9743);
        attr_dev(td33, "class", "svelte-xs85sx");
        add_location(td33, file$5, 382, 22, 9761);
        add_location(tr16, file$5, 382, 0, 9739);
        attr_dev(td34, "class", "svelte-xs85sx");
        add_location(td34, file$5, 383, 4, 9800);
        attr_dev(td35, "class", "svelte-xs85sx");
        add_location(td35, file$5, 383, 26, 9822);
        add_location(tr17, file$5, 383, 0, 9796);
        attr_dev(td36, "class", "svelte-xs85sx");
        add_location(td36, file$5, 384, 4, 9859);
        attr_dev(td37, "class", "svelte-xs85sx");
        add_location(td37, file$5, 384, 22, 9877);
        add_location(tr18, file$5, 384, 0, 9855);
        attr_dev(td38, "class", "svelte-xs85sx");
        add_location(td38, file$5, 385, 4, 9914);
        attr_dev(td39, "class", "svelte-xs85sx");
        add_location(td39, file$5, 385, 34, 9944);
        add_location(tr19, file$5, 385, 0, 9910);
        add_location(br224, file$5, 387, 7, 9993);
        add_location(br225, file$5, 392, 40, 10061);
        add_location(br226, file$5, 393, 43, 10109);
        add_location(br227, file$5, 394, 40, 10154);
        add_location(br228, file$5, 395, 39, 10198);
        add_location(br229, file$5, 396, 40, 10243);
        add_location(br230, file$5, 397, 37, 10285);
        add_location(br231, file$5, 398, 38, 10328);
        add_location(br232, file$5, 399, 36, 10369);
        attr_dev(td40, "class", "svelte-xs85sx");
        add_location(td40, file$5, 391, 3, 10016);
        set_style(span0, "background-color", "#0091ea");
        set_style(span0, "color", "#fff");
        set_style(span0, "padding", "0px 6px");
        set_style(span0, "margin-bottom", "2px");
        add_location(span0, file$5, 403, 0, 10392);
        add_location(br233, file$5, 403, 94, 10486);
        set_style(span1, "background-color", "#546e7a");
        set_style(span1, "color", "#fff");
        set_style(span1, "padding", "0px 6px");
        set_style(span1, "margin-bottom", "2px");
        add_location(span1, file$5, 404, 0, 10491);
        add_location(br234, file$5, 404, 94, 10585);
        set_style(span2, "background-color", "#32cb00");
        set_style(span2, "color", "#fff");
        set_style(span2, "padding", "0px 6px");
        set_style(span2, "margin-bottom", "2px");
        add_location(span2, file$5, 405, 0, 10590);
        add_location(br235, file$5, 405, 94, 10684);
        set_style(span3, "background-color", "#dd2c00");
        set_style(span3, "color", "#fff");
        set_style(span3, "padding", "0px 6px");
        set_style(span3, "margin-bottom", "2px");
        add_location(span3, file$5, 406, 0, 10689);
        add_location(br236, file$5, 406, 94, 10783);
        set_style(span4, "background-color", "#ffab00");
        set_style(span4, "color", "#fff");
        set_style(span4, "padding", "0px 6px");
        set_style(span4, "margin-bottom", "2px");
        add_location(span4, file$5, 407, 0, 10788);
        add_location(br237, file$5, 407, 94, 10882);
        set_style(span5, "background-color", "#00b8d4");
        set_style(span5, "color", "#fff");
        set_style(span5, "padding", "0px 6px");
        set_style(span5, "margin-bottom", "2px");
        add_location(span5, file$5, 408, 0, 10887);
        add_location(br238, file$5, 408, 94, 10981);
        set_style(span6, "background-color", "#f5f5f5");
        set_style(span6, "color", "#000");
        set_style(span6, "padding", "0px 6px");
        set_style(span6, "margin-bottom", "2px");
        add_location(span6, file$5, 409, 0, 10986);
        add_location(br239, file$5, 409, 94, 11080);
        set_style(span7, "background-color", "#616161");
        set_style(span7, "color", "#fff");
        set_style(span7, "padding", "0px 6px");
        set_style(span7, "margin-bottom", "2px");
        add_location(span7, file$5, 410, 0, 11085);
        attr_dev(td41, "class", "svelte-xs85sx");
        add_location(td41, file$5, 401, 3, 10386);
        add_location(tr20, file$5, 390, 1, 10008);
        add_location(table1, file$5, 389, 0, 9999);
        add_location(br240, file$5, 416, 3, 11209);
        attr_dev(td42, "class", "svelte-xs85sx");
        add_location(td42, file$5, 386, 4, 9980);
        add_location(br241, file$5, 420, 10, 11236);
        add_location(br242, file$5, 421, 23, 11264);
        add_location(br243, file$5, 422, 26, 11296);
        add_location(code8, file$5, 423, 28, 11329);
        add_location(br244, file$5, 423, 47, 11348);
        attr_dev(a2, "href", "https://material.io/resources/color/");
        attr_dev(a2, "target", "_blank");
        add_location(a2, file$5, 425, 3, 11379);
        attr_dev(td43, "class", "svelte-xs85sx");
        add_location(td43, file$5, 419, 0, 11221);
        add_location(tr21, file$5, 386, 0, 9976);
        attr_dev(td44, "class", "svelte-xs85sx");
        add_location(td44, file$5, 433, 3, 11520);
        add_location(br245, file$5, 437, 13, 11571);
        attr_dev(a3, "href", "#/data-editor");
        add_location(a3, file$5, 438, 13, 11589);
        attr_dev(td45, "class", "svelte-xs85sx");
        add_location(td45, file$5, 436, 3, 11553);
        add_location(tr22, file$5, 432, 0, 11512);
        attr_dev(td46, "class", "svelte-xs85sx");
        add_location(td46, file$5, 443, 3, 11657);
        attr_dev(td47, "class", "svelte-xs85sx");
        add_location(td47, file$5, 444, 3, 11678);
        add_location(tr23, file$5, 442, 0, 11649);
        attr_dev(table2, "class", "tbl-data svelte-xs85sx");
        add_location(table2, file$5, 370, 0, 9318);
        attr_dev(div5, "class", "pre-ex svelte-xs85sx");
        add_location(div5, file$5, 368, 0, 9292);
        add_location(br246, file$5, 453, 0, 11731);
        attr_dev(h22, "class", "mdc-typography--headline4");
        add_location(h22, file$5, 455, 0, 11737);
        add_location(code9, file$5, 457, 22, 11821);
        add_location(code10, file$5, 457, 59, 11858);
        add_location(code11, file$5, 457, 85, 11884);
        add_location(li22, file$5, 457, 6, 11805);
        add_location(code12, file$5, 458, 28, 11957);
        add_location(code13, file$5, 458, 60, 11989);
        add_location(li23, file$5, 458, 6, 11935);
        add_location(li24, file$5, 459, 6, 12060);
        add_location(ul7, file$5, 456, 3, 11794);
        attr_dev(h31, "class", "mdc-typography--headline4");
        add_location(h31, file$5, 462, 0, 12123);
        add_location(code14, file$5, 464, 19, 12205);
        add_location(code15, file$5, 464, 65, 12251);
        add_location(li25, file$5, 464, 6, 12192);
        add_location(li26, file$5, 465, 6, 12332);
        add_location(li27, file$5, 466, 6, 12390);
        add_location(code16, file$5, 467, 13, 12446);
        add_location(br247, file$5, 467, 88, 12521);
        add_location(br248, file$5, 470, 63, 12660);
        attr_dev(div6, "class", "meta svelte-xs85sx");
        add_location(div6, file$5, 469, 6, 12578);
        add_location(li28, file$5, 467, 6, 12439);
        add_location(li29, file$5, 476, 6, 12765);
        add_location(ul8, file$5, 463, 3, 12181);
        add_location(h4, file$5, 479, 0, 12813);
        attr_dev(a4, "href", "https://unpkg.com/material-components-web@latest/dist/material-components-web.min.css");
        attr_dev(a4, "target", "_blank");
        add_location(a4, file$5, 483, 3, 12927);
        add_location(br249, file$5, 486, 3, 13100);
        attr_dev(a5, "href", "https://unpkg.com/material-components-web@latest/dist/material-components-web.min.js");
        attr_dev(a5, "target", "_blank");
        add_location(a5, file$5, 489, 3, 13146);
        add_location(br250, file$5, 492, 1, 13316);
        attr_dev(div7, "class", "pre-ex svelte-xs85sx");
        add_location(div7, file$5, 481, 0, 12864);
        attr_dev(h32, "class", "mdc-typography--headline4");
        add_location(h32, file$5, 498, 0, 13380);
        add_location(li30, file$5, 500, 6, 13453);
        add_location(li31, file$5, 501, 6, 13510);
        add_location(li32, file$5, 502, 6, 13581);
        add_location(li33, file$5, 503, 6, 13634);
        add_location(ul9, file$5, 499, 3, 13442);
        attr_dev(h33, "class", "mdc-typography--headline4");
        add_location(h33, file$5, 506, 0, 13681);
        add_location(code17, file$5, 508, 30, 13775);
        add_location(code18, file$5, 508, 51, 13796);
        add_location(code19, file$5, 508, 76, 13821);
        add_location(li34, file$5, 508, 6, 13751);
        add_location(ul10, file$5, 507, 3, 13740);
        attr_dev(h34, "class", "mdc-typography--headline4");
        add_location(h34, file$5, 511, 0, 13894);
        add_location(li35, file$5, 513, 6, 13964);
        add_location(li36, file$5, 514, 6, 14060);
        attr_dev(a6, "href", "#/about");
        add_location(a6, file$5, 515, 28, 14128);
        add_location(li37, file$5, 515, 6, 14106);
        add_location(ul11, file$5, 512, 3, 13953);
        add_location(br251, file$5, 518, 0, 14202);
        add_location(br252, file$5, 519, 0, 14207);
        attr_dev(div8, "class", "container margin-auto");
        add_location(div8, file$5, 1, 0, 1);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, div8, anchor);
        append_dev(div8, h1);
        append_dev(div8, t1);
        append_dev(div8, ul0);
        append_dev(ul0, li0);
        append_dev(ul0, t3);
        append_dev(ul0, li1);
        append_dev(ul0, t5);
        append_dev(ul0, li2);
        append_dev(div8, t7);
        append_dev(div8, h20);
        append_dev(div8, t9);
        append_dev(div8, ul1);
        append_dev(ul1, li3);
        append_dev(ul1, t11);
        append_dev(ul1, li4);
        append_dev(li4, t12);
        append_dev(li4, strong0);
        append_dev(li4, t14);
        append_dev(ul1, t15);
        append_dev(ul1, li5);
        append_dev(ul1, t17);
        append_dev(ul1, li6);
        append_dev(div8, t19);
        append_dev(div8, div0);
        append_dev(div0, t20);
        mount_component(folderopen, div0, null);
        append_dev(div0, br0);
        append_dev(div0, t21);
        mount_component(folder0, div0, null);
        append_dev(div0, t22);
        append_dev(div0, br1);
        append_dev(div0, t23);
        mount_component(settings0, div0, null);
        append_dev(div0, t24);
        append_dev(div0, br2);
        append_dev(div0, t25);
        mount_component(folder1, div0, null);
        append_dev(div0, t26);
        append_dev(div0, strong1);
        append_dev(div0, t28);
        append_dev(div0, br3);
        append_dev(div0, t29);
        append_dev(div0, br4);
        append_dev(div0, t30);
        append_dev(div0, br5);
        append_dev(div0, t31);
        append_dev(div0, br6);
        append_dev(div0, t32);
        mount_component(folder2, div0, null);
        append_dev(div0, t33);
        append_dev(div0, strong2);
        append_dev(div0, t35);
        append_dev(div0, br7);
        append_dev(div0, t36);
        append_dev(div0, br8);
        append_dev(div0, t37);
        append_dev(div0, br9);
        append_dev(div0, t38);
        append_dev(div0, br10);
        append_dev(div0, t39);
        append_dev(div0, br11);
        append_dev(div0, t40);
        mount_component(folder3, div0, null);
        append_dev(div0, t41);
        append_dev(div0, br12);
        append_dev(div0, t42);
        mount_component(settings1, div0, null);
        append_dev(div0, t43);
        append_dev(div0, br13);
        append_dev(div0, t44);
        append_dev(div0, strong3);
        append_dev(div0, br14);
        append_dev(div0, t46);
        append_dev(div0, strong4);
        append_dev(div0, br15);
        append_dev(div0, t48);
        mount_component(settings2, div0, null);
        append_dev(div0, br16);
        append_dev(div0, t49);
        mount_component(settings3, div0, null);
        append_dev(div0, br17);
        append_dev(div0, t50);
        append_dev(div0, strong5);
        append_dev(div0, br18);
        append_dev(div0, t52);
        append_dev(div0, strong6);
        append_dev(div0, br19);
        append_dev(div0, t54);
        mount_component(settings4, div0, null);
        append_dev(div0, t55);
        append_dev(div0, br20);
        append_dev(div0, t56);
        append_dev(div8, t57);
        append_dev(div8, ul2);
        append_dev(ul2, li7);
        mount_component(settings5, li7, null);
        append_dev(li7, t58);
        append_dev(ul2, t59);
        append_dev(ul2, li8);
        append_dev(li8, t60);
        append_dev(li8, br21);
        append_dev(li8, t61);
        append_dev(div8, t62);
        append_dev(div8, h21);
        append_dev(div8, t64);
        append_dev(div8, h30);
        append_dev(div8, t66);
        append_dev(div8, ul3);
        append_dev(ul3, li9);
        append_dev(div8, t68);
        append_dev(div8, div1);
        append_dev(div1, t69);
        mount_component(folder4, div1, null);
        append_dev(div1, t70);
        append_dev(div1, br22);
        append_dev(div1, t71);
        append_dev(div1, strong7);
        append_dev(div1, t73);
        append_dev(div1, br23);
        append_dev(div1, t74);
        append_dev(div1, strong8);
        append_dev(div1, t76);
        append_dev(div1, br24);
        append_dev(div1, t77);
        append_dev(div1, strong9);
        append_dev(div1, t79);
        append_dev(div1, br25);
        append_dev(div1, t80);
        append_dev(div8, t81);
        append_dev(div8, br26);
        append_dev(div8, t82);
        append_dev(div8, strong10);
        append_dev(div8, br27);
        append_dev(div8, t84);
        append_dev(div8, div2);
        append_dev(div2, strong11);
        append_dev(div2, br28);
        append_dev(div2, t86);
        append_dev(div2, br29);
        append_dev(div2, t87);
        append_dev(div2, br30);
        append_dev(div2, t88);
        append_dev(div2, br31);
        append_dev(div2, t89);
        append_dev(div2, br32);
        append_dev(div2, t90);
        append_dev(div2, br33);
        append_dev(div2, t91);
        append_dev(div2, br34);
        append_dev(div2, t92);
        append_dev(div2, br35);
        append_dev(div2, t93);
        append_dev(div2, br36);
        append_dev(div2, t94);
        append_dev(div2, br37);
        append_dev(div2, t95);
        append_dev(div2, br38);
        append_dev(div2, t96);
        append_dev(div2, br39);
        append_dev(div2, t97);
        append_dev(div2, strong12);
        append_dev(div2, br40);
        append_dev(div2, t99);
        append_dev(div2, br41);
        append_dev(div2, t100);
        append_dev(div2, br42);
        append_dev(div2, t101);
        append_dev(div2, br43);
        append_dev(div2, t102);
        append_dev(div2, br44);
        append_dev(div2, t103);
        append_dev(div2, br45);
        append_dev(div2, t104);
        append_dev(div2, br46);
        append_dev(div2, t105);
        append_dev(div2, br47);
        append_dev(div2, t106);
        append_dev(div2, strong13);
        append_dev(div2, br48);
        append_dev(div2, t108);
        append_dev(div2, br49);
        append_dev(div2, t109);
        append_dev(div2, br50);
        append_dev(div2, t110);
        append_dev(div2, br51);
        append_dev(div2, t111);
        append_dev(div2, br52);
        append_dev(div2, t112);
        append_dev(div2, br53);
        append_dev(div2, t113);
        append_dev(div2, br54);
        append_dev(div2, t114);
        append_dev(div2, br55);
        append_dev(div2, t115);
        append_dev(div2, br56);
        append_dev(div2, t116);
        append_dev(div2, br57);
        append_dev(div2, t117);
        append_dev(div2, br58);
        append_dev(div2, t118);
        append_dev(div2, br59);
        append_dev(div2, t119);
        append_dev(div2, strong14);
        append_dev(div2, br60);
        append_dev(div2, t121);
        append_dev(div2, br61);
        append_dev(div2, t122);
        append_dev(div2, br62);
        append_dev(div2, t123);
        append_dev(div2, br63);
        append_dev(div2, t124);
        append_dev(div2, br64);
        append_dev(div2, t125);
        append_dev(div2, br65);
        append_dev(div2, t126);
        append_dev(div2, br66);
        append_dev(div2, t127);
        append_dev(div2, br67);
        append_dev(div2, t128);
        append_dev(div2, br68);
        append_dev(div2, t129);
        append_dev(div2, br69);
        append_dev(div2, t130);
        append_dev(div2, br70);
        append_dev(div2, t131);
        append_dev(div2, br71);
        append_dev(div2, t132);
        append_dev(div2, br72);
        append_dev(div2, t133);
        append_dev(div2, br73);
        append_dev(div2, t134);
        append_dev(div2, br74);
        append_dev(div2, t135);
        append_dev(div2, br75);
        append_dev(div2, t136);
        append_dev(div2, strong15);
        append_dev(div2, br76);
        append_dev(div2, t138);
        append_dev(div2, br77);
        append_dev(div2, t139);
        append_dev(div2, br78);
        append_dev(div2, t140);
        append_dev(div2, br79);
        append_dev(div2, t141);
        append_dev(div2, br80);
        append_dev(div2, t142);
        append_dev(div2, br81);
        append_dev(div2, t143);
        append_dev(div2, br82);
        append_dev(div2, t144);
        append_dev(div2, br83);
        append_dev(div2, t145);
        append_dev(div2, br84);
        append_dev(div2, t146);
        append_dev(div2, br85);
        append_dev(div2, t147);
        append_dev(div2, br86);
        append_dev(div2, t148);
        append_dev(div2, br87);
        append_dev(div2, t149);
        append_dev(div2, br88);
        append_dev(div2, t150);
        append_dev(div2, br89);
        append_dev(div2, t151);
        append_dev(div2, br90);
        append_dev(div2, t152);
        append_dev(div2, br91);
        append_dev(div2, t153);
        append_dev(div2, br92);
        append_dev(div2, t154);
        append_dev(div2, br93);
        append_dev(div2, t155);
        append_dev(div2, strong16);
        append_dev(div2, br94);
        append_dev(div2, t157);
        append_dev(div2, br95);
        append_dev(div2, t158);
        append_dev(div2, br96);
        append_dev(div2, t159);
        append_dev(div2, br97);
        append_dev(div2, t160);
        append_dev(div2, br98);
        append_dev(div2, t161);
        append_dev(div2, br99);
        append_dev(div2, t162);
        append_dev(div2, br100);
        append_dev(div2, t163);
        append_dev(div2, br101);
        append_dev(div2, t164);
        append_dev(div2, br102);
        append_dev(div2, t165);
        append_dev(div2, strong17);
        append_dev(div2, br103);
        append_dev(div2, t167);
        append_dev(div2, br104);
        append_dev(div2, t168);
        append_dev(div2, br105);
        append_dev(div2, t169);
        append_dev(div2, br106);
        append_dev(div2, t170);
        append_dev(div2, br107);
        append_dev(div2, t171);
        append_dev(div2, br108);
        append_dev(div2, t172);
        append_dev(div2, br109);
        append_dev(div2, t173);
        append_dev(div2, br110);
        append_dev(div2, t174);
        append_dev(div2, br111);
        append_dev(div2, t175);
        append_dev(div2, br112);
        append_dev(div2, t176);
        append_dev(div2, br113);
        append_dev(div2, t177);
        append_dev(div2, br114);
        append_dev(div2, t178);
        append_dev(div2, strong18);
        append_dev(div2, t180);
        append_dev(div2, br115);
        append_dev(div2, t181);
        append_dev(div2, br116);
        append_dev(div2, t182);
        append_dev(div2, br117);
        append_dev(div2, t183);
        append_dev(div2, br118);
        append_dev(div2, t184);
        append_dev(div2, br119);
        append_dev(div2, t185);
        append_dev(div2, br120);
        append_dev(div2, t186);
        append_dev(div2, br121);
        append_dev(div2, t187);
        append_dev(div2, br122);
        append_dev(div2, t188);
        append_dev(div2, strong19);
        append_dev(div2, t190);
        append_dev(div2, br123);
        append_dev(div2, t191);
        append_dev(div2, br124);
        append_dev(div2, t192);
        append_dev(div2, br125);
        append_dev(div2, t193);
        append_dev(div2, br126);
        append_dev(div2, t194);
        append_dev(div2, br127);
        append_dev(div2, t195);
        append_dev(div2, br128);
        append_dev(div2, t196);
        append_dev(div2, br129);
        append_dev(div2, t197);
        append_dev(div2, br130);
        append_dev(div2, t198);
        append_dev(div2, br131);
        append_dev(div2, t199);
        append_dev(div2, br132);
        append_dev(div2, t200);
        append_dev(div2, br133);
        append_dev(div2, t201);
        append_dev(div2, br134);
        append_dev(div2, t202);
        append_dev(div2, br135);
        append_dev(div2, t203);
        append_dev(div2, br136);
        append_dev(div2, t204);
        append_dev(div2, br137);
        append_dev(div2, t205);
        append_dev(div2, br138);
        append_dev(div2, t206);
        append_dev(div2, strong20);
        append_dev(div2, t208);
        append_dev(div2, br139);
        append_dev(div2, t209);
        append_dev(div2, br140);
        append_dev(div2, t210);
        append_dev(div2, br141);
        append_dev(div2, t211);
        append_dev(div2, br142);
        append_dev(div2, t212);
        append_dev(div2, br143);
        append_dev(div2, t213);
        append_dev(div2, strong21);
        append_dev(div2, t215);
        append_dev(div2, br144);
        append_dev(div2, t216);
        append_dev(div2, br145);
        append_dev(div2, t217);
        append_dev(div2, br146);
        append_dev(div2, t218);
        append_dev(div2, br147);
        append_dev(div2, t219);
        append_dev(div2, br148);
        append_dev(div2, t220);
        append_dev(div2, br149);
        append_dev(div2, t221);
        append_dev(div2, strong22);
        append_dev(div2, t223);
        append_dev(div2, br150);
        append_dev(div2, t224);
        append_dev(div2, br151);
        append_dev(div2, t225);
        append_dev(div2, br152);
        append_dev(div2, t226);
        append_dev(div2, br153);
        append_dev(div2, t227);
        append_dev(div2, br154);
        append_dev(div2, t228);
        append_dev(div2, br155);
        append_dev(div2, t229);
        append_dev(div2, br156);
        append_dev(div2, t230);
        append_dev(div2, br157);
        append_dev(div2, t231);
        append_dev(div2, br158);
        append_dev(div2, t232);
        append_dev(div2, br159);
        append_dev(div2, t233);
        append_dev(div2, br160);
        append_dev(div2, t234);
        append_dev(div2, br161);
        append_dev(div2, t235);
        append_dev(div2, br162);
        append_dev(div2, t236);
        append_dev(div2, br163);
        append_dev(div2, t237);
        append_dev(div2, br164);
        append_dev(div2, t238);
        append_dev(div2, br165);
        append_dev(div2, t239);
        append_dev(div2, br166);
        append_dev(div2, t240);
        append_dev(div2, br167);
        append_dev(div2, t241);
        append_dev(div2, br168);
        append_dev(div2, t242);
        append_dev(div2, br169);
        append_dev(div2, t243);
        append_dev(div2, br170);
        append_dev(div2, t244);
        append_dev(div2, br171);
        append_dev(div2, t245);
        append_dev(div2, br172);
        append_dev(div2, t246);
        append_dev(div2, br173);
        append_dev(div2, t247);
        append_dev(div2, strong23);
        append_dev(div2, br174);
        append_dev(div2, t249);
        append_dev(div2, br175);
        append_dev(div2, t250);
        append_dev(div2, br176);
        append_dev(div2, t251);
        append_dev(div2, br177);
        append_dev(div2, t252);
        append_dev(div2, br178);
        append_dev(div2, t253);
        append_dev(div2, br179);
        append_dev(div2, t254);
        append_dev(div2, br180);
        append_dev(div2, t255);
        append_dev(div2, br181);
        append_dev(div2, t256);
        append_dev(div2, br182);
        append_dev(div2, t257);
        append_dev(div2, br183);
        append_dev(div2, t258);
        append_dev(div2, br184);
        append_dev(div2, t259);
        append_dev(div2, br185);
        append_dev(div2, t260);
        append_dev(div2, br186);
        append_dev(div2, t261);
        append_dev(div2, br187);
        append_dev(div2, t262);
        append_dev(div2, br188);
        append_dev(div2, t263);
        append_dev(div2, br189);
        append_dev(div2, t264);
        append_dev(div2, br190);
        append_dev(div2, t265);
        append_dev(div2, br191);
        append_dev(div2, t266);
        append_dev(div2, br192);
        append_dev(div2, t267);
        append_dev(div2, br193);
        append_dev(div2, t268);
        append_dev(div2, br194);
        append_dev(div2, t269);
        append_dev(div2, br195);
        append_dev(div2, t270);
        append_dev(div2, br196);
        append_dev(div2, t271);
        append_dev(div2, br197);
        append_dev(div2, t272);
        append_dev(div2, br198);
        append_dev(div2, t273);
        append_dev(div2, br199);
        append_dev(div2, t274);
        append_dev(div2, br200);
        append_dev(div2, t275);
        append_dev(div2, strong24);
        append_dev(div2, t277);
        append_dev(div2, br201);
        append_dev(div2, t278);
        append_dev(div2, br202);
        append_dev(div2, t279);
        append_dev(div2, br203);
        append_dev(div2, t280);
        append_dev(div2, br204);
        append_dev(div2, t281);
        append_dev(div2, br205);
        append_dev(div2, t282);
        append_dev(div2, br206);
        append_dev(div2, t283);
        append_dev(div2, br207);
        append_dev(div2, t284);
        append_dev(div2, br208);
        append_dev(div2, t285);
        append_dev(div2, br209);
        append_dev(div2, t286);
        append_dev(div2, br210);
        append_dev(div2, t287);
        append_dev(div8, t288);
        append_dev(div8, br211);
        append_dev(div8, t289);
        append_dev(div8, strong25);
        append_dev(div8, br212);
        append_dev(div8, t291);
        append_dev(div8, br213);
        append_dev(div8, t292);
        append_dev(div8, strong26);
        append_dev(div8, br214);
        append_dev(div8, t294);
        append_dev(div8, ul4);
        append_dev(ul4, li10);
        append_dev(ul4, t296);
        append_dev(ul4, li11);
        append_dev(li11, t297);
        append_dev(li11, br215);
        append_dev(li11, t298);
        append_dev(div8, t299);
        append_dev(div8, div3);
        append_dev(div3, t300);
        append_dev(div3, br216);
        append_dev(div3, t301);
        append_dev(div3, br217);
        append_dev(div3, t302);
        append_dev(div8, t303);
        append_dev(div8, br218);
        append_dev(div8, t304);
        append_dev(div8, strong27);
        append_dev(div8, br219);
        append_dev(div8, t306);
        append_dev(div8, ul5);
        append_dev(ul5, li12);
        append_dev(ul5, t308);
        append_dev(ul5, li13);
        append_dev(ul5, t310);
        append_dev(ul5, li14);
        append_dev(li14, t311);
        append_dev(li14, br220);
        append_dev(li14, t312);
        append_dev(li14, a0);
        mount_component(openinnew0, a0, null);
        append_dev(div8, t313);
        append_dev(div8, div4);
        append_dev(div4, table0);
        append_dev(table0, tr0);
        append_dev(tr0, td0);
        append_dev(tr0, t315);
        append_dev(tr0, td1);
        append_dev(table0, t317);
        append_dev(table0, tr1);
        append_dev(tr1, td2);
        append_dev(tr1, t319);
        append_dev(tr1, td3);
        append_dev(table0, t321);
        append_dev(table0, tr2);
        append_dev(tr2, td4);
        append_dev(tr2, t323);
        append_dev(tr2, td5);
        append_dev(table0, t325);
        append_dev(table0, tr3);
        append_dev(tr3, td6);
        append_dev(tr3, t327);
        append_dev(tr3, td7);
        append_dev(table0, t329);
        append_dev(table0, tr4);
        append_dev(tr4, td8);
        append_dev(tr4, t331);
        append_dev(tr4, td9);
        append_dev(table0, t333);
        append_dev(table0, tr5);
        append_dev(tr5, td10);
        append_dev(tr5, t335);
        append_dev(tr5, td11);
        append_dev(table0, t337);
        append_dev(table0, tr6);
        append_dev(tr6, td12);
        append_dev(tr6, t339);
        append_dev(tr6, td13);
        append_dev(table0, t341);
        append_dev(table0, tr7);
        append_dev(tr7, td14);
        append_dev(tr7, t343);
        append_dev(tr7, td15);
        append_dev(div4, t345);
        append_dev(div8, t346);
        append_dev(div8, br221);
        append_dev(div8, t347);
        append_dev(div8, strong28);
        append_dev(div8, br222);
        append_dev(div8, t349);
        append_dev(div8, ul6);
        append_dev(ul6, li15);
        append_dev(ul6, t351);
        append_dev(ul6, li16);
        append_dev(ul6, t353);
        append_dev(ul6, li17);
        append_dev(li17, t354);
        append_dev(li17, code0);
        append_dev(li17, t356);
        append_dev(li17, code1);
        append_dev(li17, t358);
        append_dev(ul6, t359);
        append_dev(ul6, li18);
        append_dev(li18, t360);
        append_dev(li18, code2);
        append_dev(li18, t362);
        append_dev(li18, br223);
        append_dev(li18, t363);
        append_dev(li18, code3);
        append_dev(li18, t365);
        append_dev(li18, code4);
        append_dev(li18, t367);
        append_dev(ul6, t368);
        append_dev(ul6, li19);
        append_dev(li19, t369);
        append_dev(li19, code5);
        append_dev(li19, t371);
        append_dev(ul6, t372);
        append_dev(ul6, li20);
        append_dev(li20, t373);
        append_dev(li20, code6);
        append_dev(li20, t375);
        append_dev(li20, code7);
        append_dev(li20, t377);
        append_dev(ul6, t378);
        append_dev(ul6, li21);
        append_dev(li21, t379);
        append_dev(li21, a1);
        append_dev(li21, t381);
        append_dev(div8, t382);
        append_dev(div8, div5);
        append_dev(div5, table2);
        append_dev(table2, tr8);
        append_dev(tr8, td16);
        append_dev(tr8, td17);
        append_dev(table2, t384);
        append_dev(table2, tr9);
        append_dev(tr9, td18);
        append_dev(tr9, td19);
        append_dev(table2, t387);
        append_dev(table2, tr10);
        append_dev(tr10, td20);
        append_dev(tr10, td21);
        append_dev(table2, t390);
        append_dev(table2, tr11);
        append_dev(tr11, td22);
        append_dev(tr11, td23);
        append_dev(table2, t393);
        append_dev(table2, tr12);
        append_dev(tr12, td24);
        append_dev(tr12, td25);
        append_dev(table2, t396);
        append_dev(table2, tr13);
        append_dev(tr13, td26);
        append_dev(tr13, td27);
        append_dev(table2, t399);
        append_dev(table2, tr14);
        append_dev(tr14, td28);
        append_dev(tr14, td29);
        append_dev(table2, t402);
        append_dev(table2, tr15);
        append_dev(tr15, td30);
        append_dev(tr15, td31);
        append_dev(table2, t405);
        append_dev(table2, tr16);
        append_dev(tr16, td32);
        append_dev(tr16, td33);
        append_dev(table2, t408);
        append_dev(table2, tr17);
        append_dev(tr17, td34);
        append_dev(tr17, td35);
        append_dev(table2, t411);
        append_dev(table2, tr18);
        append_dev(tr18, td36);
        append_dev(tr18, td37);
        append_dev(table2, t414);
        append_dev(table2, tr19);
        append_dev(tr19, td38);
        append_dev(tr19, td39);
        append_dev(table2, t417);
        append_dev(table2, tr21);
        append_dev(tr21, td42);
        append_dev(td42, t418);
        append_dev(td42, br224);
        append_dev(td42, t419);
        append_dev(td42, table1);
        append_dev(table1, tr20);
        append_dev(tr20, td40);
        append_dev(td40, t420);
        append_dev(td40, br225);
        append_dev(td40, t421);
        append_dev(td40, br226);
        append_dev(td40, t422);
        append_dev(td40, br227);
        append_dev(td40, t423);
        append_dev(td40, br228);
        append_dev(td40, t424);
        append_dev(td40, br229);
        append_dev(td40, t425);
        append_dev(td40, br230);
        append_dev(td40, t426);
        append_dev(td40, br231);
        append_dev(td40, t427);
        append_dev(td40, br232);
        append_dev(tr20, t428);
        append_dev(tr20, td41);
        append_dev(td41, span0);
        append_dev(td41, br233);
        append_dev(td41, t430);
        append_dev(td41, span1);
        append_dev(td41, br234);
        append_dev(td41, t432);
        append_dev(td41, span2);
        append_dev(td41, br235);
        append_dev(td41, t434);
        append_dev(td41, span3);
        append_dev(td41, br236);
        append_dev(td41, t436);
        append_dev(td41, span4);
        append_dev(td41, br237);
        append_dev(td41, t438);
        append_dev(td41, span5);
        append_dev(td41, br238);
        append_dev(td41, t440);
        append_dev(td41, span6);
        append_dev(td41, br239);
        append_dev(td41, t442);
        append_dev(td41, span7);
        append_dev(td42, t444);
        append_dev(td42, br240);
        append_dev(tr21, t445);
        append_dev(tr21, td43);
        append_dev(td43, t446);
        append_dev(td43, br241);
        append_dev(td43, t447);
        append_dev(td43, br242);
        append_dev(td43, t448);
        append_dev(td43, br243);
        append_dev(td43, t449);
        append_dev(td43, code8);
        append_dev(td43, t451);
        append_dev(td43, br244);
        append_dev(td43, t452);
        append_dev(td43, a2);
        append_dev(a2, t453);
        mount_component(openinnew1, a2, null);
        append_dev(table2, t454);
        append_dev(table2, tr22);
        append_dev(tr22, td44);
        append_dev(tr22, t456);
        append_dev(tr22, td45);
        append_dev(td45, t457);
        append_dev(td45, br245);
        append_dev(td45, t458);
        append_dev(td45, a3);
        append_dev(td45, t460);
        append_dev(table2, t461);
        append_dev(table2, tr23);
        append_dev(tr23, td46);
        append_dev(tr23, t463);
        append_dev(tr23, td47);
        append_dev(div5, t464);
        append_dev(div8, t465);
        append_dev(div8, br246);
        append_dev(div8, t466);
        append_dev(div8, h22);
        append_dev(div8, t468);
        append_dev(div8, ul7);
        append_dev(ul7, li22);
        append_dev(li22, t469);
        append_dev(li22, code9);
        append_dev(li22, t471);
        append_dev(li22, code10);
        append_dev(li22, t473);
        append_dev(li22, code11);
        append_dev(li22, t475);
        append_dev(ul7, t476);
        append_dev(ul7, li23);
        append_dev(li23, t477);
        append_dev(li23, code12);
        append_dev(li23, t479);
        append_dev(li23, code13);
        append_dev(li23, t481);
        append_dev(ul7, t482);
        append_dev(ul7, li24);
        append_dev(div8, t484);
        append_dev(div8, h31);
        append_dev(div8, t486);
        append_dev(div8, ul8);
        append_dev(ul8, li25);
        append_dev(li25, t487);
        append_dev(li25, code14);
        append_dev(li25, t489);
        append_dev(li25, code15);
        append_dev(li25, t491);
        append_dev(ul8, t492);
        append_dev(ul8, li26);
        append_dev(ul8, t494);
        append_dev(ul8, li27);
        append_dev(ul8, t496);
        append_dev(ul8, li28);
        append_dev(li28, t497);
        append_dev(li28, code16);
        append_dev(li28, t499);
        append_dev(li28, br247);
        append_dev(li28, t500);
        append_dev(li28, div6);
        append_dev(div6, t501);
        append_dev(div6, br248);
        append_dev(div6, t502);
        append_dev(ul8, t503);
        append_dev(ul8, li29);
        append_dev(div8, t505);
        append_dev(div8, h4);
        append_dev(div8, t507);
        append_dev(div8, div7);
        append_dev(div7, t508);
        append_dev(div7, a4);
        mount_component(openinnew2, a4, null);
        append_dev(div7, t509);
        append_dev(div7, br249);
        append_dev(div7, t510);
        append_dev(div7, a5);
        mount_component(openinnew3, a5, null);
        append_dev(div7, t511);
        append_dev(div7, br250);
        append_dev(div7, t512);
        append_dev(div8, t513);
        append_dev(div8, h32);
        append_dev(div8, t515);
        append_dev(div8, ul9);
        append_dev(ul9, li30);
        append_dev(ul9, t517);
        append_dev(ul9, li31);
        append_dev(ul9, t519);
        append_dev(ul9, li32);
        append_dev(ul9, t521);
        append_dev(ul9, li33);
        append_dev(div8, t523);
        append_dev(div8, h33);
        append_dev(div8, t525);
        append_dev(div8, ul10);
        append_dev(ul10, li34);
        append_dev(li34, t526);
        append_dev(li34, code17);
        append_dev(li34, t528);
        append_dev(li34, code18);
        append_dev(li34, t530);
        append_dev(li34, code19);
        append_dev(li34, t532);
        append_dev(div8, t533);
        append_dev(div8, h34);
        append_dev(div8, t535);
        append_dev(div8, ul11);
        append_dev(ul11, li35);
        append_dev(ul11, t537);
        append_dev(ul11, li36);
        append_dev(ul11, t539);
        append_dev(ul11, li37);
        append_dev(li37, t540);
        append_dev(li37, a6);
        append_dev(li37, t542);
        append_dev(div8, t543);
        append_dev(div8, br251);
        append_dev(div8, t544);
        append_dev(div8, br252);
        current = true;
      },
      p: noop,
      i: function intro(local) {
        if (current) return;
        transition_in(folderopen.$$.fragment, local);
        transition_in(folder0.$$.fragment, local);
        transition_in(settings0.$$.fragment, local);
        transition_in(folder1.$$.fragment, local);
        transition_in(folder2.$$.fragment, local);
        transition_in(folder3.$$.fragment, local);
        transition_in(settings1.$$.fragment, local);
        transition_in(settings2.$$.fragment, local);
        transition_in(settings3.$$.fragment, local);
        transition_in(settings4.$$.fragment, local);
        transition_in(settings5.$$.fragment, local);
        transition_in(folder4.$$.fragment, local);
        transition_in(openinnew0.$$.fragment, local);
        transition_in(openinnew1.$$.fragment, local);
        transition_in(openinnew2.$$.fragment, local);
        transition_in(openinnew3.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        transition_out(folderopen.$$.fragment, local);
        transition_out(folder0.$$.fragment, local);
        transition_out(settings0.$$.fragment, local);
        transition_out(folder1.$$.fragment, local);
        transition_out(folder2.$$.fragment, local);
        transition_out(folder3.$$.fragment, local);
        transition_out(settings1.$$.fragment, local);
        transition_out(settings2.$$.fragment, local);
        transition_out(settings3.$$.fragment, local);
        transition_out(settings4.$$.fragment, local);
        transition_out(settings5.$$.fragment, local);
        transition_out(folder4.$$.fragment, local);
        transition_out(openinnew0.$$.fragment, local);
        transition_out(openinnew1.$$.fragment, local);
        transition_out(openinnew2.$$.fragment, local);
        transition_out(openinnew3.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div8);
        destroy_component(folderopen);
        destroy_component(folder0);
        destroy_component(settings0);
        destroy_component(folder1);
        destroy_component(folder2);
        destroy_component(folder3);
        destroy_component(settings1);
        destroy_component(settings2);
        destroy_component(settings3);
        destroy_component(settings4);
        destroy_component(settings5);
        destroy_component(folder4);
        destroy_component(openinnew0);
        destroy_component(openinnew1);
        destroy_component(openinnew2);
        destroy_component(openinnew3);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$5.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$5($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Settings', slots, []);
    var writable_props = [];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Settings> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$capture_state = function () {
      return {
        Folder: Folder,
        FolderOpen: Folder_open,
        OpenInNew: Open_in_new,
        Settings: Settings
      };
    };

    return [];
  }

  var Settings_1 = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Settings_1, _SvelteComponentDev);

    var _super = _createSuper$5(Settings_1);

    function Settings_1(options) {
      var _this;

      _classCallCheck(this, Settings_1);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$5, create_fragment$5, safe_not_equal, {});
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Settings_1",
        options: options,
        id: create_fragment$5.name
      });
      return _this;
    }

    return Settings_1;
  }(SvelteComponentDev);

  function _createSuper$4(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$4(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$4() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$4 = "src/pages/About.svelte";

  function create_fragment$4(ctx) {
    var div;
    var raw_value = marked(
    /*text*/
    ctx[0]) + "";
    var block = {
      c: function create() {
        div = element("div");
        attr_dev(div, "class", "container");
        add_location(div, file$4, 64, 0, 1372);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, div, anchor);
        div.innerHTML = raw_value;
      },
      p: noop,
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(div);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$4.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$4($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('About', slots, []);
    var text = "\nSvelte-eCart \u306B\u3064\u3044\u3066\n===================\n\n### \u6982\u8981\u3068\u7279\u5FB4\n\n- \u5F53\u30BD\u30D5\u30C8\u30A6\u30A7\u30A2\u306F\u3001IT \u6280\u8853\u306B\u4E0D\u6163\u308C\u306A\u4EBA\u3067\u3082\u5C0E\u5165\u3068\u904B\u55B6\u304C\u5BB9\u6613\u306B\u51FA\u6765\u308B\u69D8\u306B\u5916\u90E8\u4F9D\u5B58\u3092\u6975\u529B\u907F\u3051\u308B\u65B9\u91DD\u3067\u5236\u4F5C\u3055\u308C\u3066\u3044\u307E\u3059\u3002\n\n- \u30C7\u30FC\u30BF\u306E\u5909\u66F4\u8FFD\u52A0\u306F\u3001\u304A\u4F7F\u3044\u306E\u30A8\u30C7\u30A3\u30BF(\u30E1\u30E2\u5E33\u306A\u3069)\u3067\u7C21\u5358\u306B\u7DE8\u96C6\u3059\u308B\u3053\u3068\u304C\u51FA\u6765\u307E\u3059\u3002\n\n- \u30B5\u30FC\u30D0\u30FC\u306B\u4F9D\u5B58\u3059\u308B\u6280\u8853(CGI \u7B49)\u3092\u7528\u3044\u3066\u3044\u307E\u305B\u3093\u306E\u3067\u3001\u8A2D\u7F6E\u306B\u7279\u5225\u306A\u77E5\u8B58\u306F\u5FC5\u8981\u3068\u3057\u307E\u305B\u3093\u3002\n\n- OS(Windows, iOS, Linux \u7B49)\u3084\u643A\u5E2F\u7AEF\u672B\u6A5F\u7A2E\u306B\u4F9D\u5B58\u3057\u307E\u305B\u3093\u306E\u3067\u3001\u73FE\u884C\u306E\u3069\u306E\u30D6\u30E9\u30A6\u30B6(IE11 \u4EE5\u964D)\u3067\u3082\u95B2\u89A7\u53EF\u80FD\u3067\u3059\u3002\n\n- \u30ED\u30FC\u30AB\u30EB\u74B0\u5883\u3067\u3082\u52D5\u4F5C\u3057\u3001\u30B5\u30FC\u30D0\u30FC\u3078\u306E\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u524D\u306B\u30C6\u30B9\u30C8\u53CA\u3073\u4FEE\u6B63\u3092\u5341\u5206\u884C\u3046\u3053\u3068\u304C\u51FA\u6765\u307E\u3059(\u30A4\u30F3\u30BF\u30FC\u30CD\u30C3\u30C8\u63A5\u7D9A\u306F\u4E0D\u8981)\u3002\n\n- \u6CE8\u6587\u30E1\u30A4\u30EB\u306E\u9001\u4FE1\u3082\u8CFC\u8CB7\u8005\u306E PC\u30FB\u643A\u5E2F\u7AEF\u672B\u306B\u5099\u308F\u3063\u305F\u30E1\u30A4\u30EB\u6A5F\u80FD\u3092\u5229\u7528\u3057\u30B5\u30FC\u30D0\u30FC\u306B\u4F9D\u5B58\u3057\u307E\u305B\u3093\u3002\n\n### \u5236\u4F5C\u306E\u76EE\u7684\n\n- \u65B0\u578B\u30B3\u30ED\u30CA\u30A6\u30A4\u30EB\u30B9\u611F\u67D3\u75C7 (COVID-19) \u306E\u7316\u7357\u306B\u4F9D\u308A\u56FD\u5168\u4F53\u304C\u7D4C\u6E08\u7684\u56F0\u7AAE\u306B\u9665\u3044\u308B\u4E2D\u3001\u751F\u7523\u8005\u53CA\u3073\u6D88\u8CBB\u8005\u304C\u4E92\u3044\u306B\u7D50\u3073\u4ED8\u304F\u3053\u3068\u3067\u5171\u540C\u3057\u3066\u56F0\u96E3\u306A\u72B6\u6CC1\u306B\u5BFE\u51E6\u3057\u3066\u3044\u304F\u3053\u3068\u3092\u76EE\u7684\u3068\u3057\u3066\u3044\u307E\u3059\u3002\n\n- \u5927\u624BIT\u4F01\u696D\u306E\u63D0\u4F9B\u3059\u308B\u30D7\u30E9\u30C3\u30C8\u30D5\u30A9\u30FC\u30E0\u3092\u901A\u3059\u3053\u3068\u306F\u3001\u521D\u671F\u8CBB\u7528\u3084\u30B7\u30B9\u30C6\u30E0\u5229\u7528\u6599\u53CA\u3073\u58F2\u4E0A\u30ED\u30A4\u30E4\u30EB\u30C6\u30A3\u7B49\u306F\u7121\u6599\u3068\u8B33\u3063\u3066\u3044\u3066\u3082\u3001\u58F2\u4E0A\u306B\u5373\u3057\u3066\u69D8\u3005\u306A\u540D\u76EE\u306E\u8CA0\u62C5\u91D1\u3092\u5FB4\u53CE\u3055\u308C\u308B\u4E8B\u4F8B\u304C\u5927\u534A\u3067\u3059(\u7D0430%\u7A0B\u5EA6)\u3002 \n\n  \u305D\u3046\u3057\u305F\u4E2D\u9593\u7684\u306B\u639B\u304B\u308B\u4F59\u5206\u306A\u8CBB\u7528\u3092\u4E00\u5207\u7121\u304F\u3057\u3001\u8CFC\u8CB7\u8005\u3068\u306E\u76F4\u63A5\u306E\u6C7A\u6E08\u624B\u6570\u6599\u306E\u307F\u306B\u9650\u5B9A\u3059\u308B\u3053\u3068\u3067\u3001\u751F\u7523\u8005\u306E\u6240\u5F97\u3068\u751F\u6D3B\u306E\u5411\u4E0A\u3092\u4FDD\u8A3C\u3057\u3066\u3044\u304F\u3053\u3068\u3092\u91CD\u8981\u3068\u8003\u3048\u307E\u3059\u3002\n\n### \u904B\u55B6\u4E0A\u306E\u7D4C\u8CBB\n\n- \u904B\u55B6\u4E0A\u306E\u7D4C\u8CBB\u306F\u3001HP\u3092\u8A2D\u7F6E\u3059\u308B\u30EC\u30F3\u30BF\u30EB\u30B5\u30FC\u30D0\u30FC\u306E\u30DB\u30B9\u30C6\u30A3\u30F3\u30B0\u6599\u306E\u307F\u3067\u3059\u3002\n\n- \u73FE\u5728\u306E\u30DB\u30B9\u30C6\u30A3\u30F3\u30B0\u5229\u7528\u6599\u306E\u6700\u5B89\u5024\u306F\u5927\u624B\u3067\u3082\u6708\u984D\uFF11\uFF10\uFF10\u5186\u304B\u3089\u3042\u308A\u307E\u3059\u3002\n\n### \u5236\u4F5C\u4E0A\u306E\u7406\u5FF5\n\n- \u7279\u306B\u8FB2\u696D\u5206\u91CE\u3067\u306E\u6D3B\u7528\u3092\u60F3\u5B9A\u3057\u3001\u901A\u5E38\u306E\u5546\u54C1\u306F\u52FF\u8AD6\u3001\u4ECA\u8FC4B\u7D1A\u54C1\u3068\u3057\u3066\u5916\u3055\u308C\u3066\u3044\u305F\u985E\u306E\u3082\u306E\u3082\u542B\u3081\u6D41\u901A\u306B\u4E57\u305B\u308B\u3053\u3068\u3067\u751F\u7523\u8005\u306E\u5897\u53CE\u3092\u8A08\u308A\u3001\u4E00\u65B9\u5B89\u4FA1\u3067\u6D88\u8CBB\u8005\u306B\u63D0\u4F9B\u53EF\u80FD\u3068\u3059\u308B\u3053\u3068\u3092\u671F\u5F85\u3057\u3066\u3044\u307E\u3059\u3002\n\n- \u5730\u57DF\u6027\u3092\u5E73\u6E96\u5316\u3059\u308BIT\u6280\u8853\u306E\u7279\u6027\u3092\u751F\u304B\u3057\u305D\u308C\u3092\u99C6\u4F7F\u3059\u308B\u3053\u3068\u3067\u3001\u5730\u65B9\u3068\u90FD\u5E02\u3068\u306E\u683C\u5DEE\u3092\u5C11\u3057\u3067\u3082\u7121\u304F\u3057\u3066\u3044\u304F\u3053\u3068\u3092\u7406\u5FF5\u3068\u3057\u3066\u5236\u4F5C\u3055\u308C\u3066\u3044\u307E\u3059\u3002\n\n### \u4F7F\u7528\u4E0A\u306E\u6CE8\u610F\n\n- \u5F53\u30BD\u30D5\u30C8\u30A6\u30A7\u30A2\u306F\u3001\u30AA\u30FC\u30D7\u30F3\u30BD\u30FC\u30B9\u3068\u3057\u3066\u516C\u958B\u3055\u308C\u3066\u3044\u307E\u3059(MIT \u30E9\u30A4\u30BB\u30F3\u30B9)\u3002\n\n- \u5F53\u30B7\u30B9\u30C6\u30E0\u3067\u306F\u3001Google\u793E\u306E\u63D0\u4F9B\u3059\u308B\u30C7\u30B6\u30A4\u30F3\u30B7\u30B9\u30C6\u30E0 [MDC]( https://material.io/components/) \u3092\u7528\u3044\u3066\u3044\u307E\u3059\u3002 \n\n  \u7BA1\u7406\u7DE8\u96C6\u4F5C\u696D\u6642\u306B\u306F\u30EA\u30BD\u30FC\u30B9\u3092\u30ED\u30FC\u30AB\u30EB\u306B\u8A2D\u7F6E\u3057\u3066\u56DE\u7DDA\u8CA0\u8377\u306E\u8EFD\u6E1B\u3059\u308B\u74B0\u5883\u3082\u7528\u610F\u3057\u3066\u3044\u307E\u3059(index-admin.html)\u3002\n\n### \u514D\u8CAC\u4E8B\u9805\n\n- \u5F53\u30BD\u30D5\u30C8\u30A6\u30A7\u30A2\u3092\u4F7F\u3046\u3053\u3068\u3067\u751F\u3058\u305F\u904B\u55B6\u4E0A\u306E\u640D\u5BB3\u306B\u5BFE\u3057\u3001\u5982\u4F55\u306A\u308B\u5834\u5408\u306B\u304A\u3044\u3066\u3082\u305D\u306E\u8CAC\u4EFB\u3092\u8CA0\u3046\u3053\u3068\u306F\u51FA\u6765\u307E\u305B\u3093\u3002\n\n- \u4F7F\u7528\u8005\u81EA\u3089\u306E\u8CAC\u4EFB\u306B\u304A\u3044\u3066\u306E\u307F\u6D3B\u7528\u3092\u304A\u9858\u3044\u3057\u307E\u3059\u3002\n  \n<br>\n<br>\n<br>\n<br>\n   \n   ";
    var writable_props = [];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<About> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$capture_state = function () {
      return {
        marked: marked,
        text: text
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('text' in $$props) $$invalidate(0, text = $$props.text);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [text];
  }

  var About = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(About, _SvelteComponentDev);

    var _super = _createSuper$4(About);

    function About(options) {
      var _this;

      _classCallCheck(this, About);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$4, create_fragment$4, safe_not_equal, {});
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "About",
        options: options,
        id: create_fragment$4.name
      });
      return _this;
    }

    return About;
  }(SvelteComponentDev);

  var $ = _export;
  var global$1 = global$17;
  var call = functionCall;
  var uncurryThis = functionUncurryThis;
  var requireObjectCoercible = requireObjectCoercible$c;
  var isCallable = isCallable$p;
  var isRegExp = isRegexp;
  var toString = toString$f;
  var getMethod = getMethod$8;
  var regExpFlags = regexpFlags$1;
  var getSubstitution = getSubstitution$2;
  var wellKnownSymbol = wellKnownSymbol$s;

  var REPLACE = wellKnownSymbol('replace');
  var RegExpPrototype = RegExp.prototype;
  var TypeError$1 = global$1.TypeError;
  var getFlags = uncurryThis(regExpFlags);
  var indexOf = uncurryThis(''.indexOf);
  uncurryThis(''.replace);
  var stringSlice = uncurryThis(''.slice);
  var max = Math.max;

  var stringIndexOf = function (string, searchValue, fromIndex) {
    if (fromIndex > string.length) return -1;
    if (searchValue === '') return fromIndex;
    return indexOf(string, searchValue, fromIndex);
  };

  // `String.prototype.replaceAll` method
  // https://tc39.es/ecma262/#sec-string.prototype.replaceall
  $({ target: 'String', proto: true }, {
    replaceAll: function replaceAll(searchValue, replaceValue) {
      var O = requireObjectCoercible(this);
      var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;
      var position = 0;
      var endOfLastMatch = 0;
      var result = '';
      if (searchValue != null) {
        IS_REG_EXP = isRegExp(searchValue);
        if (IS_REG_EXP) {
          flags = toString(requireObjectCoercible('flags' in RegExpPrototype
            ? searchValue.flags
            : getFlags(searchValue)
          ));
          if (!~indexOf(flags, 'g')) throw TypeError$1('`.replaceAll` does not allow non-global regexes');
        }
        replacer = getMethod(searchValue, REPLACE);
        if (replacer) {
          return call(replacer, searchValue, O, replaceValue);
        }
      }
      string = toString(O);
      searchString = toString(searchValue);
      functionalReplace = isCallable(replaceValue);
      if (!functionalReplace) replaceValue = toString(replaceValue);
      searchLength = searchString.length;
      advanceBy = max(1, searchLength);
      position = stringIndexOf(string, searchString, 0);
      while (position !== -1) {
        replacement = functionalReplace
          ? toString(replaceValue(searchString, position, string))
          : getSubstitution(searchString, string, position, [], undefined, replaceValue);
        result += stringSlice(string, endOfLastMatch, position) + replacement;
        endOfLastMatch = position + searchLength;
        position = stringIndexOf(string, searchString, position + advanceBy);
      }
      if (endOfLastMatch < string.length) {
        result += stringSlice(string, endOfLastMatch);
      }
      return result;
    }
  });

  function _createSuper$3(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$3(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$3() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$3 = "src/pages/DataEditor.svelte";

  function get_each_context(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[31] = list[i].subject;
    child_ctx[33] = i;
    return child_ctx;
  }

  function get_each_context_1(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[34] = list[i];
    child_ctx[33] = i;
    return child_ctx;
  }

  function get_each_context_2(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[34] = list[i];
    child_ctx[36] = list;
    child_ctx[33] = i;
    return child_ctx;
  }

  function get_each_context_3(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[37] = list[i];
    child_ctx[33] = i;
    return child_ctx;
  }

  function get_each_context_4(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[34] = list[i];
    child_ctx[33] = i;
    return child_ctx;
  }

  function get_each_context_5(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[37] = list[i];
    child_ctx[40] = list;
    child_ctx[33] = i;
    return child_ctx;
  }

  function get_each_context_6(ctx, list, i) {
    var child_ctx = ctx.slice();
    child_ctx[34] = list[i];
    child_ctx[41] = list;
    child_ctx[33] = i;
    return child_ctx;
  } // (386:15) {#each items as item,i}


  function create_each_block_6(ctx) {
    var tr;
    var td;
    var label;
    var span4;
    var span0;
    var t0;
    var span2;
    var span1;
    var t1_value =
    /*item*/
    ctx[34].ph + "";
    var t1;
    var t2;
    var span3;
    var t3;
    var input;
    var input_placeholder_value;
    var t4;
    var mounted;
    var dispose;

    function input_input_handler() {
      /*input_input_handler*/
      ctx[15].call(input,
      /*each_value_6*/
      ctx[41],
      /*i*/
      ctx[33]);
    }

    var block = {
      c: function create() {
        tr = element("tr");
        td = element("td");
        label = element("label");
        span4 = element("span");
        span0 = element("span");
        t0 = space();
        span2 = element("span");
        span1 = element("span");
        t1 = text(t1_value);
        t2 = space();
        span3 = element("span");
        t3 = space();
        input = element("input");
        t4 = space();
        attr_dev(span0, "class", "mdc-notched-outline__leading");
        add_location(span0, file$3, 391, 28, 8071);
        attr_dev(span1, "class", "mdc-floating-label");
        attr_dev(span1, "id", "label-" +
        /*i*/
        ctx[33]);
        add_location(span1, file$3, 393, 30, 8222);
        attr_dev(span2, "class", "mdc-notched-outline__notch");
        add_location(span2, file$3, 392, 28, 8150);
        attr_dev(span3, "class", "mdc-notched-outline__trailing");
        add_location(span3, file$3, 397, 28, 8413);
        attr_dev(span4, "class", "mdc-notched-outline");
        add_location(span4, file$3, 390, 26, 8008);
        attr_dev(input, "type", "text");
        attr_dev(input, "class", "mdc-text-field__input");
        attr_dev(input, "aria-labelledby", "label-" +
        /*i*/
        ctx[33]);
        attr_dev(input, "placeholder", input_placeholder_value =
        /*item*/
        ctx[34].ph);
        set_style(input, "width",
        /*wInput1*/
        ctx[3] + "px");
        add_location(input, file$3, 400, 26, 8526);
        attr_dev(label, "class", "mdc-text-field mdc-text-field--outlined");
        add_location(label, file$3, 389, 24, 7926);
        attr_dev(td, "class", "svelte-jjz055");
        add_location(td, file$3, 387, 21, 7883);
        add_location(tr, file$3, 386, 18, 7856);
      },
      m: function mount(target, anchor) {
        insert_dev(target, tr, anchor);
        append_dev(tr, td);
        append_dev(td, label);
        append_dev(label, span4);
        append_dev(span4, span0);
        append_dev(span4, t0);
        append_dev(span4, span2);
        append_dev(span2, span1);
        append_dev(span1, t1);
        append_dev(span4, t2);
        append_dev(span4, span3);
        append_dev(label, t3);
        append_dev(label, input);
        set_input_value(input,
        /*item*/
        ctx[34].bd);
        append_dev(tr, t4);

        if (!mounted) {
          dispose = listen_dev(input, "input", input_input_handler);
          mounted = true;
        }
      },
      p: function update(new_ctx, dirty) {
        ctx = new_ctx;
        if (dirty[0] &
        /*items*/
        64 && t1_value !== (t1_value =
        /*item*/
        ctx[34].ph + "")) set_data_dev(t1, t1_value);

        if (dirty[0] &
        /*items*/
        64 && input_placeholder_value !== (input_placeholder_value =
        /*item*/
        ctx[34].ph)) {
          attr_dev(input, "placeholder", input_placeholder_value);
        }

        if (dirty[0] &
        /*wInput1*/
        8) {
          set_style(input, "width",
          /*wInput1*/
          ctx[3] + "px");
        }

        if (dirty[0] &
        /*items*/
        64 && input.value !==
        /*item*/
        ctx[34].bd) {
          set_input_value(input,
          /*item*/
          ctx[34].bd);
        }
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(tr);
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block_6.name,
      type: "each",
      source: "(386:15) {#each items as item,i}",
      ctx: ctx
    });
    return block;
  } // (420:6) {#each clips as clip, i}


  function create_each_block_5(ctx) {
    var tr;
    var td0;
    var label;
    var span4;
    var span0;
    var t0;
    var span2;
    var span1;
    var t1_value =
    /*clip*/
    ctx[37].ph + "";
    var t1;
    var t2_value =
    /*i*/
    ctx[33] + 1 + "";
    var t2;
    var t3;
    var span3;
    var t4;
    var input0;
    var t5;
    var td1;
    var input1;
    var input1_style_value;
    var mounted;
    var dispose;

    function input0_input_handler() {
      /*input0_input_handler*/
      ctx[16].call(input0,
      /*each_value_5*/
      ctx[40],
      /*i*/
      ctx[33]);
    }

    var block = {
      c: function create() {
        tr = element("tr");
        td0 = element("td");
        label = element("label");
        span4 = element("span");
        span0 = element("span");
        t0 = space();
        span2 = element("span");
        span1 = element("span");
        t1 = text(t1_value);
        t2 = text(t2_value);
        t3 = space();
        span3 = element("span");
        t4 = space();
        input0 = element("input");
        t5 = space();
        td1 = element("td");
        input1 = element("input");
        attr_dev(span0, "class", "mdc-notched-outline__leading");
        add_location(span0, file$3, 424, 16, 9297);
        attr_dev(span1, "class", "mdc-floating-label");
        attr_dev(span1, "id", "clip-" +
        /*i*/
        ctx[33]);
        add_location(span1, file$3, 426, 18, 9424);
        attr_dev(span2, "class", "mdc-notched-outline__notch");
        add_location(span2, file$3, 425, 16, 9364);
        attr_dev(span3, "class", "mdc-notched-outline__trailing");
        add_location(span3, file$3, 430, 16, 9571);
        attr_dev(span4, "class", "mdc-notched-outline");
        add_location(span4, file$3, 423, 14, 9246);
        attr_dev(input0, "type", "text");
        attr_dev(input0, "class", "mdc-text-field__input");
        attr_dev(input0, "aria-labelledby", "clip-" +
        /*i*/
        ctx[33]);
        set_style(input0, "width",
        /*wInput2*/
        ctx[4] + "px");
        add_location(input0, file$3, 433, 14, 9660);
        attr_dev(label, "class", "mdc-text-field mdc-text-field--outlined");
        add_location(label, file$3, 422, 12, 9176);
        attr_dev(td0, "class", "svelte-jjz055");
        add_location(td0, file$3, 421, 10, 9159);
        input1.value = "あ";
        attr_dev(input1, "style", input1_style_value = "" + (
        /*clip*/
        ctx[37].color + "width:38px;"));
        attr_dev(input1, "class", "center");
        input1.disabled = true;
        add_location(input1, file$3, 443, 12, 9991);
        attr_dev(td1, "class", "svelte-jjz055");
        add_location(td1, file$3, 442, 9, 9974);
        add_location(tr, file$3, 420, 8, 9144);
      },
      m: function mount(target, anchor) {
        insert_dev(target, tr, anchor);
        append_dev(tr, td0);
        append_dev(td0, label);
        append_dev(label, span4);
        append_dev(span4, span0);
        append_dev(span4, t0);
        append_dev(span4, span2);
        append_dev(span2, span1);
        append_dev(span1, t1);
        append_dev(span1, t2);
        append_dev(span4, t3);
        append_dev(span4, span3);
        append_dev(label, t4);
        append_dev(label, input0);
        set_input_value(input0,
        /*clip*/
        ctx[37].bd);
        append_dev(tr, t5);
        append_dev(tr, td1);
        append_dev(td1, input1);

        if (!mounted) {
          dispose = listen_dev(input0, "input", input0_input_handler);
          mounted = true;
        }
      },
      p: function update(new_ctx, dirty) {
        ctx = new_ctx;
        if (dirty[0] &
        /*clips*/
        128 && t1_value !== (t1_value =
        /*clip*/
        ctx[37].ph + "")) set_data_dev(t1, t1_value);

        if (dirty[0] &
        /*wInput2*/
        16) {
          set_style(input0, "width",
          /*wInput2*/
          ctx[4] + "px");
        }

        if (dirty[0] &
        /*clips*/
        128 && input0.value !==
        /*clip*/
        ctx[37].bd) {
          set_input_value(input0,
          /*clip*/
          ctx[37].bd);
        }

        if (dirty[0] &
        /*clips*/
        128 && input1_style_value !== (input1_style_value = "" + (
        /*clip*/
        ctx[37].color + "width:38px;"))) {
          attr_dev(input1, "style", input1_style_value);
        }
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(tr);
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block_5.name,
      type: "each",
      source: "(420:6) {#each clips as clip, i}",
      ctx: ctx
    });
    return block;
  } // (507:7) {#each items as item, i}


  function create_each_block_4(ctx) {
    var div;
    var t0_value =
    /*item*/
    ctx[34].var + "";
    var t0;
    var t1;
    var t2_value =
    /*item*/
    ctx[34].bd + "";
    var t2;
    var t3;
    var block = {
      c: function create() {
        div = element("div");
        t0 = text(t0_value);
        t1 = text(":\"");
        t2 = text(t2_value);
        t3 = text("\",");
        attr_dev(div, "class", "item svelte-jjz055");
        add_location(div, file$3, 507, 15, 11794);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div, anchor);
        append_dev(div, t0);
        append_dev(div, t1);
        append_dev(div, t2);
        append_dev(div, t3);
      },
      p: function update(ctx, dirty) {
        if (dirty[0] &
        /*items*/
        64 && t0_value !== (t0_value =
        /*item*/
        ctx[34].var + "")) set_data_dev(t0, t0_value);
        if (dirty[0] &
        /*items*/
        64 && t2_value !== (t2_value =
        /*item*/
        ctx[34].bd + "")) set_data_dev(t2, t2_value);
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block_4.name,
      type: "each",
      source: "(507:7) {#each items as item, i}",
      ctx: ctx
    });
    return block;
  } // (518:12) {#if i < clips.length-1}


  function create_if_block_2(ctx) {
    var t;
    var block = {
      c: function create() {
        t = text(",");
      },
      m: function mount(target, anchor) {
        insert_dev(target, t, anchor);
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(t);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_2.name,
      type: "if",
      source: "(518:12) {#if i < clips.length-1}",
      ctx: ctx
    });
    return block;
  } // (514:6) {#each clips as clip, i}


  function create_each_block_3(ctx) {
    var div;
    var t0;
    var t1_value =
    /*clip*/
    ctx[37].bd + "";
    var t1;
    var t2;
    var t3_value =
    /*clip*/
    ctx[37].var + "";
    var t3;
    var t4;
    var if_block =
    /*i*/
    ctx[33] <
    /*clips*/
    ctx[7].length - 1 && create_if_block_2(ctx);
    var block = {
      c: function create() {
        div = element("div");
        t0 = text("{ msg:'");
        t1 = text(t1_value);
        t2 = text("', color: ");
        t3 = text(t3_value);
        t4 = text("}\n            ");
        if (if_block) if_block.c();
        attr_dev(div, "class", "item2 svelte-jjz055");
        add_location(div, file$3, 515, 9, 11985);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div, anchor);
        append_dev(div, t0);
        append_dev(div, t1);
        append_dev(div, t2);
        append_dev(div, t3);
        append_dev(div, t4);
        if (if_block) if_block.m(div, null);
      },
      p: function update(ctx, dirty) {
        if (dirty[0] &
        /*clips*/
        128 && t1_value !== (t1_value =
        /*clip*/
        ctx[37].bd + "")) set_data_dev(t1, t1_value);
        if (dirty[0] &
        /*clips*/
        128 && t3_value !== (t3_value =
        /*clip*/
        ctx[37].var + "")) set_data_dev(t3, t3_value);

        if (
        /*i*/
        ctx[33] <
        /*clips*/
        ctx[7].length - 1) {
          if (if_block) ; else {
            if_block = create_if_block_2(ctx);
            if_block.c();
            if_block.m(div, null);
          }
        } else if (if_block) {
          if_block.d(1);
          if_block = null;
        }
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div);
        if (if_block) if_block.d();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block_3.name,
      type: "each",
      source: "(514:6) {#each clips as clip, i}",
      ctx: ctx
    });
    return block;
  } // (568:18) {#if i < 3 }


  function create_if_block_1(ctx) {
    var tr;
    var td;
    var label;
    var span4;
    var span0;
    var t0;
    var span2;
    var span1;
    var t1_value =
    /*mail_items*/
    ctx[2][
    /*i*/
    ctx[33]].ph + "";
    var t1;
    var t2;
    var span3;
    var t3;
    var input;
    var input_placeholder_value;
    var t4;
    var mounted;
    var dispose;

    function input_input_handler_1() {
      /*input_input_handler_1*/
      ctx[19].call(input,
      /*i*/
      ctx[33]);
    }

    var block = {
      c: function create() {
        tr = element("tr");
        td = element("td");
        label = element("label");
        span4 = element("span");
        span0 = element("span");
        t0 = space();
        span2 = element("span");
        span1 = element("span");
        t1 = text(t1_value);
        t2 = space();
        span3 = element("span");
        t3 = space();
        input = element("input");
        t4 = space();
        attr_dev(span0, "class", "mdc-notched-outline__leading");
        add_location(span0, file$3, 572, 34, 13647);
        attr_dev(span1, "class", "mdc-floating-label");
        attr_dev(span1, "id", "label-" +
        /*i*/
        ctx[33]);
        add_location(span1, file$3, 574, 36, 13810);
        attr_dev(span2, "class", "mdc-notched-outline__notch");
        add_location(span2, file$3, 573, 34, 13732);
        attr_dev(span3, "class", "mdc-notched-outline__trailing");
        add_location(span3, file$3, 578, 34, 14034);
        attr_dev(span4, "class", "mdc-notched-outline");
        add_location(span4, file$3, 571, 32, 13578);
        attr_dev(input, "type", "text");
        attr_dev(input, "class", "mdc-text-field__input");
        attr_dev(input, "aria-labelledby", "m-label-" +
        /*i*/
        ctx[33]);
        attr_dev(input, "placeholder", input_placeholder_value =
        /*mail_items*/
        ctx[2][
        /*i*/
        ctx[33]].ph);
        set_style(input, "width",
        /*wInput1*/
        ctx[3] + "px");
        add_location(input, file$3, 580, 32, 14158);
        attr_dev(label, "class", "mdc-text-field mdc-text-field--outlined");
        add_location(label, file$3, 570, 30, 13490);
        attr_dev(td, "class", "svelte-jjz055");
        add_location(td, file$3, 569, 24, 13455);
        add_location(tr, file$3, 568, 21, 13426);
      },
      m: function mount(target, anchor) {
        insert_dev(target, tr, anchor);
        append_dev(tr, td);
        append_dev(td, label);
        append_dev(label, span4);
        append_dev(span4, span0);
        append_dev(span4, t0);
        append_dev(span4, span2);
        append_dev(span2, span1);
        append_dev(span1, t1);
        append_dev(span4, t2);
        append_dev(span4, span3);
        append_dev(label, t3);
        append_dev(label, input);
        set_input_value(input,
        /*mail_items*/
        ctx[2][
        /*i*/
        ctx[33]].bd);
        append_dev(tr, t4);

        if (!mounted) {
          dispose = listen_dev(input, "input", input_input_handler_1);
          mounted = true;
        }
      },
      p: function update(new_ctx, dirty) {
        ctx = new_ctx;
        if (dirty[0] &
        /*mail_items*/
        4 && t1_value !== (t1_value =
        /*mail_items*/
        ctx[2][
        /*i*/
        ctx[33]].ph + "")) set_data_dev(t1, t1_value);

        if (dirty[0] &
        /*mail_items*/
        4 && input_placeholder_value !== (input_placeholder_value =
        /*mail_items*/
        ctx[2][
        /*i*/
        ctx[33]].ph)) {
          attr_dev(input, "placeholder", input_placeholder_value);
        }

        if (dirty[0] &
        /*wInput1*/
        8) {
          set_style(input, "width",
          /*wInput1*/
          ctx[3] + "px");
        }

        if (dirty[0] &
        /*mail_items*/
        4 && input.value !==
        /*mail_items*/
        ctx[2][
        /*i*/
        ctx[33]].bd) {
          set_input_value(input,
          /*mail_items*/
          ctx[2][
          /*i*/
          ctx[33]].bd);
        }
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(tr);
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block_1.name,
      type: "if",
      source: "(568:18) {#if i < 3 }",
      ctx: ctx
    });
    return block;
  } // (567:15) {#each mail_items as item, i}


  function create_each_block_2(ctx) {
    var if_block_anchor;
    var if_block =
    /*i*/
    ctx[33] < 3 && create_if_block_1(ctx);
    var block = {
      c: function create() {
        if (if_block) if_block.c();
        if_block_anchor = empty();
      },
      m: function mount(target, anchor) {
        if (if_block) if_block.m(target, anchor);
        insert_dev(target, if_block_anchor, anchor);
      },
      p: function update(ctx, dirty) {
        if (
        /*i*/
        ctx[33] < 3) if_block.p(ctx, dirty);
      },
      d: function destroy(detaching) {
        if (if_block) if_block.d(detaching);
        if (detaching) detach_dev(if_block_anchor);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block_2.name,
      type: "each",
      source: "(567:15) {#each mail_items as item, i}",
      ctx: ctx
    });
    return block;
  } // (682:15) {#if i < 4}


  function create_if_block$1(ctx) {
    var div;
    var t0_value =
    /*item*/
    ctx[34].var + "";
    var t0;
    var t1;
    var t2_value =
    /*item*/
    ctx[34].bd + "";
    var t2;
    var t3;
    var block = {
      c: function create() {
        div = element("div");
        t0 = text(t0_value);
        t1 = text(":\"");
        t2 = text(t2_value);
        t3 = text("\",");
        attr_dev(div, "class", "item svelte-jjz055");
        add_location(div, file$3, 682, 18, 17571);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div, anchor);
        append_dev(div, t0);
        append_dev(div, t1);
        append_dev(div, t2);
        append_dev(div, t3);
      },
      p: function update(ctx, dirty) {
        if (dirty[0] &
        /*mail_items*/
        4 && t0_value !== (t0_value =
        /*item*/
        ctx[34].var + "")) set_data_dev(t0, t0_value);
        if (dirty[0] &
        /*mail_items*/
        4 && t2_value !== (t2_value =
        /*item*/
        ctx[34].bd + "")) set_data_dev(t2, t2_value);
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block$1.name,
      type: "if",
      source: "(682:15) {#if i < 4}",
      ctx: ctx
    });
    return block;
  } // (680:10) {#each mail_items as item, i}


  function create_each_block_1(ctx) {
    var if_block_anchor;
    var if_block =
    /*i*/
    ctx[33] < 4 && create_if_block$1(ctx);
    var block = {
      c: function create() {
        if (if_block) if_block.c();
        if_block_anchor = empty();
      },
      m: function mount(target, anchor) {
        if (if_block) if_block.m(target, anchor);
        insert_dev(target, if_block_anchor, anchor);
      },
      p: function update(ctx, dirty) {
        if (
        /*i*/
        ctx[33] < 4) if_block.p(ctx, dirty);
      },
      d: function destroy(detaching) {
        if (if_block) if_block.d(detaching);
        if (detaching) detach_dev(if_block_anchor);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block_1.name,
      type: "each",
      source: "(680:10) {#each mail_items as item, i}",
      ctx: ctx
    });
    return block;
  } // (779:9) {#each user_pages as {subject}


  function create_each_block(ctx) {
    var button;
    var span2;
    var span0;
    var filetext;
    var t0;
    var span1;
    var t1_value =
    /*subject*/
    ctx[31] + "";
    var t1;
    var t2;
    var span4;
    var span3;
    var t3;
    var span5;
    var t4;
    var current;
    var mounted;
    var dispose;
    filetext = new File_text({
      props: {
        color: "gray",
        size: "1em"
      },
      $$inline: true
    });

    function click_handler_4() {
      return (
        /*click_handler_4*/
        ctx[27](
        /*i*/
        ctx[33])
      );
    }

    var block = {
      c: function create() {
        button = element("button");
        span2 = element("span");
        span0 = element("span");
        create_component(filetext.$$.fragment);
        t0 = space();
        span1 = element("span");
        t1 = text(t1_value);
        t2 = space();
        span4 = element("span");
        span3 = element("span");
        t3 = space();
        span5 = element("span");
        t4 = space();
        attr_dev(span0, "class", "mdc-tab__icon");
        attr_dev(span0, "aria-hidden", "true");
        add_location(span0, file$3, 785, 18, 20482);
        attr_dev(span1, "class", "mdc-tab__text-label");
        add_location(span1, file$3, 787, 25, 20612);
        attr_dev(span2, "class", "mdc-tab__content");
        add_location(span2, file$3, 784, 16, 20432);
        attr_dev(span3, "class", "mdc-tab-indicator__content mdc-tab-indicator__content--underline");
        add_location(span3, file$3, 792, 18, 20821);
        attr_dev(span4, "class", "mdc-tab-indicator mdc-tab-indicator--active");
        add_location(span4, file$3, 791, 16, 20744);
        attr_dev(span5, "class", "mdc-tab__ripple");
        add_location(span5, file$3, 794, 16, 20948);
        attr_dev(button, "class", "mdc-tab mdc-tab--active");
        attr_dev(button, "role", "tab");
        attr_dev(button, "aria-selected", "true");
        attr_dev(button, "tabindex", "0");
        add_location(button, file$3, 779, 14, 20209);
      },
      m: function mount(target, anchor) {
        insert_dev(target, button, anchor);
        append_dev(button, span2);
        append_dev(span2, span0);
        mount_component(filetext, span0, null);
        append_dev(span0, t0);
        append_dev(span2, span1);
        append_dev(span1, t1);
        append_dev(button, t2);
        append_dev(button, span4);
        append_dev(span4, span3);
        append_dev(button, t3);
        append_dev(button, span5);
        append_dev(button, t4);
        current = true;

        if (!mounted) {
          dispose = listen_dev(button, "click", click_handler_4, false, false, false);
          mounted = true;
        }
      },
      p: function update(new_ctx, dirty) {
        ctx = new_ctx;
      },
      i: function intro(local) {
        if (current) return;
        transition_in(filetext.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        transition_out(filetext.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(button);
        destroy_component(filetext);
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_each_block.name,
      type: "each",
      source: "(779:9) {#each user_pages as {subject}",
      ctx: ctx
    });
    return block;
  }

  function create_fragment$3(ctx) {
    var div39;
    var h10;
    var t1;
    var h11;
    var edit0;
    var t2;
    var t3;
    var h20;
    var t5;
    var h40;
    var t7;
    var ul0;
    var li0;
    var t9;
    var li1;
    var t11;
    var li2;
    var t13;
    var li3;
    var t15;
    var li4;
    var t17;
    var div10;
    var div9;
    var div2;
    var div1;
    var h30;
    var t19;
    var ul1;
    var li5;
    var code0;
    var t21;
    var t22;
    var li6;
    var code1;
    var t24;
    var t25;
    var li7;
    var t27;
    var li8;
    var t29;
    var li9;
    var t30;
    var code2;
    var t32;
    var code3;
    var t34;
    var t35;
    var li10;
    var t37;
    var div0;
    var table0;
    var t38;
    var ul2;
    var li11;
    var t40;
    var li12;
    var t42;
    var table1;
    var t43;
    var tr0;
    var td0;
    var ul3;
    var li13;
    var t45;
    var tr1;
    var td1;
    var fieldset;
    var legend;
    var t47;
    var textarea0;
    var t48;
    var div8;
    var br0;
    var t49;
    var br1;
    var t50;
    var br2;
    var t51;
    var br3;
    var t52;
    var div7;
    var h31;
    var t54;
    var ul4;
    var li14;
    var t56;
    var li15;
    var t58;
    var li16;
    var t59;
    var code4;
    var t61;
    var br4;
    var t62;
    var code5;
    var t64;
    var li17;
    var t66;
    var div3;
    var button0;
    var contentcopy0;
    var t67;
    var div6;
    var t68;
    var t69;
    var div4;
    var t71;
    var t72;
    var div5;
    var t73;
    var br5;
    var t74;
    var t75;
    var t76;
    var t77;
    var t78;
    var h12;
    var edit1;
    var t79;
    var t80;
    var h21;
    var t82;
    var h41;
    var t84;
    var ul5;
    var li18;
    var t86;
    var li19;
    var t88;
    var li20;
    var t90;
    var li21;
    var t92;
    var li22;
    var t94;
    var li23;
    var t96;
    var div28;
    var div27;
    var div18;
    var h13;
    var t98;
    var div17;
    var h32;
    var t100;
    var ul6;
    var li24;
    var t102;
    var div16;
    var table2;
    var t103;
    var br6;
    var t104;
    var div11;
    var t106;
    var br7;
    var t107;
    var br8;
    var t108;
    var div12;
    var t109;
    var br9;
    var t110;
    var br10;
    var t111;
    var br11;
    var t112;
    var br12;
    var t113;
    var br13;
    var t114;
    var br14;
    var t115;
    var t116;
    var textarea1;
    var t117;
    var br15;
    var t118;
    var br16;
    var t119;
    var div13;
    var t120;
    var br17;
    var t121;
    var br18;
    var t122;
    var br19;
    var t123;
    var br20;
    var t124;
    var br21;
    var t125;
    var br22;
    var t126;
    var br23;
    var t127;
    var textarea2;
    var t128;
    var div14;
    var t129;
    var br24;
    var t130;
    var input;
    var input_placeholder_value;
    var t131;
    var div15;
    var t132;
    var br25;
    var t133;
    var textarea3;
    var t134;
    var div26;
    var br26;
    var t135;
    var br27;
    var t136;
    var br28;
    var t137;
    var br29;
    var t138;
    var div25;
    var h33;
    var t140;
    var ul7;
    var li25;
    var t142;
    var li26;
    var code6;
    var t144;
    var t145;
    var li27;
    var t147;
    var div19;
    var button1;
    var contentcopy1;
    var t148;
    var div24;
    var t149;
    var div23;
    var t150;
    var div20;
    var t151;
    var t152;
    var t153;
    var t154;
    var div21;
    var t155;
    var t156;
    var t157;
    var t158;
    var div22;
    var t159;
    var t160;
    var t161;
    var t162;
    var t163;
    var h34;
    var t165;
    var img;
    var img_src_value;
    var t166;
    var h14;
    var edit2;
    var t167;
    var t168;
    var h22;
    var t170;
    var h42;
    var t172;
    var ul8;
    var li28;
    var t174;
    var li29;
    var t176;
    var li30;
    var t178;
    var li31;
    var t179;
    var br30;
    var t180;
    var a0;
    var br31;
    var t182;
    var a1;
    var t184;
    var h23;
    var t186;
    var ul9;
    var li32;
    var t188;
    var li33;
    var t190;
    var div38;
    var div37;
    var div34;
    var h43;
    var t192;
    var div29;
    var button2;
    var span0;
    var t193;
    var span2;
    var t194;
    var span1;
    var t196;
    var button3;
    var help;
    var t197;
    var button4;
    var contentcopy2;
    var t198;
    var br32;
    var t199;
    var div33;
    var div32;
    var div31;
    var div30;
    var t200;
    var textarea4;
    var t201;
    var div36;
    var h44;
    var t203;
    var div35;
    var raw_value = marked(
    /*mdtext*/
    ctx[12]) + "";
    var current;
    var mounted;
    var dispose;
    add_render_callback(
    /*onwindowresize*/
    ctx[14]);
    edit0 = new Edit({
      props: {
        color: "green"
      },
      $$inline: true
    });
    var each_value_6 =
    /*items*/
    ctx[6];
    validate_each_argument(each_value_6);
    var each_blocks_6 = [];

    for (var i = 0; i < each_value_6.length; i += 1) {
      each_blocks_6[i] = create_each_block_6(get_each_context_6(ctx, each_value_6, i));
    }

    var each_value_5 =
    /*clips*/
    ctx[7];
    validate_each_argument(each_value_5);
    var each_blocks_5 = [];

    for (var _i = 0; _i < each_value_5.length; _i += 1) {
      each_blocks_5[_i] = create_each_block_5(get_each_context_5(ctx, each_value_5, _i));
    }

    contentcopy0 = new Content_copy({
      props: {
        color: "green",
        size: "2em"
      },
      $$inline: true
    });
    var each_value_4 =
    /*items*/
    ctx[6];
    validate_each_argument(each_value_4);
    var each_blocks_4 = [];

    for (var _i2 = 0; _i2 < each_value_4.length; _i2 += 1) {
      each_blocks_4[_i2] = create_each_block_4(get_each_context_4(ctx, each_value_4, _i2));
    }

    var each_value_3 =
    /*clips*/
    ctx[7];
    validate_each_argument(each_value_3);
    var each_blocks_3 = [];

    for (var _i3 = 0; _i3 < each_value_3.length; _i3 += 1) {
      each_blocks_3[_i3] = create_each_block_3(get_each_context_3(ctx, each_value_3, _i3));
    }

    edit1 = new Edit({
      props: {
        color: "green"
      },
      $$inline: true
    });
    var each_value_2 =
    /*mail_items*/
    ctx[2];
    validate_each_argument(each_value_2);
    var each_blocks_2 = [];

    for (var _i4 = 0; _i4 < each_value_2.length; _i4 += 1) {
      each_blocks_2[_i4] = create_each_block_2(get_each_context_2(ctx, each_value_2, _i4));
    }

    contentcopy1 = new Content_copy({
      props: {
        color: "green",
        size: "2em"
      },
      $$inline: true
    });
    var each_value_1 =
    /*mail_items*/
    ctx[2];
    validate_each_argument(each_value_1);
    var each_blocks_1 = [];

    for (var _i5 = 0; _i5 < each_value_1.length; _i5 += 1) {
      each_blocks_1[_i5] = create_each_block_1(get_each_context_1(ctx, each_value_1, _i5));
    }

    edit2 = new Edit({
      props: {
        color: "green"
      },
      $$inline: true
    });
    help = new Help({
      props: {
        color: "#79b700",
        size: "2em"
      },
      $$inline: true
    });
    contentcopy2 = new Content_copy({
      props: {
        color: "#79b700",
        size: "2em"
      },
      $$inline: true
    });
    var each_value = user_pages;
    validate_each_argument(each_value);
    var each_blocks = [];

    for (var _i6 = 0; _i6 < each_value.length; _i6 += 1) {
      each_blocks[_i6] = create_each_block(get_each_context(ctx, each_value, _i6));
    }

    var out = function out(i) {
      return transition_out(each_blocks[i], 1, 1, function () {
        each_blocks[i] = null;
      });
    };

    var block = {
      c: function create() {
        div39 = element("div");
        h10 = element("h1");
        h10.textContent = "データ編集方法";
        t1 = space();
        h11 = element("h1");
        create_component(edit0.$$.fragment);
        t2 = text(" 商品データの編集手順");
        t3 = space();
        h20 = element("h2");
        h20.textContent = "編集方法";
        t5 = space();
        h40 = element("h4");
        h40.textContent = "設定ファイル：data/products.js";
        t7 = space();
        ul0 = element("ul");
        li0 = element("li");
        li0.textContent = "「新規作成データ」に入力すると「追加データ」に自動で反映されます。「追加データ」は直接編集も出来ます。";
        t9 = space();
        li1 = element("li");
        li1.textContent = "入力後コピーアイコンをクリックしますとクリップボードへコピーされます。";
        t11 = space();
        li2 = element("li");
        li2.textContent = "使用のエディタ(メモ帳など)で商品データファイル(products.js)を開きます。";
        t13 = space();
        li3 = element("li");
        li3.textContent = "コピーしたテキストを、挿入位置へ貼り付け保存します。";
        t15 = space();
        li4 = element("li");
        li4.textContent = "ブラウザ画面を再読み込みし変更が反映されていることを確認します。";
        t17 = space();
        div10 = element("div");
        div9 = element("div");
        div2 = element("div");
        div1 = element("div");
        h30 = element("h3");
        h30.textContent = "新規作成データ";
        t19 = space();
        ul1 = element("ul");
        li5 = element("li");
        code0 = element("code");
        code0.textContent = "ID番号";
        t21 = text("は自動で挿入されます。");
        t22 = space();
        li6 = element("li");
        code1 = element("code");
        code1.textContent = "管理番号";
        t24 = text(" は未入力可です。");
        t25 = space();
        li7 = element("li");
        li7.textContent = "量目は単位を明記します(例：300g, 3kg)。";
        t27 = space();
        li8 = element("li");
        li8.textContent = "数量は販売可能数を設定します(初期値:10)。";
        t29 = space();
        li9 = element("li");
        t30 = text("表示ラベルは、非表示(初期値)");
        code2 = element("code");
        code2.textContent = "0";
        t32 = text("表示");
        code3 = element("code");
        code3.textContent = "1";
        t34 = text("です。");
        t35 = space();
        li10 = element("li");
        li10.textContent = "商品画像形式は jpg, png 等自由です。";
        t37 = space();
        div0 = element("div");
        table0 = element("table");

        for (var _i7 = 0; _i7 < each_blocks_6.length; _i7 += 1) {
          each_blocks_6[_i7].c();
        }

        t38 = space();
        ul2 = element("ul");
        li11 = element("li");
        li11.textContent = "空欄の場合は無視されます。";
        t40 = space();
        li12 = element("li");
        li12.textContent = "文字と背景の色は変更可能です。";
        t42 = space();
        table1 = element("table");

        for (var _i8 = 0; _i8 < each_blocks_5.length; _i8 += 1) {
          each_blocks_5[_i8].c();
        }

        t43 = space();
        tr0 = element("tr");
        td0 = element("td");
        ul3 = element("ul");
        li13 = element("li");
        li13.textContent = "改行すると箇条書きとなります。";
        t45 = space();
        tr1 = element("tr");
        td1 = element("td");
        fieldset = element("fieldset");
        legend = element("legend");
        legend.textContent = "商品説明";
        t47 = space();
        textarea0 = element("textarea");
        t48 = space();
        div8 = element("div");
        br0 = element("br");
        t49 = space();
        br1 = element("br");
        t50 = space();
        br2 = element("br");
        t51 = space();
        br3 = element("br");
        t52 = space();
        div7 = element("div");
        h31 = element("h3");
        h31.textContent = "追加データ";
        t54 = space();
        ul4 = element("ul");
        li14 = element("li");
        li14.textContent = "表示のデータテキストは直接編集出来ます。";
        t56 = space();
        li15 = element("li");
        li15.textContent = "テキストをコピーして products.js ファイルへ貼り付けて下さい。";
        t58 = space();
        li16 = element("li");
        t59 = text("中間に挿入するデータは末尾に、最後に追加する場合は前データの末尾に");
        code4 = element("code");
        code4.textContent = ",";
        t61 = text("を付加して下さい。\n                最後データ末尾に付加する必要はありません。");
        br4 = element("br");
        t62 = text("\n               例:");
        code5 = element("code");
        code5.textContent = "{ A }, { 挿入データ }, { 最後データ }";
        t64 = space();
        li17 = element("li");
        li17.textContent = "データは全てファイルにて直接編集可能です。";
        t66 = space();
        div3 = element("div");
        button0 = element("button");
        create_component(contentcopy0.$$.fragment);
        t67 = space();
        div6 = element("div");
        t68 = text("{\n\t      ");

        for (var _i9 = 0; _i9 < each_blocks_4.length; _i9 += 1) {
          each_blocks_4[_i9].c();
        }

        t69 = space();
        div4 = element("div");
        div4.textContent = "clips:[";
        t71 = space();

        for (var _i10 = 0; _i10 < each_blocks_3.length; _i10 += 1) {
          each_blocks_3[_i10].c();
        }

        t72 = space();
        div5 = element("div");
        t73 = text("],\n         ");
        br5 = element("br");
        t74 = text("\n         text:\"");
        t75 = text(
        /*_text*/
        ctx[8]);
        t76 = text("\"");
        t77 = text("\n         }");
        t78 = space();
        h12 = element("h1");
        create_component(edit1.$$.fragment);
        t79 = text(" 注文メイルの編集手順");
        t80 = space();
        h21 = element("h2");
        h21.textContent = "編集方法";
        t82 = space();
        h41 = element("h4");
        h41.textContent = "設定ファイル：data/init.js";
        t84 = space();
        ul5 = element("ul");
        li18 = element("li");
        li18.textContent = "「注文用定形メイル」各部に入力すると「変更データ」に自動で反映されます。「変更データ」は直接編集も出来ます。";
        t86 = space();
        li19 = element("li");
        li19.textContent = "必要事項を入力後「変更データ」をマウスで選択してテキストをコピーします。";
        t88 = space();
        li20 = element("li");
        li20.textContent = "使用のエディタ(メモ帳など)で設定ファイル(init.js)を開きます。";
        t90 = space();
        li21 = element("li");
        li21.textContent = "コピーしたテキストを、「// 注文メール設定」の既存部分と入れ替え保存します。";
        t92 = space();
        li22 = element("li");
        li22.textContent = "ブラウザ画面で実際にテストし開かれた注文メイルに反映されていることを確認します。";
        t94 = space();
        li23 = element("li");
        li23.textContent = "設定ファイル(init.js)を直接編集も出来ます。その場合[挿入テキスト]はこの作成フォームを使用すると自動で改行が変換付加されます";
        t96 = space();
        div28 = element("div");
        div27 = element("div");
        div18 = element("div");
        h13 = element("h1");
        h13.textContent = "データ作成";
        t98 = space();
        div17 = element("div");
        h32 = element("h3");
        h32.textContent = "注文用定形メイル";
        t100 = space();
        ul6 = element("ul");
        li24 = element("li");
        li24.textContent = "[挿入テキスト] 各部に定形文を挿入出来ます。";
        t102 = space();
        div16 = element("div");
        table2 = element("table");

        for (var _i11 = 0; _i11 < each_blocks_2.length; _i11 += 1) {
          each_blocks_2[_i11].c();
        }

        t103 = space();
        br6 = element("br");
        t104 = text("\n\n            -------------------------------------------------\n            ");
        div11 = element("div");
        div11.textContent = "注文日時：2020年11月2日(月曜日) 9時15分37秒";
        t106 = space();
        br7 = element("br");
        t107 = space();
        br8 = element("br");
        t108 = space();
        div12 = element("div");
        t109 = text("【お客様情報：お届け先】(＊は必須。空欄は必要あれば記入して下さい)");
        br9 = element("br");
        t110 = text("\n            　名前 ＊：");
        br10 = element("br");
        t111 = text("\n            　郵便番号 ：");
        br11 = element("br");
        t112 = text("\n            　届け先住所 ＊：");
        br12 = element("br");
        t113 = text("\n            　連絡先電話番号：");
        br13 = element("br");
        t114 = text("\n            　振込方法：郵便振込");
        br14 = element("br");
        t115 = text("\n            ---------------------------------------------------");
        t116 = text("\n\n            [挿入テキスト１]\n            ");
        textarea1 = element("textarea");
        t117 = space();
        br15 = element("br");
        t118 = space();
        br16 = element("br");
        t119 = space();
        div13 = element("div");
        t120 = text("　注文品内訳は以下のとおりです。");
        br17 = element("br");
        t121 = text("\n            ---------------------------------------------------");
        br18 = element("br");
        t122 = text("\n               【注文品内訳】");
        br19 = element("br");
        t123 = text("\n            注文品目数：【1】");
        br20 = element("br");
        t124 = text("\n            [1][V-2C]旬野菜詰合せセット:D - 300(円)x1(個)=300円");
        br21 = element("br");
        t125 = text("\n            ---------------------------------------------------");
        br22 = element("br");
        t126 = text("\n            総計金額：300円 + 消費税(外税:8％)24円 + 送料(送料無料を除く)");
        br23 = element("br");
        t127 = text("\n\n            [挿入テキスト2]\n            ");
        textarea2 = element("textarea");
        t128 = space();
        div14 = element("div");
        t129 = text("---------------------------------------------------");
        br24 = element("br");
        t130 = text("\n            \n            \n            伝言欄等");
        input = element("input");
        t131 = space();
        div15 = element("div");
        t132 = text("---------------------------------------------------");
        br25 = element("br");
        t133 = text("\n            [挿入テキスト3]\n            ");
        textarea3 = element("textarea");
        t134 = space();
        div26 = element("div");
        br26 = element("br");
        t135 = space();
        br27 = element("br");
        t136 = space();
        br28 = element("br");
        t137 = space();
        br29 = element("br");
        t138 = space();
        div25 = element("div");
        h33 = element("h3");
        h33.textContent = "変更データ";
        t140 = space();
        ul7 = element("ul");
        li25 = element("li");
        li25.textContent = "表示のデータテキストは直接編集出来ます。";
        t142 = space();
        li26 = element("li");
        code6 = element("code");
        code6.textContent = "init.js";
        t144 = text("ファイルの当該データを変更して下さい(緑字部分)。");
        t145 = space();
        li27 = element("li");
        li27.textContent = "「お客様情報」「商品内訳」は自動で挿入されます。";
        t147 = space();
        div19 = element("div");
        button1 = element("button");
        create_component(contentcopy1.$$.fragment);
        t148 = space();
        div24 = element("div");
        t149 = text("const order_mail = {\n\n       ");
        div23 = element("div");

        for (var _i12 = 0; _i12 < each_blocks_1.length; _i12 += 1) {
          each_blocks_1[_i12].c();
        }

        t150 = space();
        div20 = element("div");
        t151 = text("template1: \"");
        t152 = text(
        /*template1*/
        ctx[9]);
        t153 = text("\"");
        t154 = space();
        div21 = element("div");
        t155 = text("template2: \"");
        t156 = text(
        /*template2*/
        ctx[10]);
        t157 = text("\"");
        t158 = space();
        div22 = element("div");
        t159 = text("template3: \"");
        t160 = text(
        /*template3*/
        ctx[11]);
        t161 = text("\"");
        t162 = text("\n\n      \t};");
        t163 = space();
        h34 = element("h3");
        h34.textContent = "サンプル画像";
        t165 = space();
        img = element("img");
        t166 = space();
        h14 = element("h1");
        create_component(edit2.$$.fragment);
        t167 = text(" 拡張メニュー編集");
        t168 = space();
        h22 = element("h2");
        h22.textContent = "編集方法";
        t170 = space();
        h42 = element("h4");
        h42.textContent = "設定ファイル：data/user-pages.js";
        t172 = space();
        ul8 = element("ul");
        li28 = element("li");
        li28.textContent = "設定ファイルでページを自由に追加出来ます。";
        t174 = space();
        li29 = element("li");
        li29.textContent = "タブをクリックすると設定されている各ページのテキストが読込まれます。";
        t176 = space();
        li30 = element("li");
        li30.textContent = "編集後はコピーボタンをクリックしデータファイルの当該部に張付け入替えます。";
        t178 = space();
        li31 = element("li");
        t179 = text("参照サイト： ");
        br30 = element("br");
        t180 = space();
        a0 = element("a");
        a0.textContent = "Markdown記法";
        br31 = element("br");
        t182 = space();
        a1 = element("a");
        a1.textContent = "マークダウン記法 一覧表・チートシート / Qiita";
        t184 = space();
        h23 = element("h2");
        h23.textContent = "独自拡張方法";
        t186 = space();
        ul9 = element("ul");
        li32 = element("li");
        li32.textContent = "表示は、CSS を用いることでカスタマイズ可能です。";
        t188 = space();
        li33 = element("li");
        li33.textContent = "コピーされた表示テキストは、改行処理がされています。";
        t190 = space();
        div38 = element("div");
        div37 = element("div");
        div34 = element("div");
        h43 = element("h4");
        h43.textContent = "ページテキスト(Markdown)";
        t192 = space();
        div29 = element("div");
        button2 = element("button");
        span0 = element("span");
        t193 = space();
        span2 = element("span");
        t194 = text("ページ数：");
        span1 = element("span");
        span1.textContent = "".concat(user_pages.length);
        t196 = space();
        button3 = element("button");
        create_component(help.$$.fragment);
        t197 = space();
        button4 = element("button");
        create_component(contentcopy2.$$.fragment);
        t198 = space();
        br32 = element("br");
        t199 = space();
        div33 = element("div");
        div32 = element("div");
        div31 = element("div");
        div30 = element("div");

        for (var _i13 = 0; _i13 < each_blocks.length; _i13 += 1) {
          each_blocks[_i13].c();
        }

        t200 = space();
        textarea4 = element("textarea");
        t201 = space();
        div36 = element("div");
        h44 = element("h4");
        h44.textContent = "ブラウザ実際表示(Html)";
        t203 = space();
        div35 = element("div");
        attr_dev(h10, "class", "mdc-typography--headline3");
        add_location(h10, file$3, 347, 0, 6613);
        set_style(h11, "padding-left", "24px");
        set_style(h11, "color", "green");
        add_location(h11, file$3, 349, 3, 6668);
        set_style(h20, "padding-left", "24px");
        add_location(h20, file$3, 352, 3, 6764);
        set_style(h40, "padding-left", "24px");
        add_location(h40, file$3, 353, 3, 6808);
        add_location(li0, file$3, 356, 6, 6883);
        add_location(li1, file$3, 357, 6, 6950);
        add_location(li2, file$3, 358, 6, 7001);
        add_location(li3, file$3, 359, 6, 7060);
        add_location(li4, file$3, 360, 6, 7102);
        add_location(ul0, file$3, 355, 3, 6872);
        add_location(h30, file$3, 370, 9, 7364);
        add_location(code0, file$3, 373, 15, 7427);
        add_location(li5, file$3, 373, 11, 7423);
        add_location(code1, file$3, 374, 15, 7476);
        add_location(li6, file$3, 374, 11, 7472);
        add_location(li7, file$3, 375, 11, 7519);
        add_location(li8, file$3, 376, 11, 7565);
        add_location(code2, file$3, 377, 30, 7628);
        add_location(code3, file$3, 377, 46, 7644);
        add_location(li9, file$3, 377, 11, 7609);
        add_location(li10, file$3, 378, 11, 7678);
        attr_dev(ul1, "class", "size-08");
        add_location(ul1, file$3, 372, 9, 7391);
        attr_dev(table0, "class", "svelte-jjz055");
        add_location(table0, file$3, 383, 13, 7790);
        add_location(li11, file$3, 414, 8, 9021);
        add_location(li12, file$3, 415, 8, 9052);
        attr_dev(ul2, "class", "size-08");
        add_location(ul2, file$3, 413, 6, 8992);
        add_location(li13, file$3, 451, 14, 10197);
        attr_dev(ul3, "class", "size-08");
        add_location(ul3, file$3, 450, 12, 10162);
        attr_dev(td0, "colspan", "2");
        attr_dev(td0, "class", "svelte-jjz055");
        add_location(td0, file$3, 449, 7, 10133);
        add_location(tr0, file$3, 448, 8, 10121);
        add_location(legend, file$3, 459, 12, 10339);
        set_style(textarea0, "width", "100%");
        set_style(textarea0, "height", "200px");
        attr_dev(textarea0, "class", "svelte-jjz055");
        add_location(textarea0, file$3, 460, 15, 10376);
        add_location(fieldset, file$3, 458, 12, 10316);
        attr_dev(td1, "colspan", "2");
        attr_dev(td1, "class", "svelte-jjz055");
        add_location(td1, file$3, 457, 7, 10287);
        add_location(tr1, file$3, 456, 8, 10275);
        attr_dev(table1, "class", "svelte-jjz055");
        add_location(table1, file$3, 418, 6, 9097);
        attr_dev(div0, "class", "mdc-card__primary-action");
        add_location(div0, file$3, 381, 9, 7736);
        attr_dev(div1, "class", "mdc-card card-ex svelte-jjz055");
        add_location(div1, file$3, 368, 6, 7323);
        attr_dev(div2, "class", "mdc-layout-grid__cell mdc-layout-grid__cell--span-6");
        add_location(div2, file$3, 366, 4, 7250);
        add_location(br0, file$3, 473, 6, 10640);
        add_location(br1, file$3, 474, 6, 10651);
        add_location(br2, file$3, 475, 6, 10662);
        add_location(br3, file$3, 476, 6, 10673);
        add_location(h31, file$3, 478, 9, 10777);
        add_location(li14, file$3, 481, 12, 10844);
        add_location(li15, file$3, 482, 12, 10886);
        add_location(code4, file$3, 483, 49, 10982);
        add_location(br4, file$3, 484, 37, 11043);
        add_location(code5, file$3, 485, 17, 11065);
        add_location(li16, file$3, 483, 12, 10945);
        add_location(li17, file$3, 487, 12, 11166);
        attr_dev(ul4, "class", "size-08");
        add_location(ul4, file$3, 480, 9, 10811);
        attr_dev(button0, "class", "mdc-icon-button material-icons mdc-card__action mdc-card__action--icon--unbounded");
        attr_dev(button0, "title", "クリップボードにコピー");
        add_location(button0, file$3, 492, 12, 11272);
        attr_dev(div3, "class", "right");
        add_location(div3, file$3, 491, 9, 11240);
        attr_dev(div4, "class", "item svelte-jjz055");
        add_location(div4, file$3, 512, 6, 11912);
        add_location(br5, file$3, 524, 9, 12215);
        attr_dev(div5, "class", "item svelte-jjz055");
        add_location(div5, file$3, 523, 9, 12185);
        attr_dev(div6, "class", "mdc-card__primary-action editor-text svelte-jjz055");
        attr_dev(div6, "contenteditable", "true");
        attr_dev(div6, "id", "output1");
        add_location(div6, file$3, 503, 6, 11642);
        attr_dev(div7, "class", "mdc-card");
        set_style(div7, "background-color", "#fff");
        set_style(div7, "padding", "8px");
        set_style(div7, "padding-left", "14px");
        add_location(div7, file$3, 477, 6, 10684);
        attr_dev(div8, "class", "mdc-layout-grid__cell mdc-layout-grid__cell--span-6");
        add_location(div8, file$3, 471, 4, 10563);
        attr_dev(div9, "class", "mdc-layout-grid__inner");
        add_location(div9, file$3, 364, 2, 7208);
        attr_dev(div10, "class", "mdc-layout-grid");
        set_style(div10, "margin", "auto");
        add_location(div10, file$3, 363, 0, 7154);
        set_style(h12, "padding-left", "24px");
        set_style(h12, "color", "green");
        add_location(h12, file$3, 536, 0, 12334);
        set_style(h21, "padding-left", "24px");
        add_location(h21, file$3, 539, 0, 12421);
        set_style(h41, "padding-left", "24px");
        add_location(h41, file$3, 540, 0, 12462);
        add_location(li18, file$3, 542, 3, 12526);
        add_location(li19, file$3, 543, 3, 12593);
        add_location(li20, file$3, 544, 3, 12642);
        add_location(li21, file$3, 545, 3, 12691);
        add_location(li22, file$3, 546, 3, 12743);
        add_location(li23, file$3, 547, 3, 12796);
        add_location(ul5, file$3, 541, 0, 12518);
        set_style(h13, "padding-left", "24px");
        add_location(h13, file$3, 555, 4, 13064);
        add_location(h32, file$3, 558, 9, 13151);
        add_location(li24, file$3, 560, 11, 13210);
        attr_dev(ul6, "class", "size-08");
        add_location(ul6, file$3, 559, 9, 13178);
        attr_dev(table2, "class", "svelte-jjz055");
        add_location(table2, file$3, 565, 12, 13321);
        add_location(br6, file$3, 593, 12, 14701);
        attr_dev(div11, "class", "item size-06 svelte-jjz055");
        add_location(div11, file$3, 596, 12, 14781);
        add_location(br7, file$3, 597, 12, 14855);
        add_location(br8, file$3, 598, 12, 14872);
        add_location(br9, file$3, 600, 51, 14967);
        add_location(br10, file$3, 601, 18, 14990);
        add_location(br11, file$3, 602, 19, 15014);
        add_location(br12, file$3, 603, 21, 15040);
        add_location(br13, file$3, 604, 21, 15066);
        add_location(br14, file$3, 605, 22, 15093);
        attr_dev(div12, "class", "item size-06 svelte-jjz055");
        add_location(div12, file$3, 599, 12, 14889);
        set_style(textarea1, "width", "100%");
        set_style(textarea1, "height", "120px");
        attr_dev(textarea1, "class", "svelte-jjz055");
        add_location(textarea1, file$3, 610, 12, 15216);
        add_location(br15, file$3, 612, 12, 15316);
        add_location(br16, file$3, 613, 12, 15333);
        add_location(br17, file$3, 616, 28, 15406);
        add_location(br18, file$3, 617, 63, 15474);
        add_location(br19, file$3, 618, 22, 15501);
        add_location(br20, file$3, 619, 21, 15527);
        add_location(br21, file$3, 620, 51, 15583);
        add_location(br22, file$3, 621, 63, 15651);
        add_location(br23, file$3, 622, 51, 15707);
        attr_dev(div13, "class", "item size-06 svelte-jjz055");
        add_location(div13, file$3, 615, 12, 15351);
        set_style(textarea2, "width", "100%");
        set_style(textarea2, "height", "120px");
        attr_dev(textarea2, "class", "svelte-jjz055");
        add_location(textarea2, file$3, 626, 12, 15766);
        add_location(br24, file$3, 629, 63, 15956);
        attr_dev(div14, "class", "item size-06 svelte-jjz055");
        add_location(div14, file$3, 628, 12, 15866);
        attr_dev(input, "type", "text");
        attr_dev(input, "placeholder", input_placeholder_value =
        /*mail_items*/
        ctx[2][3].ph);
        add_location(input, file$3, 633, 16, 16040);
        add_location(br25, file$3, 638, 63, 16279);
        attr_dev(div15, "class", "item size-06 svelte-jjz055");
        add_location(div15, file$3, 637, 12, 16189);
        set_style(textarea3, "width", "100%");
        set_style(textarea3, "height", "120px");
        attr_dev(textarea3, "class", "svelte-jjz055");
        add_location(textarea3, file$3, 641, 12, 16337);
        attr_dev(div16, "class", "mdc-card__primary-action");
        add_location(div16, file$3, 563, 9, 13268);
        attr_dev(div17, "class", "mdc-card card-ex svelte-jjz055");
        add_location(div17, file$3, 556, 4, 13110);
        attr_dev(div18, "class", "mdc-layout-grid__cell mdc-layout-grid__cell--span-6");
        add_location(div18, file$3, 553, 4, 12993);
        add_location(br26, file$3, 649, 6, 16544);
        add_location(br27, file$3, 650, 6, 16555);
        add_location(br28, file$3, 651, 6, 16566);
        add_location(br29, file$3, 652, 6, 16577);
        add_location(h33, file$3, 654, 9, 16681);
        add_location(li25, file$3, 657, 12, 16748);
        add_location(code6, file$3, 658, 16, 16794);
        add_location(li26, file$3, 658, 12, 16790);
        add_location(li27, file$3, 659, 12, 16857);
        attr_dev(ul7, "class", "size-08");
        add_location(ul7, file$3, 656, 9, 16715);
        attr_dev(button1, "class", "mdc-icon-button material-icons mdc-card__action mdc-card__action--icon--unbounded");
        attr_dev(button1, "title", "クリップボードにコピー");
        add_location(button1, file$3, 663, 12, 16948);
        attr_dev(div19, "class", "right");
        add_location(div19, file$3, 662, 9, 16916);
        attr_dev(div20, "class", "item svelte-jjz055");
        add_location(div20, file$3, 689, 12, 17733);
        attr_dev(div21, "class", "item svelte-jjz055");
        add_location(div21, file$3, 692, 12, 17823);
        attr_dev(div22, "class", "item svelte-jjz055");
        add_location(div22, file$3, 695, 12, 17913);
        set_style(div23, "color", "green");
        add_location(div23, file$3, 677, 7, 17440);
        attr_dev(div24, "class", "mdc-card__primary-action editor-text svelte-jjz055");
        attr_dev(div24, "contenteditable", "true");
        attr_dev(div24, "id", "output2");
        add_location(div24, file$3, 673, 3, 17316);
        add_location(h34, file$3, 704, 6, 18044);
        if (!src_url_equal(img.src, img_src_value = "./images/mail-image2.png")) attr_dev(img, "src", img_src_value);
        attr_dev(img, "alt", "メイルサンプル画像");
        attr_dev(img, "title", "メイルサンプル画像");
        attr_dev(img, "width",
        /*imgW*/
        ctx[5]);
        add_location(img, file$3, 705, 6, 18066);
        attr_dev(div25, "class", "mdc-card");
        set_style(div25, "background-color", "#fff");
        set_style(div25, "padding", "8px");
        set_style(div25, "padding-left", "14px");
        add_location(div25, file$3, 653, 6, 16588);
        attr_dev(div26, "class", "mdc-layout-grid__cell mdc-layout-grid__cell--span-6");
        add_location(div26, file$3, 648, 4, 16472);
        attr_dev(div27, "class", "mdc-layout-grid__inner");
        add_location(div27, file$3, 552, 2, 12952);
        attr_dev(div28, "class", "mdc-layout-grid");
        set_style(div28, "margin", "auto");
        add_location(div28, file$3, 551, 0, 12898);
        set_style(h14, "padding-left", "24px");
        set_style(h14, "color", "green");
        add_location(h14, file$3, 716, 0, 18199);
        set_style(h22, "padding-left", "24px");
        add_location(h22, file$3, 719, 0, 18284);
        set_style(h42, "padding-left", "24px");
        add_location(h42, file$3, 720, 0, 18325);
        add_location(li28, file$3, 723, 3, 18396);
        add_location(li29, file$3, 724, 3, 18430);
        add_location(li30, file$3, 725, 3, 18477);
        add_location(br30, file$3, 726, 14, 18538);
        attr_dev(a0, "href", "https://www.markdown.jp/syntax/");
        attr_dev(a0, "target", "_blank");
        add_location(a0, file$3, 727, 6, 18555);
        add_location(br31, file$3, 727, 78, 18627);
        attr_dev(a1, "href", "https://qiita.com/kamorits/items/6f342da395ad57468ae3");
        attr_dev(a1, "target", "_blank");
        add_location(a1, file$3, 728, 6, 18640);
        add_location(li31, file$3, 726, 3, 18527);
        add_location(ul8, file$3, 722, 0, 18388);
        set_style(h23, "padding-left", "24px");
        add_location(h23, file$3, 734, 0, 18788);
        add_location(li32, file$3, 736, 3, 18839);
        add_location(li33, file$3, 737, 3, 18878);
        add_location(ul9, file$3, 735, 0, 18831);
        attr_dev(h43, "class", "title-md svelte-jjz055");
        add_location(h43, file$3, 746, 6, 19069);
        attr_dev(span0, "class", "mdc-button__ripple");
        add_location(span0, file$3, 751, 12, 19228);
        attr_dev(span1, "class", "fs16 svelte-jjz055");
        add_location(span1, file$3, 753, 20, 19334);
        attr_dev(span2, "class", "mdc-button__label");
        add_location(span2, file$3, 752, 12, 19281);
        attr_dev(button2, "class", "mdc-button mdc-button--outlined svelte-jjz055");
        add_location(button2, file$3, 750, 9, 19167);
        attr_dev(button3, "class", "mdc-icon-button svelte-jjz055");
        attr_dev(button3, "title", "ヘルプ");
        add_location(button3, file$3, 757, 9, 19429);
        attr_dev(button4, "class", "mdc-icon-button material-icons mdc-card__action mdc-card__action--icon--unbounded svelte-jjz055");
        attr_dev(button4, "title", "クリップボードにコピー");
        add_location(button4, file$3, 761, 9, 19598);
        attr_dev(div29, "class", "btn-groupe svelte-jjz055");
        add_location(div29, file$3, 748, 6, 19126);
        attr_dev(br32, "clear", "all");
        add_location(br32, file$3, 771, 6, 19933);
        attr_dev(div30, "class", "mdc-tab-scroller__scroll-content");
        add_location(div30, file$3, 776, 12, 20103);
        attr_dev(div31, "class", "mdc-tab-scroller__scroll-area");
        add_location(div31, file$3, 775, 10, 20047);
        attr_dev(div32, "class", "mdc-tab-scroller");
        add_location(div32, file$3, 774, 8, 20006);
        attr_dev(div33, "class", "mdc-tab-bar");
        attr_dev(div33, "role", "tablist");
        add_location(div33, file$3, 773, 6, 19957);
        attr_dev(textarea4, "class", "md-textarea svelte-jjz055");
        set_style(textarea4, "height", "700px");
        attr_dev(textarea4, "id", "output3");
        add_location(textarea4, file$3, 802, 6, 21098);
        attr_dev(div34, "class", "mdc-layout-grid__cell mdc-layout-grid__cell--span-6");
        add_location(div34, file$3, 744, 4, 18996);
        add_location(h44, file$3, 806, 7, 21285);
        attr_dev(div35, "class", "mdc-layout-grid__cell mdc-layout-grid__cell--span-6 md-html svelte-jjz055");
        add_location(div35, file$3, 807, 7, 21316);
        attr_dev(div36, "class", "mdc-layout-grid__cell mdc-layout-grid__cell--span-6");
        add_location(div36, file$3, 805, 4, 21212);
        attr_dev(div37, "class", "mdc-layout-grid__inner");
        add_location(div37, file$3, 742, 2, 18954);
        attr_dev(div38, "class", "mdc-layout-grid");
        add_location(div38, file$3, 741, 0, 18922);
        attr_dev(div39, "class", "container");
        add_location(div39, file$3, 345, 0, 6588);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, div39, anchor);
        append_dev(div39, h10);
        append_dev(div39, t1);
        append_dev(div39, h11);
        mount_component(edit0, h11, null);
        append_dev(h11, t2);
        append_dev(div39, t3);
        append_dev(div39, h20);
        append_dev(div39, t5);
        append_dev(div39, h40);
        append_dev(div39, t7);
        append_dev(div39, ul0);
        append_dev(ul0, li0);
        append_dev(ul0, t9);
        append_dev(ul0, li1);
        append_dev(ul0, t11);
        append_dev(ul0, li2);
        append_dev(ul0, t13);
        append_dev(ul0, li3);
        append_dev(ul0, t15);
        append_dev(ul0, li4);
        append_dev(div39, t17);
        append_dev(div39, div10);
        append_dev(div10, div9);
        append_dev(div9, div2);
        append_dev(div2, div1);
        append_dev(div1, h30);
        append_dev(div1, t19);
        append_dev(div1, ul1);
        append_dev(ul1, li5);
        append_dev(li5, code0);
        append_dev(li5, t21);
        append_dev(ul1, t22);
        append_dev(ul1, li6);
        append_dev(li6, code1);
        append_dev(li6, t24);
        append_dev(ul1, t25);
        append_dev(ul1, li7);
        append_dev(ul1, t27);
        append_dev(ul1, li8);
        append_dev(ul1, t29);
        append_dev(ul1, li9);
        append_dev(li9, t30);
        append_dev(li9, code2);
        append_dev(li9, t32);
        append_dev(li9, code3);
        append_dev(li9, t34);
        append_dev(ul1, t35);
        append_dev(ul1, li10);
        append_dev(div1, t37);
        append_dev(div1, div0);
        append_dev(div0, table0);

        for (var _i14 = 0; _i14 < each_blocks_6.length; _i14 += 1) {
          each_blocks_6[_i14].m(table0, null);
        }

        append_dev(div0, t38);
        append_dev(div0, ul2);
        append_dev(ul2, li11);
        append_dev(ul2, t40);
        append_dev(ul2, li12);
        append_dev(div0, t42);
        append_dev(div0, table1);

        for (var _i15 = 0; _i15 < each_blocks_5.length; _i15 += 1) {
          each_blocks_5[_i15].m(table1, null);
        }

        append_dev(table1, t43);
        append_dev(table1, tr0);
        append_dev(tr0, td0);
        append_dev(td0, ul3);
        append_dev(ul3, li13);
        append_dev(table1, t45);
        append_dev(table1, tr1);
        append_dev(tr1, td1);
        append_dev(td1, fieldset);
        append_dev(fieldset, legend);
        append_dev(fieldset, t47);
        append_dev(fieldset, textarea0);
        set_input_value(textarea0,
        /*text*/
        ctx[1]);
        append_dev(div9, t48);
        append_dev(div9, div8);
        append_dev(div8, br0);
        append_dev(div8, t49);
        append_dev(div8, br1);
        append_dev(div8, t50);
        append_dev(div8, br2);
        append_dev(div8, t51);
        append_dev(div8, br3);
        append_dev(div8, t52);
        append_dev(div8, div7);
        append_dev(div7, h31);
        append_dev(div7, t54);
        append_dev(div7, ul4);
        append_dev(ul4, li14);
        append_dev(ul4, t56);
        append_dev(ul4, li15);
        append_dev(ul4, t58);
        append_dev(ul4, li16);
        append_dev(li16, t59);
        append_dev(li16, code4);
        append_dev(li16, t61);
        append_dev(li16, br4);
        append_dev(li16, t62);
        append_dev(li16, code5);
        append_dev(ul4, t64);
        append_dev(ul4, li17);
        append_dev(div7, t66);
        append_dev(div7, div3);
        append_dev(div3, button0);
        mount_component(contentcopy0, button0, null);
        append_dev(div7, t67);
        append_dev(div7, div6);
        append_dev(div6, t68);

        for (var _i16 = 0; _i16 < each_blocks_4.length; _i16 += 1) {
          each_blocks_4[_i16].m(div6, null);
        }

        append_dev(div6, t69);
        append_dev(div6, div4);
        append_dev(div6, t71);

        for (var _i17 = 0; _i17 < each_blocks_3.length; _i17 += 1) {
          each_blocks_3[_i17].m(div6, null);
        }

        append_dev(div6, t72);
        append_dev(div6, div5);
        append_dev(div5, t73);
        append_dev(div5, br5);
        append_dev(div5, t74);
        append_dev(div5, t75);
        append_dev(div5, t76);
        append_dev(div6, t77);
        append_dev(div39, t78);
        append_dev(div39, h12);
        mount_component(edit1, h12, null);
        append_dev(h12, t79);
        append_dev(div39, t80);
        append_dev(div39, h21);
        append_dev(div39, t82);
        append_dev(div39, h41);
        append_dev(div39, t84);
        append_dev(div39, ul5);
        append_dev(ul5, li18);
        append_dev(ul5, t86);
        append_dev(ul5, li19);
        append_dev(ul5, t88);
        append_dev(ul5, li20);
        append_dev(ul5, t90);
        append_dev(ul5, li21);
        append_dev(ul5, t92);
        append_dev(ul5, li22);
        append_dev(ul5, t94);
        append_dev(ul5, li23);
        append_dev(div39, t96);
        append_dev(div39, div28);
        append_dev(div28, div27);
        append_dev(div27, div18);
        append_dev(div18, h13);
        append_dev(div18, t98);
        append_dev(div18, div17);
        append_dev(div17, h32);
        append_dev(div17, t100);
        append_dev(div17, ul6);
        append_dev(ul6, li24);
        append_dev(div17, t102);
        append_dev(div17, div16);
        append_dev(div16, table2);

        for (var _i18 = 0; _i18 < each_blocks_2.length; _i18 += 1) {
          each_blocks_2[_i18].m(table2, null);
        }

        append_dev(div16, t103);
        append_dev(div16, br6);
        append_dev(div16, t104);
        append_dev(div16, div11);
        append_dev(div16, t106);
        append_dev(div16, br7);
        append_dev(div16, t107);
        append_dev(div16, br8);
        append_dev(div16, t108);
        append_dev(div16, div12);
        append_dev(div12, t109);
        append_dev(div12, br9);
        append_dev(div12, t110);
        append_dev(div12, br10);
        append_dev(div12, t111);
        append_dev(div12, br11);
        append_dev(div12, t112);
        append_dev(div12, br12);
        append_dev(div12, t113);
        append_dev(div12, br13);
        append_dev(div12, t114);
        append_dev(div12, br14);
        append_dev(div12, t115);
        append_dev(div16, t116);
        append_dev(div16, textarea1);
        set_input_value(textarea1,
        /*mail_items*/
        ctx[2][4].bd);
        append_dev(div16, t117);
        append_dev(div16, br15);
        append_dev(div16, t118);
        append_dev(div16, br16);
        append_dev(div16, t119);
        append_dev(div16, div13);
        append_dev(div13, t120);
        append_dev(div13, br17);
        append_dev(div13, t121);
        append_dev(div13, br18);
        append_dev(div13, t122);
        append_dev(div13, br19);
        append_dev(div13, t123);
        append_dev(div13, br20);
        append_dev(div13, t124);
        append_dev(div13, br21);
        append_dev(div13, t125);
        append_dev(div13, br22);
        append_dev(div13, t126);
        append_dev(div13, br23);
        append_dev(div16, t127);
        append_dev(div16, textarea2);
        set_input_value(textarea2,
        /*mail_items*/
        ctx[2][5].bd);
        append_dev(div16, t128);
        append_dev(div16, div14);
        append_dev(div14, t129);
        append_dev(div14, br24);
        append_dev(div16, t130);
        append_dev(div16, input);
        set_input_value(input,
        /*mail_items*/
        ctx[2][3].bd);
        append_dev(div16, t131);
        append_dev(div16, div15);
        append_dev(div15, t132);
        append_dev(div15, br25);
        append_dev(div16, t133);
        append_dev(div16, textarea3);
        set_input_value(textarea3,
        /*mail_items*/
        ctx[2][6].bd);
        append_dev(div27, t134);
        append_dev(div27, div26);
        append_dev(div26, br26);
        append_dev(div26, t135);
        append_dev(div26, br27);
        append_dev(div26, t136);
        append_dev(div26, br28);
        append_dev(div26, t137);
        append_dev(div26, br29);
        append_dev(div26, t138);
        append_dev(div26, div25);
        append_dev(div25, h33);
        append_dev(div25, t140);
        append_dev(div25, ul7);
        append_dev(ul7, li25);
        append_dev(ul7, t142);
        append_dev(ul7, li26);
        append_dev(li26, code6);
        append_dev(li26, t144);
        append_dev(ul7, t145);
        append_dev(ul7, li27);
        append_dev(div25, t147);
        append_dev(div25, div19);
        append_dev(div19, button1);
        mount_component(contentcopy1, button1, null);
        append_dev(div25, t148);
        append_dev(div25, div24);
        append_dev(div24, t149);
        append_dev(div24, div23);

        for (var _i19 = 0; _i19 < each_blocks_1.length; _i19 += 1) {
          each_blocks_1[_i19].m(div23, null);
        }

        append_dev(div23, t150);
        append_dev(div23, div20);
        append_dev(div20, t151);
        append_dev(div20, t152);
        append_dev(div20, t153);
        append_dev(div23, t154);
        append_dev(div23, div21);
        append_dev(div21, t155);
        append_dev(div21, t156);
        append_dev(div21, t157);
        append_dev(div23, t158);
        append_dev(div23, div22);
        append_dev(div22, t159);
        append_dev(div22, t160);
        append_dev(div22, t161);
        append_dev(div24, t162);
        append_dev(div25, t163);
        append_dev(div25, h34);
        append_dev(div25, t165);
        append_dev(div25, img);
        append_dev(div39, t166);
        append_dev(div39, h14);
        mount_component(edit2, h14, null);
        append_dev(h14, t167);
        append_dev(div39, t168);
        append_dev(div39, h22);
        append_dev(div39, t170);
        append_dev(div39, h42);
        append_dev(div39, t172);
        append_dev(div39, ul8);
        append_dev(ul8, li28);
        append_dev(ul8, t174);
        append_dev(ul8, li29);
        append_dev(ul8, t176);
        append_dev(ul8, li30);
        append_dev(ul8, t178);
        append_dev(ul8, li31);
        append_dev(li31, t179);
        append_dev(li31, br30);
        append_dev(li31, t180);
        append_dev(li31, a0);
        append_dev(li31, br31);
        append_dev(li31, t182);
        append_dev(li31, a1);
        append_dev(div39, t184);
        append_dev(div39, h23);
        append_dev(div39, t186);
        append_dev(div39, ul9);
        append_dev(ul9, li32);
        append_dev(ul9, t188);
        append_dev(ul9, li33);
        append_dev(div39, t190);
        append_dev(div39, div38);
        append_dev(div38, div37);
        append_dev(div37, div34);
        append_dev(div34, h43);
        append_dev(div34, t192);
        append_dev(div34, div29);
        append_dev(div29, button2);
        append_dev(button2, span0);
        append_dev(button2, t193);
        append_dev(button2, span2);
        append_dev(span2, t194);
        append_dev(span2, span1);
        append_dev(div29, t196);
        append_dev(div29, button3);
        mount_component(help, button3, null);
        append_dev(div29, t197);
        append_dev(div29, button4);
        mount_component(contentcopy2, button4, null);
        append_dev(div34, t198);
        append_dev(div34, br32);
        append_dev(div34, t199);
        append_dev(div34, div33);
        append_dev(div33, div32);
        append_dev(div32, div31);
        append_dev(div31, div30);

        for (var _i20 = 0; _i20 < each_blocks.length; _i20 += 1) {
          each_blocks[_i20].m(div30, null);
        }

        append_dev(div34, t200);
        append_dev(div34, textarea4);
        set_input_value(textarea4,
        /*mdtext*/
        ctx[12]);
        append_dev(div37, t201);
        append_dev(div37, div36);
        append_dev(div36, h44);
        append_dev(div36, t203);
        append_dev(div36, div35);
        div35.innerHTML = raw_value;
        current = true;

        if (!mounted) {
          dispose = [listen_dev(window, "resize",
          /*onwindowresize*/
          ctx[14]), listen_dev(textarea0, "input",
          /*textarea0_input_handler*/
          ctx[17]), listen_dev(button0, "click",
          /*click_handler*/
          ctx[18], false, false, false), listen_dev(textarea1, "input",
          /*textarea1_input_handler*/
          ctx[20]), listen_dev(textarea2, "input",
          /*textarea2_input_handler*/
          ctx[21]), listen_dev(input, "input",
          /*input_input_handler_2*/
          ctx[22]), listen_dev(textarea3, "input",
          /*textarea3_input_handler*/
          ctx[23]), listen_dev(button1, "click",
          /*click_handler_1*/
          ctx[24], false, false, false), listen_dev(button3, "click",
          /*click_handler_2*/
          ctx[25], false, false, false), listen_dev(button4, "click",
          /*click_handler_3*/
          ctx[26], false, false, false), listen_dev(textarea4, "input",
          /*textarea4_input_handler*/
          ctx[28])];
          mounted = true;
        }
      },
      p: function update(ctx, dirty) {
        if (dirty[0] &
        /*items, wInput1*/
        72) {
          each_value_6 =
          /*items*/
          ctx[6];
          validate_each_argument(each_value_6);

          var _i21;

          for (_i21 = 0; _i21 < each_value_6.length; _i21 += 1) {
            var child_ctx = get_each_context_6(ctx, each_value_6, _i21);

            if (each_blocks_6[_i21]) {
              each_blocks_6[_i21].p(child_ctx, dirty);
            } else {
              each_blocks_6[_i21] = create_each_block_6(child_ctx);

              each_blocks_6[_i21].c();

              each_blocks_6[_i21].m(table0, null);
            }
          }

          for (; _i21 < each_blocks_6.length; _i21 += 1) {
            each_blocks_6[_i21].d(1);
          }

          each_blocks_6.length = each_value_6.length;
        }

        if (dirty[0] &
        /*clips, wInput2*/
        144) {
          each_value_5 =
          /*clips*/
          ctx[7];
          validate_each_argument(each_value_5);

          var _i22;

          for (_i22 = 0; _i22 < each_value_5.length; _i22 += 1) {
            var _child_ctx = get_each_context_5(ctx, each_value_5, _i22);

            if (each_blocks_5[_i22]) {
              each_blocks_5[_i22].p(_child_ctx, dirty);
            } else {
              each_blocks_5[_i22] = create_each_block_5(_child_ctx);

              each_blocks_5[_i22].c();

              each_blocks_5[_i22].m(table1, t43);
            }
          }

          for (; _i22 < each_blocks_5.length; _i22 += 1) {
            each_blocks_5[_i22].d(1);
          }

          each_blocks_5.length = each_value_5.length;
        }

        if (dirty[0] &
        /*text*/
        2) {
          set_input_value(textarea0,
          /*text*/
          ctx[1]);
        }

        if (dirty[0] &
        /*items*/
        64) {
          each_value_4 =
          /*items*/
          ctx[6];
          validate_each_argument(each_value_4);

          var _i23;

          for (_i23 = 0; _i23 < each_value_4.length; _i23 += 1) {
            var _child_ctx2 = get_each_context_4(ctx, each_value_4, _i23);

            if (each_blocks_4[_i23]) {
              each_blocks_4[_i23].p(_child_ctx2, dirty);
            } else {
              each_blocks_4[_i23] = create_each_block_4(_child_ctx2);

              each_blocks_4[_i23].c();

              each_blocks_4[_i23].m(div6, t69);
            }
          }

          for (; _i23 < each_blocks_4.length; _i23 += 1) {
            each_blocks_4[_i23].d(1);
          }

          each_blocks_4.length = each_value_4.length;
        }

        if (dirty[0] &
        /*clips*/
        128) {
          each_value_3 =
          /*clips*/
          ctx[7];
          validate_each_argument(each_value_3);

          var _i24;

          for (_i24 = 0; _i24 < each_value_3.length; _i24 += 1) {
            var _child_ctx3 = get_each_context_3(ctx, each_value_3, _i24);

            if (each_blocks_3[_i24]) {
              each_blocks_3[_i24].p(_child_ctx3, dirty);
            } else {
              each_blocks_3[_i24] = create_each_block_3(_child_ctx3);

              each_blocks_3[_i24].c();

              each_blocks_3[_i24].m(div6, t72);
            }
          }

          for (; _i24 < each_blocks_3.length; _i24 += 1) {
            each_blocks_3[_i24].d(1);
          }

          each_blocks_3.length = each_value_3.length;
        }

        if (!current || dirty[0] &
        /*_text*/
        256) set_data_dev(t75,
        /*_text*/
        ctx[8]);

        if (dirty[0] &
        /*mail_items, wInput1*/
        12) {
          each_value_2 =
          /*mail_items*/
          ctx[2];
          validate_each_argument(each_value_2);

          var _i25;

          for (_i25 = 0; _i25 < each_value_2.length; _i25 += 1) {
            var _child_ctx4 = get_each_context_2(ctx, each_value_2, _i25);

            if (each_blocks_2[_i25]) {
              each_blocks_2[_i25].p(_child_ctx4, dirty);
            } else {
              each_blocks_2[_i25] = create_each_block_2(_child_ctx4);

              each_blocks_2[_i25].c();

              each_blocks_2[_i25].m(table2, null);
            }
          }

          for (; _i25 < each_blocks_2.length; _i25 += 1) {
            each_blocks_2[_i25].d(1);
          }

          each_blocks_2.length = each_value_2.length;
        }

        if (dirty[0] &
        /*mail_items*/
        4) {
          set_input_value(textarea1,
          /*mail_items*/
          ctx[2][4].bd);
        }

        if (dirty[0] &
        /*mail_items*/
        4) {
          set_input_value(textarea2,
          /*mail_items*/
          ctx[2][5].bd);
        }

        if (!current || dirty[0] &
        /*mail_items*/
        4 && input_placeholder_value !== (input_placeholder_value =
        /*mail_items*/
        ctx[2][3].ph)) {
          attr_dev(input, "placeholder", input_placeholder_value);
        }

        if (dirty[0] &
        /*mail_items*/
        4 && input.value !==
        /*mail_items*/
        ctx[2][3].bd) {
          set_input_value(input,
          /*mail_items*/
          ctx[2][3].bd);
        }

        if (dirty[0] &
        /*mail_items*/
        4) {
          set_input_value(textarea3,
          /*mail_items*/
          ctx[2][6].bd);
        }

        if (dirty[0] &
        /*mail_items*/
        4) {
          each_value_1 =
          /*mail_items*/
          ctx[2];
          validate_each_argument(each_value_1);

          var _i26;

          for (_i26 = 0; _i26 < each_value_1.length; _i26 += 1) {
            var _child_ctx5 = get_each_context_1(ctx, each_value_1, _i26);

            if (each_blocks_1[_i26]) {
              each_blocks_1[_i26].p(_child_ctx5, dirty);
            } else {
              each_blocks_1[_i26] = create_each_block_1(_child_ctx5);

              each_blocks_1[_i26].c();

              each_blocks_1[_i26].m(div23, t150);
            }
          }

          for (; _i26 < each_blocks_1.length; _i26 += 1) {
            each_blocks_1[_i26].d(1);
          }

          each_blocks_1.length = each_value_1.length;
        }

        if (!current || dirty[0] &
        /*template1*/
        512) set_data_dev(t152,
        /*template1*/
        ctx[9]);
        if (!current || dirty[0] &
        /*template2*/
        1024) set_data_dev(t156,
        /*template2*/
        ctx[10]);
        if (!current || dirty[0] &
        /*template3*/
        2048) set_data_dev(t160,
        /*template3*/
        ctx[11]);

        if (!current || dirty[0] &
        /*imgW*/
        32) {
          attr_dev(img, "width",
          /*imgW*/
          ctx[5]);
        }

        if (dirty[0] &
        /*openText*/
        8192) {
          each_value = user_pages;
          validate_each_argument(each_value);

          var _i27;

          for (_i27 = 0; _i27 < each_value.length; _i27 += 1) {
            var _child_ctx6 = get_each_context(ctx, each_value, _i27);

            if (each_blocks[_i27]) {
              each_blocks[_i27].p(_child_ctx6, dirty);

              transition_in(each_blocks[_i27], 1);
            } else {
              each_blocks[_i27] = create_each_block(_child_ctx6);

              each_blocks[_i27].c();

              transition_in(each_blocks[_i27], 1);

              each_blocks[_i27].m(div30, null);
            }
          }

          group_outros();

          for (_i27 = each_value.length; _i27 < each_blocks.length; _i27 += 1) {
            out(_i27);
          }

          check_outros();
        }

        if (dirty[0] &
        /*mdtext*/
        4096) {
          set_input_value(textarea4,
          /*mdtext*/
          ctx[12]);
        }

        if ((!current || dirty[0] &
        /*mdtext*/
        4096) && raw_value !== (raw_value = marked(
        /*mdtext*/
        ctx[12]) + "")) div35.innerHTML = raw_value;
      },
      i: function intro(local) {
        if (current) return;
        transition_in(edit0.$$.fragment, local);
        transition_in(contentcopy0.$$.fragment, local);
        transition_in(edit1.$$.fragment, local);
        transition_in(contentcopy1.$$.fragment, local);
        transition_in(edit2.$$.fragment, local);
        transition_in(help.$$.fragment, local);
        transition_in(contentcopy2.$$.fragment, local);

        for (var _i28 = 0; _i28 < each_value.length; _i28 += 1) {
          transition_in(each_blocks[_i28]);
        }

        current = true;
      },
      o: function outro(local) {
        transition_out(edit0.$$.fragment, local);
        transition_out(contentcopy0.$$.fragment, local);
        transition_out(edit1.$$.fragment, local);
        transition_out(contentcopy1.$$.fragment, local);
        transition_out(edit2.$$.fragment, local);
        transition_out(help.$$.fragment, local);
        transition_out(contentcopy2.$$.fragment, local);
        each_blocks = each_blocks.filter(Boolean);

        for (var _i29 = 0; _i29 < each_blocks.length; _i29 += 1) {
          transition_out(each_blocks[_i29]);
        }

        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div39);
        destroy_component(edit0);
        destroy_each(each_blocks_6, detaching);
        destroy_each(each_blocks_5, detaching);
        destroy_component(contentcopy0);
        destroy_each(each_blocks_4, detaching);
        destroy_each(each_blocks_3, detaching);
        destroy_component(edit1);
        destroy_each(each_blocks_2, detaching);
        destroy_component(contentcopy1);
        destroy_each(each_blocks_1, detaching);
        destroy_component(edit2);
        destroy_component(help);
        destroy_component(contentcopy2);
        destroy_each(each_blocks, detaching);
        mounted = false;
        run_all(dispose);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$3.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function copyToCBoard(n) {
    var element;

    if (n) {
      element = document.getElementById('output' + n);
    } // 新規にコピー用ダミー要素を作成


    var copyFrom = document.createElement("textarea"); // データをコピー 

    if (n === 3) {
      // TEXTAREA: 改行処理
      copyFrom.textContent = element.value.replaceAll('\n', '\\n'); // TEXTAREA
    } else {
      copyFrom.textContent = element.innerText;
    } // 一時的にbodyタグの要素を取得


    var bodyElm = document.getElementsByTagName("body")[0]; // 子要素にテキストエリアを配置

    bodyElm.appendChild(copyFrom); // テキストエリアの値を選択

    copyFrom.select(); // コピーコマンド発行

    var retVal = document.execCommand('copy'); // 追加テキストエリアを削除

    bodyElm.removeChild(copyFrom);
    return retVal;
  }

  function instance$3($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('DataEditor', slots, []);
    var oW = 0;
    var wInput1 = 0;
    var wInput2 = 0;
    var imgW = 0; // 商品用配列データ

    var items = [{
      var: 'id',
      bd: products.length + 1,
      ph: 'ID 番号'
    }, {
      var: 'code',
      bd: '',
      ph: '管理番号'
    }, {
      var: 'name',
      bd: '',
      ph: '商品名'
    }, {
      var: 'subtitle',
      bd: '',
      ph: 'サブタイトル'
    }, {
      var: 'price',
      bd: '',
      ph: '商品価格(円)'
    }, {
      var: 'gram',
      bd: '',
      ph: '量目(g,kg)'
    }, {
      var: 'max',
      bd: '10',
      ph: '数量'
    }, {
      var: 'sale',
      bd: '0',
      ph: 'SALE 表示'
    }, {
      var: 'shipping',
      bd: '0',
      ph: '送料無料'
    }, {
      var: 'sold',
      bd: '0',
      ph: '完売表示'
    }, {
      var: 'img',
      bd: '',
      ph: '画像ファイル名'
    }]; // CHIPS用配列データ

    var clips = [{
      var: 'primary',
      ph: 'メッセージ',
      bd: '',
      color: primary
    }, {
      var: 'secondary',
      ph: 'メッセージ',
      bd: '',
      color: secondary
    }, {
      var: 'success',
      ph: 'メッセージ',
      bd: '',
      color: success
    }, {
      var: 'danger',
      ph: 'メッセージ',
      bd: '',
      color: danger
    }, {
      var: 'warning',
      ph: 'メッセージ',
      bd: '',
      color: warning
    }, {
      var: 'info',
      ph: 'メッセージ',
      bd: '',
      color: info
    }, {
      var: 'light',
      ph: 'メッセージ',
      bd: '',
      color: light
    }, {
      var: 'dark',
      ph: 'メッセージ',
      bd: '',
      color: dark
    }];
    var _text = "";
    var text = "";
    var template1 = "";
    var template2 = "";
    var template3 = "";
    var br = '%0D%0A'; // メイルBODY 改行コード変換

    onMount$1(function () {
      [].map.call(document.querySelectorAll('.mdc-text-field'), function (el) {
        return new mdc.textField.MDCTextField(el);
      });
      new mdc.tabBar.MDCTabBar(document.querySelector('.mdc-tab-bar'));
      $$invalidate(12, mdtext = help_text); // 初期テキスト 	
    }); // 定形メイル

    var mail_items = [{
      var: 'email',
      bd: '',
      ph: '注文宛先メールアドレス'
    }, {
      var: 'subject',
      bd: '',
      ph: 'メール件名'
    }, {
      var: 'title',
      bd: '',
      ph: '本文タイトル(【商品注文】)'
    }, {
      var: 'message',
      bd: '',
      ph: '【伝言・意見・要望欄】'
    }, {
      var: 'template1',
      bd: '',
      ph: '挿入テキスト１'
    }, {
      var: 'template2',
      bd: '',
      ph: '※ 送料は確認メイルにてお伝え致します。'
    }, {
      var: 'template3',
      bd: '',
      ph: '挿入テキスト３'
    }]; // 挿入 Markdonw テキスト

    var mdtext = ""; // ヘルプ表示テキスト

    var help_text = "\nMarkdown \u8A18\u6CD5\n==========\n\n### \u57FA\u672C\n-  HTML \u3068\u5171\u5B58\u3057\u3066\u3044\u307E\u3059\u306E\u3067\u3001\u5168\u3066\u306E\u30BF\u30B0\u304C\u4F7F\u7528\u53EF\u80FD\u3067\u3059\u3002  \n-  \u5404\u3005\u306E\u8981\u7D20\u306F __CSS__ \u3067\u88C5\u98FE\u88DC\u5B8C\u304C\u53EF\u80FD\u3067\u3059\u3002  \n- \u6539\u884C\u306F **&lt;br&gt;** \u304B **\uFF9B\uFF9B** (\u534A\u89D2\u30B9\u30DA\u30FC\u30B9\uFF12\u3064)\u3092\u672B\u5C3E\u306B\u7F6E\u304D\u307E\u3059\u3002\n- \u5143\u30C6\u30AD\u30B9\u30C8\u3067\u306E  **ENTER** \u306B\u3088\u308B\u6539\u884C\u306F \u7121\u8996\u3055\u308C\u307E\u3059\u3002\n\n### \u30EA\u30F3\u30AF\n\n\u8A18\u6CD5\u306B\u3064\u3044\u3066\u306F\u4EE5\u4E0B\u306E\u30B5\u30A4\u30C8\u3092\u53C2\u7167\u3057\u3066\u4E0B\u3055\u3044:\n\n[Markdown\u8A18\u6CD5](https://www.markdown.jp/syntax/)  \n[markdown \u8A18\u6CD5 \u66F8\u304D\u65B9\u4E00\u89A7](https://hapicode.com/markdown.html)\n\n\n### \u898B\u51FA\u3057\n- \u5148\u982D\u306E # \u306E\u6570\u3067\u5927\u304D\u3055\u3092\u6307\u5B9A\u3057\u307E\u3059\u3002\n-  \u6B21\u884C\u306B = \u3092\u4ED8\u52A0\u3059\u308B\u306F **#** \uFF11\u3064\u3068\u540C\u7B49\u3067\u3059(\u898B\u6613\u3044\u69D8\u306B\u6570\u3092)\n\n\u898B\u51FA\u3057(=)\n=\n# \u898B\u51FA\u3057(#)\n## \u898B\u51FA\u3057(##)\n### \u898B\u51FA\u3057(###)\n#### \u898B\u51FA\u3057(####)\n##### \u898B\u51FA\u3057(#####)\n###### \u898B\u51FA\u3057(######)\n\n### \u6BB5\u843D\n\u6BB5\u843D\u306F\u7A7A\u884C\u3092\u633F\u5165\u3059\u308B\u3053\u3068\u884C\u3044\u307E\u3059\u3002\u6BB5\u843D\u306F\u7A7A\u884C\u3092\u633F\u5165\u3059\u308B\u3053\u3068\u884C\u3044\u307E\u3059\u3002\n\u6BB5\u843D\u306F\u7A7A\u884C\u3092\u633F\u5165\u3059\u308B\u3053\u3068\u884C\u3044\u307E\u3059\u3002  \n  \n\u6BB5\u843D\u306F\u7A7A\u884C\u3092\u633F\u5165\u3059\u308B\u3053\u3068\u884C\u3044\u307E\u3059\u3002  \n\n### \u6298\u308A\u7573\u307F\n<details><summary>\u8A73\u7D30\u3092\u898B\u308B</summary>\u89AA\u8B72\u308A\u306E\u7121\u9244\u7832\u3067\u5C0F\u4F9B\u306E\u6642\u304B\u3089\u640D\u3070\u304B\u308A\u3057\u3066\u3044\u308B\u3002\u5C0F\u5B66\u6821\u306B\u5C45\u308B\u6642\u5206\u5B66\u6821\u306E\u4E8C\u968E\u304B\u3089\u98DB\u3073\u964D\u308A\u3066\u4E00\u9031\u9593\u307B\u3069\u8170\u3092\u629C\u304B\u3057\u305F\u4E8B\u304C\u3042\u308B\u3002\u306A\u305C\u305D\u3093\u306A\u7121\u95C7\u3092\u3057\u305F\u3068\u805E\u304F\u4EBA\u304C\u3042\u308B\u304B\u3082\u77E5\u308C\u306C\u3002\u5225\u6BB5\u6DF1\u3044\u7406\u7531\u3067\u3082\u306A\u3044\u3002\u65B0\u7BC9\u306E\u4E8C\u968E\u304B\u3089\u9996\u3092\u51FA\u3057\u3066\u3044\u305F\u3089\u3001\u540C\u7D1A\u751F\u306E\u4E00\u4EBA\u304C\u5197\u8AC7\u306B\u3001\u3044\u304F\u3089\u5A01\u5F35\u3063\u3066\u3082\u3001\u305D\u3053\u304B\u3089\u98DB\u3073\u964D\u308A\u308B\u4E8B\u306F\u51FA\u6765\u307E\u3044\u3002\uFF08\u9752\u7A7A\u6587\u5EAB\u3088\u308A\uFF09\n</details>\n\n### \u5F15\u7528\n- \u5F15\u7528\u306F\u6587\u5B57\u5217\u306E\u5148\u982D\u306B **\uFF1E**(\u534A\u89D2) \u8A18\u53F7\u3092\u7F6E\u304D\u307E\u3059\u3002  \n- \u7F6B\u7DDA\u306F __CSS__ \u3067\u88DC\u5B8C\u3057\u307E\u3059\u3002  \n\n> \u5F15\u7528\u306F\u6587\u5B57\u5217\u306E\u5148\u982D\u306B \u8A18\u53F7\u3092\u7F6E\u304D\u307E\u3059\u3002  \n> \u5F15\u7528\u306F\u6587\u5B57\u5217\u306E\u5148\u982D\u306B\u8A18\u53F7\u3092\u7F6E\u304D\u307E\u3059\u3002  \n\n<style>\n/*  \u5F15\u7528\u88DC\u5B8C CSS */\nblockquote {\n  position: relative;\n  display: table;\n  margin: 1rem;\n  width: calc(100% - 2rem);\n  border-radius: 4px;\n  border-left: solid 4px #f0f0f0; \npadding-left: 14px;\n}\n\n</style>\n\n### \u5F37\u8ABF\n\n\u6211\u8F29\u306F*CAT*\u3067\u3042\u308B  \n\u6211\u8F29\u306F _CAT_ \u3067\u3042\u308B  \n\u6211\u8F29\u306F**\u732B**\u3067\u3042\u308B  \n\u6211\u8F29\u306F__\u732B__\u3067\u3042\u308B  \n\n\n### \u30EA\u30B9\u30C8\n\n- \u308A\u3093\u3054  \n- \u307F\u304B\u3093  \n 1. **\u5165\u308C\u5B50**\u306F\u534A\u89D2\u30B9\u30DA\u30FC\u30B9\u3067\u30A4\u30F3\u30C7\u30F3\u30C8\u3055\u305B\u307E\u3059\u3002  \n 1. **\u756A\u53F7\u4ED8\u304D**\u306F\u5148\u982D\u3092\u5168\u3066 **1.** ( \u6570\u5B57 1 \u3068\u30D4\u30EA\u30AA\u30C9) \u306B\u3057\u307E\u3059\u3002  \n 1. \u81EA\u52D5\u3067\u756A\u53F7\u304C\u632F\u3089\u308C\u307E\u3059\u3002\n- \u30D0\u30CA\u30CA\n\n\n### \u30C6\u30FC\u30D6\u30EB  \n\n- \u30C6\u30FC\u30D6\u30EB\u306E\u88C5\u98FE\u306F CSS \u3067\u884C\u3044\u307E\u3059\u3002\n\n<style>\n\n/* \u30C6\u30FC\u30D6\u30EB \u30B5\u30F3\u30D7\u30EB */\n.sample table {\nwidth: auto;\nborder-spacing: 0;\nborder-collapse: collapse;\nborder:  solid 1px #ccc;\n}\n\n.sample th {\ncolor: #4b636e;\npadding: 5px;\nborder: solid 1px #ccc;\nbackground: #e6ffff;\nfont-weight: bold;\nline-height: 120%;\n}\n\n.sample td {\npadding: 5px 30px;\nborder: solid 1px #ccc;\nborder-collapse: separate;\n}\n\n}\n\n</style>\n\n<div class=\"sample\">\n\n| \u54C1\u540D  | \u91CF\u76EE  | \u4FA1\u683C  |\n|:-----:|:-----:|:-----:|\n| \u308A\u3093\u3054 | 2kg | 000\u5186| \n| \u307F\u304B\u3093 | 2kg | 000\u5186| \n| \u30D0\u30CA\u30CA | 2kg | 000\u5186| \n\n</div>\n\n# \u753B\u50CF\u306E\u633F\u5165\n\n- \u753B\u50CF\u306E\u5927\u5C0F\u3001\u4F4D\u7F6E\u306E\u6307\u5B9A\u306F CSS \u3067\u884C\u3044\u307E\u3059\u3002\n\n**\u5143\u753B\u50CF**\n\n![\u30B5\u30F3\u30D7\u30EB\u753B\u50CF](./images/product002.jpg\u3000\"\u30B5\u30F3\u30D7\u30EB\u753B\u50CF\")\n\n\n**\u8ABF\u6574\u5F8C\u753B\u50CF**\n\n<div class=\"image1\">\n\n![\u30B5\u30F3\u30D7\u30EB\u753B\u50CF](./images/product002.jpg\u3000\"\u30B5\u30F3\u30D7\u30EB\u753B\u50CF\")\n\n</div>\n\n<div class=\"image2\">\n\n![\u30B5\u30F3\u30D7\u30EB\u753B\u50CF](./images/product002.jpg\u3000\"\u30B5\u30F3\u30D7\u30EB\u753B\u50CF\")\n\n</div>\n\n<style>\n\n.image1 img,.image2 img{\n   border-radius:10px;\n}\n\n.image1 img{\n   float:left;\n   width:160px;\n   margin-left:40px;\n}\n.image2 img{\n   width:200px;\n   margin-left:10px;\n}\n\n</style>\n\n<br>\n<br>\n<br>\n<br>\n\t\n\t"; // ページを指定して内容の表示

    function openText(n) {
      if (n === -1) {
        $$invalidate(12, mdtext = help_text);
      } else {
        $$invalidate(12, mdtext = user_pages[n].content); // alert(n);
      }
    }

    var writable_props = [];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<DataEditor> was created with unknown prop '".concat(key, "'"));
    });

    function onwindowresize() {
      $$invalidate(0, oW = window.outerWidth);
    }

    function input_input_handler(each_value_6, i) {
      each_value_6[i].bd = this.value;
      $$invalidate(6, items);
    }

    function input0_input_handler(each_value_5, i) {
      each_value_5[i].bd = this.value;
      $$invalidate(7, clips);
    }

    function textarea0_input_handler() {
      text = this.value;
      $$invalidate(1, text);
    }

    var click_handler = function click_handler() {
      return copyToCBoard(1);
    };

    function input_input_handler_1(i) {
      mail_items[i].bd = this.value;
      $$invalidate(2, mail_items);
    }

    function textarea1_input_handler() {
      mail_items[4].bd = this.value;
      $$invalidate(2, mail_items);
    }

    function textarea2_input_handler() {
      mail_items[5].bd = this.value;
      $$invalidate(2, mail_items);
    }

    function input_input_handler_2() {
      mail_items[3].bd = this.value;
      $$invalidate(2, mail_items);
    }

    function textarea3_input_handler() {
      mail_items[6].bd = this.value;
      $$invalidate(2, mail_items);
    }

    var click_handler_1 = function click_handler_1() {
      return copyToCBoard(2);
    };

    var click_handler_2 = function click_handler_2() {
      return openText(-1);
    };

    var click_handler_3 = function click_handler_3() {
      return copyToCBoard(3);
    };

    var click_handler_4 = function click_handler_4(i) {
      return openText(i);
    };

    function textarea4_input_handler() {
      mdtext = this.value;
      $$invalidate(12, mdtext);
    }

    $$self.$capture_state = function () {
      return {
        ContentCopy: Content_copy,
        Edit: Edit,
        Help: Help,
        FileText: File_text,
        onMount: onMount$1,
        oW: oW,
        wInput1: wInput1,
        wInput2: wInput2,
        imgW: imgW,
        items: items,
        clips: clips,
        _text: _text,
        text: text,
        template1: template1,
        template2: template2,
        template3: template3,
        br: br,
        mail_items: mail_items,
        copyToCBoard: copyToCBoard,
        marked: marked,
        mdtext: mdtext,
        help_text: help_text,
        openText: openText
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('oW' in $$props) $$invalidate(0, oW = $$props.oW);
      if ('wInput1' in $$props) $$invalidate(3, wInput1 = $$props.wInput1);
      if ('wInput2' in $$props) $$invalidate(4, wInput2 = $$props.wInput2);
      if ('imgW' in $$props) $$invalidate(5, imgW = $$props.imgW);
      if ('items' in $$props) $$invalidate(6, items = $$props.items);
      if ('clips' in $$props) $$invalidate(7, clips = $$props.clips);
      if ('_text' in $$props) $$invalidate(8, _text = $$props._text);
      if ('text' in $$props) $$invalidate(1, text = $$props.text);
      if ('template1' in $$props) $$invalidate(9, template1 = $$props.template1);
      if ('template2' in $$props) $$invalidate(10, template2 = $$props.template2);
      if ('template3' in $$props) $$invalidate(11, template3 = $$props.template3);
      if ('br' in $$props) $$invalidate(29, br = $$props.br);
      if ('mail_items' in $$props) $$invalidate(2, mail_items = $$props.mail_items);
      if ('mdtext' in $$props) $$invalidate(12, mdtext = $$props.mdtext);
      if ('help_text' in $$props) help_text = $$props.help_text;
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    $$self.$$.update = function () {
      if ($$self.$$.dirty[0] &
      /*text, mail_items, oW*/
      7) {
        {
          // 商品説明テキスト
          if (text !== "") {
            $$invalidate(8, _text = "- " + text.replaceAll('\n', '\\n- '));
          } else if (text === "") {
            $$invalidate(8, _text = ""); // 補正
          } // 定形メイル　挿入テキスト


          if (mail_items[4].bd !== "") {
            $$invalidate(9, template1 = mail_items[4].bd.replaceAll('\n', br));
          } else if (mail_items[4].bd === "") {
            $$invalidate(9, template1 = ""); // 補正
          }

          if (mail_items[5].bd !== "") {
            $$invalidate(10, template2 = mail_items[5].bd.replaceAll('\n', br));
          } else if (mail_items[5].bd === "") {
            $$invalidate(10, template2 = "");
          }

          if (mail_items[6].bd !== "") {
            $$invalidate(11, template3 = mail_items[6].bd.replaceAll('\n', br));
          } else if (mail_items[6].bd === "") {
            $$invalidate(11, template3 = "");
          } // 端末表示の振り分け  


          if (oW > 620) {
            $$invalidate(3, wInput1 = 220);
            $$invalidate(4, wInput2 = 220);
            $$invalidate(5, imgW = 400);
          }

          if (oW <= 620) {
            $$invalidate(3, wInput1 = 200);
            $$invalidate(4, wInput2 = 180);
            $$invalidate(5, imgW = 260);
          }

          if (oW <= 400) {
            $$invalidate(3, wInput1 = 260);
            $$invalidate(4, wInput2 = 200);
            $$invalidate(5, imgW = 300);
          }
        }
      }
    };

    return [oW, text, mail_items, wInput1, wInput2, imgW, items, clips, _text, template1, template2, template3, mdtext, openText, onwindowresize, input_input_handler, input0_input_handler, textarea0_input_handler, click_handler, input_input_handler_1, textarea1_input_handler, textarea2_input_handler, input_input_handler_2, textarea3_input_handler, click_handler_1, click_handler_2, click_handler_3, click_handler_4, textarea4_input_handler];
  }

  var DataEditor = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(DataEditor, _SvelteComponentDev);

    var _super = _createSuper$3(DataEditor);

    function DataEditor(options) {
      var _this;

      _classCallCheck(this, DataEditor);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$3, create_fragment$3, safe_not_equal, {}, null, [-1, -1]);
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "DataEditor",
        options: options,
        id: create_fragment$3.name
      });
      return _this;
    }

    return DataEditor;
  }(SvelteComponentDev);

  function _createSuper$2(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$2(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$2() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$2 = "src/pages/Pages.svelte";

  function create_fragment$2(ctx) {
    var div;
    var raw_value = marked(user_pages[
    /*page*/
    ctx[0] - 1].content) + "";
    var block = {
      c: function create() {
        div = element("div");
        attr_dev(div, "class", "main svelte-1haghru");
        add_location(div, file$2, 8, 0, 80);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, div, anchor);
        div.innerHTML = raw_value;
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*page*/
        1 && raw_value !== (raw_value = marked(user_pages[
        /*page*/
        ctx[0] - 1].content) + "")) div.innerHTML = raw_value;
      },
      i: noop,
      o: noop,
      d: function destroy(detaching) {
        if (detaching) detach_dev(div);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$2.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$2($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Pages', slots, []);
    var page = $$props.page;
    var writable_props = ['page'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Pages> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$$set = function ($$props) {
      if ('page' in $$props) $$invalidate(0, page = $$props.page);
    };

    $$self.$capture_state = function () {
      return {
        page: page,
        marked: marked
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('page' in $$props) $$invalidate(0, page = $$props.page);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [page];
  }

  var Pages = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Pages, _SvelteComponentDev);

    var _super = _createSuper$2(Pages);

    function Pages(options) {
      var _this;

      _classCallCheck(this, Pages);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$2, create_fragment$2, safe_not_equal, {
        page: 0
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Pages",
        options: options,
        id: create_fragment$2.name
      });
      var ctx = _this.$$.ctx;
      var props = options.props || {};

      if (
      /*page*/
      ctx[0] === undefined && !('page' in props)) {
        console.warn("<Pages> was created without expected prop 'page'");
      }

      return _this;
    }

    _createClass(Pages, [{
      key: "page",
      get: function get() {
        throw new Error("<Pages>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<Pages>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return Pages;
  }(SvelteComponentDev);

  function _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct$1() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var file$1 = "src/pages/Infomations.svelte";

  function create_fragment$1(ctx) {
    var div1;
    var div0;
    var doublearrow;
    var t0;
    var t1_value = user_pages[
    /*$pageNum*/
    ctx[0] - 1].subject + "";
    var t1;
    var t2;
    var switch_instance;
    var current;
    doublearrow = new Double_arrow({
      props: {
        color: "#7da453",
        size: "0.8em"
      },
      $$inline: true
    });
    var switch_value = Pages;

    function switch_props(ctx) {
      return {
        props: {
          page:
          /*$pageNum*/
          ctx[0]
        },
        $$inline: true
      };
    }

    if (switch_value) {
      switch_instance = new switch_value(switch_props(ctx));
    }

    var block = {
      c: function create() {
        div1 = element("div");
        div0 = element("div");
        create_component(doublearrow.$$.fragment);
        t0 = space();
        t1 = text(t1_value);
        t2 = space();
        if (switch_instance) create_component(switch_instance.$$.fragment);
        attr_dev(div0, "class", "breadcrumb-title svelte-1747fzu");
        add_location(div0, file$1, 15, 3, 239);
        attr_dev(div1, "class", "container");
        add_location(div1, file$1, 13, 0, 211);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        insert_dev(target, div1, anchor);
        append_dev(div1, div0);
        mount_component(doublearrow, div0, null);
        append_dev(div0, t0);
        append_dev(div0, t1);
        append_dev(div1, t2);

        if (switch_instance) {
          mount_component(switch_instance, div1, null);
        }

        current = true;
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if ((!current || dirty &
        /*$pageNum*/
        1) && t1_value !== (t1_value = user_pages[
        /*$pageNum*/
        ctx[0] - 1].subject + "")) set_data_dev(t1, t1_value);
        var switch_instance_changes = {};
        if (dirty &
        /*$pageNum*/
        1) switch_instance_changes.page =
        /*$pageNum*/
        ctx[0];

        if (switch_value !== (switch_value = Pages)) {
          if (switch_instance) {
            group_outros();
            var old_component = switch_instance;
            transition_out(old_component.$$.fragment, 1, 0, function () {
              destroy_component(old_component, 1);
            });
            check_outros();
          }

          if (switch_value) {
            switch_instance = new switch_value(switch_props(ctx));
            create_component(switch_instance.$$.fragment);
            transition_in(switch_instance.$$.fragment, 1);
            mount_component(switch_instance, div1, null);
          } else {
            switch_instance = null;
          }
        } else if (switch_value) {
          switch_instance.$set(switch_instance_changes);
        }
      },
      i: function intro(local) {
        if (current) return;
        transition_in(doublearrow.$$.fragment, local);
        if (switch_instance) transition_in(switch_instance.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        transition_out(doublearrow.$$.fragment, local);
        if (switch_instance) transition_out(switch_instance.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div1);
        destroy_component(doublearrow);
        if (switch_instance) destroy_component(switch_instance);
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment$1.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function instance$1($$self, $$props, $$invalidate) {
    var $pageNum;
    validate_store(pageNum, 'pageNum');
    component_subscribe($$self, pageNum, function ($$value) {
      return $$invalidate(0, $pageNum = $$value);
    });
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('Infomations', slots, []);
    var writable_props = [];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Infomations> was created with unknown prop '".concat(key, "'"));
    });

    $$self.$capture_state = function () {
      return {
        Info: Info,
        DoubleArrow: Double_arrow,
        pageNum: pageNum,
        Pages: Pages,
        $pageNum: $pageNum
      };
    };

    return [$pageNum];
  }

  var Infomations = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(Infomations, _SvelteComponentDev);

    var _super = _createSuper$1(Infomations);

    function Infomations(options) {
      var _this;

      _classCallCheck(this, Infomations);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance$1, create_fragment$1, safe_not_equal, {});
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "Infomations",
        options: options,
        id: create_fragment$1.name
      });
      return _this;
    }

    return Infomations;
  }(SvelteComponentDev);

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  var window_1 = globals.window;
  var file = "src/App.svelte"; // (96:0) {#if y > 200}

  function create_if_block(ctx) {
    var div1;
    var button;
    var div0;
    var t;
    var keyboardarrowup;
    var current;
    var mounted;
    var dispose;
    keyboardarrowup = new Keyboard_arrow_up({
      props: {
        size: "4em",
        color: "#fff"
      },
      $$inline: true
    });
    var block = {
      c: function create() {
        div1 = element("div");
        button = element("button");
        div0 = element("div");
        t = space();
        create_component(keyboardarrowup.$$.fragment);
        attr_dev(div0, "class", "mdc-fab__ripple");
        add_location(div0, file, 103, 8, 2473);
        attr_dev(button, "class", "mdc-fab btn-color");
        attr_dev(button, "aria-label", "Favorite");
        set_style(button, "background-color", "rgba(37,93,0,0.8)");
        attr_dev(button, "title", "More options");
        add_location(button, file, 98, 6, 2280);
        attr_dev(div1, "id", "btn-to-top");
        attr_dev(div1, "class", "svelte-4ubly");
        add_location(div1, file, 97, 3, 2252);
      },
      m: function mount(target, anchor) {
        insert_dev(target, div1, anchor);
        append_dev(div1, button);
        append_dev(button, div0);
        append_dev(button, t);
        mount_component(keyboardarrowup, button, null);
        current = true;

        if (!mounted) {
          dispose = listen_dev(button, "click",
          /*click_handler*/
          ctx[6], false, false, false);
          mounted = true;
        }
      },
      p: noop,
      i: function intro(local) {
        if (current) return;
        transition_in(keyboardarrowup.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        transition_out(keyboardarrowup.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (detaching) detach_dev(div1);
        destroy_component(keyboardarrowup);
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_if_block.name,
      type: "if",
      source: "(96:0) {#if y > 200}",
      ctx: ctx
    });
    return block;
  }

  function create_fragment(ctx) {
    var scrolling = false;

    var clear_scrolling = function clear_scrolling() {
      scrolling = false;
    };

    var scrolling_timeout;
    var t0;
    var navbar;
    var t1;
    var switch_instance;
    var t2;
    var footer;
    var current;
    var mounted;
    var dispose;
    add_render_callback(
    /*onwindowscroll*/
    ctx[5]);
    var if_block =
    /*y*/
    ctx[3] > 200 && create_if_block(ctx);
    navbar = new Navbar({
      props: {
        creator:
        /*creator*/
        ctx[0],
        administration:
        /*administration*/
        ctx[4]
      },
      $$inline: true
    });
    var switch_value =
    /*page*/
    ctx[2];

    function switch_props(ctx) {
      return {
        props: {
          date:
          /*presets*/
          ctx[1].date
        },
        $$inline: true
      };
    }

    if (switch_value) {
      switch_instance = new switch_value(switch_props(ctx));
    }

    footer = new Footer({
      props: {
        year:
        /*presets*/
        ctx[1].year,
        creator:
        /*creator*/
        ctx[0]
      },
      $$inline: true
    });
    var block = {
      c: function create() {
        if (if_block) if_block.c();
        t0 = space();
        create_component(navbar.$$.fragment);
        t1 = space();
        if (switch_instance) create_component(switch_instance.$$.fragment);
        t2 = space();
        create_component(footer.$$.fragment);
      },
      l: function claim(nodes) {
        throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
      },
      m: function mount(target, anchor) {
        if (if_block) if_block.m(target, anchor);
        insert_dev(target, t0, anchor);
        mount_component(navbar, target, anchor);
        insert_dev(target, t1, anchor);

        if (switch_instance) {
          mount_component(switch_instance, target, anchor);
        }

        insert_dev(target, t2, anchor);
        mount_component(footer, target, anchor);
        current = true;

        if (!mounted) {
          dispose = listen_dev(window_1, "scroll", function () {
            scrolling = true;
            clearTimeout(scrolling_timeout);
            scrolling_timeout = setTimeout(clear_scrolling, 100);
            /*onwindowscroll*/

            ctx[5]();
          });
          mounted = true;
        }
      },
      p: function update(ctx, _ref) {
        var _ref2 = _slicedToArray(_ref, 1),
            dirty = _ref2[0];

        if (dirty &
        /*y*/
        8 && !scrolling) {
          scrolling = true;
          clearTimeout(scrolling_timeout);
          scrollTo(window_1.pageXOffset,
          /*y*/
          ctx[3]);
          scrolling_timeout = setTimeout(clear_scrolling, 100);
        }

        if (
        /*y*/
        ctx[3] > 200) {
          if (if_block) {
            if_block.p(ctx, dirty);

            if (dirty &
            /*y*/
            8) {
              transition_in(if_block, 1);
            }
          } else {
            if_block = create_if_block(ctx);
            if_block.c();
            transition_in(if_block, 1);
            if_block.m(t0.parentNode, t0);
          }
        } else if (if_block) {
          group_outros();
          transition_out(if_block, 1, 1, function () {
            if_block = null;
          });
          check_outros();
        }

        var navbar_changes = {};
        if (dirty &
        /*creator*/
        1) navbar_changes.creator =
        /*creator*/
        ctx[0];
        navbar.$set(navbar_changes);
        var switch_instance_changes = {};
        if (dirty &
        /*presets*/
        2) switch_instance_changes.date =
        /*presets*/
        ctx[1].date;

        if (switch_value !== (switch_value =
        /*page*/
        ctx[2])) {
          if (switch_instance) {
            group_outros();
            var old_component = switch_instance;
            transition_out(old_component.$$.fragment, 1, 0, function () {
              destroy_component(old_component, 1);
            });
            check_outros();
          }

          if (switch_value) {
            switch_instance = new switch_value(switch_props(ctx));
            create_component(switch_instance.$$.fragment);
            transition_in(switch_instance.$$.fragment, 1);
            mount_component(switch_instance, t2.parentNode, t2);
          } else {
            switch_instance = null;
          }
        } else if (switch_value) {
          switch_instance.$set(switch_instance_changes);
        }

        var footer_changes = {};
        if (dirty &
        /*presets*/
        2) footer_changes.year =
        /*presets*/
        ctx[1].year;
        if (dirty &
        /*creator*/
        1) footer_changes.creator =
        /*creator*/
        ctx[0];
        footer.$set(footer_changes);
      },
      i: function intro(local) {
        if (current) return;
        transition_in(if_block);
        transition_in(navbar.$$.fragment, local);
        if (switch_instance) transition_in(switch_instance.$$.fragment, local);
        transition_in(footer.$$.fragment, local);
        current = true;
      },
      o: function outro(local) {
        transition_out(if_block);
        transition_out(navbar.$$.fragment, local);
        if (switch_instance) transition_out(switch_instance.$$.fragment, local);
        transition_out(footer.$$.fragment, local);
        current = false;
      },
      d: function destroy(detaching) {
        if (if_block) if_block.d(detaching);
        if (detaching) detach_dev(t0);
        destroy_component(navbar, detaching);
        if (detaching) detach_dev(t1);
        if (switch_instance) destroy_component(switch_instance, detaching);
        if (detaching) detach_dev(t2);
        destroy_component(footer, detaching);
        mounted = false;
        dispose();
      }
    };
    dispatch_dev("SvelteRegisterBlock", {
      block: block,
      id: create_fragment.name,
      type: "component",
      source: "",
      ctx: ctx
    });
    return block;
  }

  function toTop() {
    document.body.scrollTop = 0;
    document.documentElement.scrollTop = 0;
  }

  function instance($$self, $$props, $$invalidate) {
    var _$$props$$$slots = $$props.$$slots,
        slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
        $$props.$$scope;
    validate_slots('App', slots, []);
    var administration = 1;
    var creator = $$props.creator;
    var presets = $$props.presets; // ROUTER 

    var routes = {};
    var page = Home; // 初期ページ

    function route(path, controller) {
      routes[path] = {
        controller: controller
      };
    }

    var el = null;

    function router() {
      // Lazy load view element:
      // Current route url (getting rid of '#' in hash as well):
      var url = location.hash.slice(1) || '/'; // Get route by url:

      var route = routes[url]; // エラーページの表示

      if (route === undefined) {
        $$invalidate(2, page = NotFound);
        return;
      } // Do we have both a view and a route?


      if (route.controller) {
        route.controller();
      }
    } // Listen on hash change:


    window.addEventListener('hashchange', router); // Listen on page load:

    window.addEventListener('load', router); // PAGE 設定

    route('/', function () {
      $$invalidate(2, page = Home);
    });
    route('/home', function () {
      $$invalidate(2, page = Home);
    });
    route('/settings', function () {
      $$invalidate(2, page = Settings_1);
    });
    route('/about', function () {
      $$invalidate(2, page = About);
    });
    route('/data-editor', function () {
      $$invalidate(2, page = DataEditor);
    });
    route('/infomations', function () {
      $$invalidate(2, page = Infomations);
    });
    var y = 0; // スクロール位置：Y座標初期値 

    var writable_props = ['creator', 'presets'];
    Object.keys($$props).forEach(function (key) {
      if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<App> was created with unknown prop '".concat(key, "'"));
    });

    function onwindowscroll() {
      $$invalidate(3, y = window_1.pageYOffset);
    }

    var click_handler = function click_handler() {
      return toTop();
    };

    $$self.$$set = function ($$props) {
      if ('creator' in $$props) $$invalidate(0, creator = $$props.creator);
      if ('presets' in $$props) $$invalidate(1, presets = $$props.presets);
    };

    $$self.$capture_state = function () {
      return {
        administration: administration,
        creator: creator,
        presets: presets,
        KeyboardArrowUp: Keyboard_arrow_up,
        Navbar: Navbar,
        Footer: Footer,
        Home: Home,
        NotFound: NotFound,
        Settings: Settings_1,
        About: About,
        DataEditor: DataEditor,
        Infomations: Infomations,
        routes: routes,
        page: page,
        route: route,
        el: el,
        router: router,
        y: y,
        toTop: toTop
      };
    };

    $$self.$inject_state = function ($$props) {
      if ('administration' in $$props) $$invalidate(4, administration = $$props.administration);
      if ('creator' in $$props) $$invalidate(0, creator = $$props.creator);
      if ('presets' in $$props) $$invalidate(1, presets = $$props.presets);
      if ('routes' in $$props) routes = $$props.routes;
      if ('page' in $$props) $$invalidate(2, page = $$props.page);
      if ('el' in $$props) el = $$props.el;
      if ('y' in $$props) $$invalidate(3, y = $$props.y);
    };

    if ($$props && "$$inject" in $$props) {
      $$self.$inject_state($$props.$$inject);
    }

    return [creator, presets, page, y, administration, onwindowscroll, click_handler];
  }

  var App = /*#__PURE__*/function (_SvelteComponentDev) {
    _inherits(App, _SvelteComponentDev);

    var _super = _createSuper(App);

    function App(options) {
      var _this;

      _classCallCheck(this, App);

      _this = _super.call(this, options);
      init(_assertThisInitialized(_this), options, instance, create_fragment, safe_not_equal, {
        creator: 0,
        presets: 1
      });
      dispatch_dev("SvelteRegisterComponent", {
        component: _assertThisInitialized(_this),
        tagName: "App",
        options: options,
        id: create_fragment.name
      });
      var ctx = _this.$$.ctx;
      var props = options.props || {};

      if (
      /*creator*/
      ctx[0] === undefined && !('creator' in props)) {
        console.warn("<App> was created without expected prop 'creator'");
      }

      if (
      /*presets*/
      ctx[1] === undefined && !('presets' in props)) {
        console.warn("<App> was created without expected prop 'presets'");
      }

      return _this;
    }

    _createClass(App, [{
      key: "creator",
      get: function get() {
        throw new Error("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }, {
      key: "presets",
      get: function get() {
        throw new Error("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      },
      set: function set(value) {
        throw new Error("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
      }
    }]);

    return App;
  }(SvelteComponentDev);

  window.onMount = onMount$1;
  var app = new App({
    target: document.body,
    props: {
      presets: {
        year: new Date().getFullYear()
      },
      creator: {
        app_name: 'svelte-eCart',
        name: '藍土工房',
        mail: 'land_koubou\@yahoo.co.jp',
        url: 'https://github.com/ru-museum/'
      }
    }
  });

  return app;

})();
//# sourceMappingURL=bundle.js.map
